TYPE:  enum  NAME:  SortFlags
	NAME: SORT_EVERY_ROW  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: SORT_EVERY_COLUMN  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: SORT_ASCENDING  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: SORT_DESCENDING  POS:  16  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  CovarFlags
	NAME: COVAR_SCRAMBLED  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: COVAR_NORMAL  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: COVAR_USE_AVG  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: COVAR_SCALE  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: COVAR_ROWS  POS:  8  DEFAULT VALUE:  []  MODS:  []
	NAME: COVAR_COLS  POS:  16  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  KmeansFlags
	NAME: KMEANS_RANDOM_CENTERS  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: KMEANS_PP_CENTERS  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: KMEANS_USE_INITIAL_LABELS  POS:  1  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ReduceTypes
	NAME: REDUCE_SUM  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: REDUCE_AVG  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: REDUCE_MAX  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: REDUCE_MIN  POS:  3  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  borderInterpolate RETURN TYPE:  int modlist =  []
	TYPE: int  NAME:  p  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  len  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  copyMakeBorder RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  top  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  bottom  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  left  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  right  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  value  DEFAULT VALUE:  Scalar()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  copyMakeBorder RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  top  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  bottom  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  left  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  right  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  value  DEFAULT VALUE:  Scalar()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  add RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: int  NAME:  dtype  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  add RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: int  NAME:  dtype  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  subtract RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: int  NAME:  dtype  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  subtract RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: int  NAME:  dtype  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  multiply RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  scale  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  dtype  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  multiply RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  scale  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  dtype  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  divide RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  scale  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  dtype  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  divide RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  scale  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  dtype  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  divide RETURN TYPE:  void modlist =  []
	TYPE: double  NAME:  scale  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  dtype  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  divide RETURN TYPE:  void modlist =  []
	TYPE: double  NAME:  scale  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  dtype  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  scaleAdd RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  alpha  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  scaleAdd RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  alpha  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  addWeighted RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  alpha  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  beta  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  gamma  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  dtype  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  addWeighted RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  alpha  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  beta  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  gamma  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  dtype  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  convertScaleAbs RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  alpha  DEFAULT VALUE:  1  MODS:  []
	TYPE: double  NAME:  beta  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  convertScaleAbs RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  alpha  DEFAULT VALUE:  1  MODS:  []
	TYPE: double  NAME:  beta  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  convertFp16 RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  convertFp16 RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  LUT RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  lut  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  LUT RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  lut  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  sum RETURN TYPE:  Scalar modlist =  ['=sumElems']
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  sum RETURN TYPE:  Scalar modlist =  ['=sumElems']
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  countNonZero RETURN TYPE:  int modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  countNonZero RETURN TYPE:  int modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  findNonZero RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  idx  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  findNonZero RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  idx  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  mean RETURN TYPE:  Scalar modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  mean RETURN TYPE:  Scalar modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  meanStdDev RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mean  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  stddev  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  meanStdDev RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mean  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  stddev  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  norm RETURN TYPE:  double modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  normType  DEFAULT VALUE:  NORM_L2  MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  norm RETURN TYPE:  double modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  normType  DEFAULT VALUE:  NORM_L2  MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  norm RETURN TYPE:  double modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  normType  DEFAULT VALUE:  NORM_L2  MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  norm RETURN TYPE:  double modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  normType  DEFAULT VALUE:  NORM_L2  MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  PSNR RETURN TYPE:  double modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  R  DEFAULT VALUE:  255.  MODS:  []

TYPE: function NAME:  PSNR RETURN TYPE:  double modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  R  DEFAULT VALUE:  255.  MODS:  []

TYPE: function NAME:  batchDistance RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dist  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  dtype  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  nidx  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  normType  DEFAULT VALUE:  NORM_L2  MODS:  []
	TYPE: int  NAME:  K  DEFAULT VALUE:  0  MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: int  NAME:  update  DEFAULT VALUE:  0  MODS:  []
	TYPE: bool  NAME:  crosscheck  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  batchDistance RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dist  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  dtype  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  nidx  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  normType  DEFAULT VALUE:  NORM_L2  MODS:  []
	TYPE: int  NAME:  K  DEFAULT VALUE:  0  MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: int  NAME:  update  DEFAULT VALUE:  0  MODS:  []
	TYPE: bool  NAME:  crosscheck  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  normalize RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: double  NAME:  alpha  DEFAULT VALUE:  1  MODS:  []
	TYPE: double  NAME:  beta  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  norm_type  DEFAULT VALUE:  NORM_L2  MODS:  []
	TYPE: int  NAME:  dtype  DEFAULT VALUE:  -1  MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  normalize RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: double  NAME:  alpha  DEFAULT VALUE:  1  MODS:  []
	TYPE: double  NAME:  beta  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  norm_type  DEFAULT VALUE:  NORM_L2  MODS:  []
	TYPE: int  NAME:  dtype  DEFAULT VALUE:  -1  MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  minMaxLoc RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: double*  NAME:  minVal  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double*  NAME:  maxVal  DEFAULT VALUE:  0  MODS:  ['/O']
	TYPE: Point*  NAME:  minLoc  DEFAULT VALUE:  0  MODS:  ['/O']
	TYPE: Point*  NAME:  maxLoc  DEFAULT VALUE:  0  MODS:  ['/O']
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  minMaxLoc RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: double*  NAME:  minVal  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double*  NAME:  maxVal  DEFAULT VALUE:  0  MODS:  ['/O']
	TYPE: Point*  NAME:  minLoc  DEFAULT VALUE:  0  MODS:  ['/O']
	TYPE: Point*  NAME:  maxLoc  DEFAULT VALUE:  0  MODS:  ['/O']
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  reduce RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  dim  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  rtype  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  dtype  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  reduce RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  dim  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  rtype  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  dtype  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  merge RETURN TYPE:  void modlist =  []
	TYPE: vector_Mat  NAME:  mv  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  merge RETURN TYPE:  void modlist =  []
	TYPE: vector_UMat  NAME:  mv  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  split RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  m  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  mv  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  split RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  m  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  mv  DEFAULT VALUE:    MODS:  ['/O']

['cv.mixChannels', 'void', [], [['vector_Mat', 'src', '', []], ['vector_Mat', 'dst', '', ['/IO']], ['vector_int', 'fromTo', '', ['/C', '/Ref']]], 'void', '@overload\n@param src input array or vector of matrices; all of the matrices must have the same size and the\nsame depth.\n@param dst output array or vector of matrices; all the matrices **must be allocated**; their size and\ndepth must be the same as in src[0].\n@param fromTo array of index pairs specifying which channels are copied and where; fromTo[k\\*2] is\na 0-based index of the input channel in src, fromTo[k\\*2+1] is an index of the output channel in\ndst; the continuous channel numbering is used: the first input image channels are indexed from 0 to\nsrc[0].channels()-1, the second input image channels are indexed from src[0].channels() to\nsrc[0].channels() + src[1].channels()-1, and so on, the same scheme is used for the output image\nchannels; as a special case, when fromTo[k\\*2] is negative, the corresponding output channel is\nfilled with zero .']
TYPE: function NAME:  mixChannels RETURN TYPE:  void modlist =  []
	TYPE: vector_Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: vector_int  NAME:  fromTo  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

['cv.mixChannels', 'void', [], [['vector_UMat', 'src', '', []], ['vector_UMat', 'dst', '', ['/IO']], ['vector_int', 'fromTo', '', ['/C', '/Ref']]], 'void', '@overload\n@param src input array or vector of matrices; all of the matrices must have the same size and the\nsame depth.\n@param dst output array or vector of matrices; all the matrices **must be allocated**; their size and\ndepth must be the same as in src[0].\n@param fromTo array of index pairs specifying which channels are copied and where; fromTo[k\\*2] is\na 0-based index of the input channel in src, fromTo[k\\*2+1] is an index of the output channel in\ndst; the continuous channel numbering is used: the first input image channels are indexed from 0 to\nsrc[0].channels()-1, the second input image channels are indexed from src[0].channels() to\nsrc[0].channels() + src[1].channels()-1, and so on, the same scheme is used for the output image\nchannels; as a special case, when fromTo[k\\*2] is negative, the corresponding output channel is\nfilled with zero .']
TYPE: function NAME:  mixChannels RETURN TYPE:  void modlist =  []
	TYPE: vector_UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: vector_int  NAME:  fromTo  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  extractChannel RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  coi  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  extractChannel RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  coi  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  insertChannel RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: int  NAME:  coi  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  insertChannel RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: int  NAME:  coi  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  flip RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flipCode  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  flip RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flipCode  DEFAULT VALUE:    MODS:  []

TYPE:  enum  NAME:  RotateFlags
	NAME: ROTATE_90_CLOCKWISE  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ROTATE_180  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: ROTATE_90_COUNTERCLOCKWISE  POS:  2  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  rotate RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  rotateCode  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  rotate RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  rotateCode  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  repeat RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ny  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  nx  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  repeat RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ny  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  nx  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  hconcat RETURN TYPE:  void modlist =  []
	TYPE: vector_Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  hconcat RETURN TYPE:  void modlist =  []
	TYPE: vector_UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  vconcat RETURN TYPE:  void modlist =  []
	TYPE: vector_Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  vconcat RETURN TYPE:  void modlist =  []
	TYPE: vector_UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  bitwise_and RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  bitwise_and RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  bitwise_or RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  bitwise_or RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  bitwise_xor RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  bitwise_xor RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  bitwise_not RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  bitwise_not RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  absdiff RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  absdiff RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  copyTo RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  copyTo RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  inRange RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  lowerb  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  upperb  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  inRange RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  lowerb  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  upperb  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  compare RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  cmpop  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  compare RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  cmpop  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  min RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  min RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  max RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  max RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  sqrt RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  sqrt RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  pow RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  power  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  pow RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  power  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  exp RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  exp RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  log RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  log RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  polarToCart RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  magnitude  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  angle  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  x  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  y  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  angleInDegrees  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  polarToCart RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  magnitude  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  angle  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  x  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  y  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  angleInDegrees  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  cartToPolar RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  x  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  y  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  magnitude  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  angle  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  angleInDegrees  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  cartToPolar RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  x  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  y  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  magnitude  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  angle  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  angleInDegrees  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  phase RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  x  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  y  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  angle  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  angleInDegrees  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  phase RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  x  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  y  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  angle  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  angleInDegrees  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  magnitude RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  x  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  y  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  magnitude  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  magnitude RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  x  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  y  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  magnitude  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  checkRange RETURN TYPE:  bool modlist =  []
	TYPE: Mat  NAME:  a  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  quiet  DEFAULT VALUE:  true  MODS:  []
	TYPE: Point*  NAME:  pos  DEFAULT VALUE:  0  MODS:  ['/O']
	TYPE: double  NAME:  minVal  DEFAULT VALUE:  -DBL_MAX  MODS:  []
	TYPE: double  NAME:  maxVal  DEFAULT VALUE:  DBL_MAX  MODS:  []

TYPE: function NAME:  checkRange RETURN TYPE:  bool modlist =  []
	TYPE: UMat  NAME:  a  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  quiet  DEFAULT VALUE:  true  MODS:  []
	TYPE: Point*  NAME:  pos  DEFAULT VALUE:  0  MODS:  ['/O']
	TYPE: double  NAME:  minVal  DEFAULT VALUE:  -DBL_MAX  MODS:  []
	TYPE: double  NAME:  maxVal  DEFAULT VALUE:  DBL_MAX  MODS:  []

TYPE: function NAME:  patchNaNs RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  a  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: double  NAME:  val  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  patchNaNs RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  a  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: double  NAME:  val  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  gemm RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  alpha  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src3  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  beta  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  gemm RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  alpha  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src3  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  beta  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  mulTransposed RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  aTa  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  delta  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: double  NAME:  scale  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  dtype  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  mulTransposed RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  aTa  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  delta  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: double  NAME:  scale  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  dtype  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  transpose RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  transpose RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  transform RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  m  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  transform RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  m  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  perspectiveTransform RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  m  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  perspectiveTransform RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  m  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  completeSymm RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  m  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: bool  NAME:  lowerToUpper  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  completeSymm RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  m  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: bool  NAME:  lowerToUpper  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  setIdentity RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  mtx  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Scalar  NAME:  s  DEFAULT VALUE:  Scalar(1)  MODS:  ['/C', '/Ref']

TYPE: function NAME:  setIdentity RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  mtx  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Scalar  NAME:  s  DEFAULT VALUE:  Scalar(1)  MODS:  ['/C', '/Ref']

TYPE: function NAME:  determinant RETURN TYPE:  double modlist =  []
	TYPE: Mat  NAME:  mtx  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  determinant RETURN TYPE:  double modlist =  []
	TYPE: UMat  NAME:  mtx  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  trace RETURN TYPE:  Scalar modlist =  []
	TYPE: Mat  NAME:  mtx  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  trace RETURN TYPE:  Scalar modlist =  []
	TYPE: UMat  NAME:  mtx  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  invert RETURN TYPE:  double modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  DECOMP_LU  MODS:  []

TYPE: function NAME:  invert RETURN TYPE:  double modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  DECOMP_LU  MODS:  []

TYPE: function NAME:  solve RETURN TYPE:  bool modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  DECOMP_LU  MODS:  []

TYPE: function NAME:  solve RETURN TYPE:  bool modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  DECOMP_LU  MODS:  []

TYPE: function NAME:  sort RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  sort RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  sortIdx RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  sortIdx RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  solveCubic RETURN TYPE:  int modlist =  []
	TYPE: Mat  NAME:  coeffs  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  roots  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  solveCubic RETURN TYPE:  int modlist =  []
	TYPE: UMat  NAME:  coeffs  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  roots  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  solvePoly RETURN TYPE:  double modlist =  []
	TYPE: Mat  NAME:  coeffs  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  roots  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  maxIters  DEFAULT VALUE:  300  MODS:  []

TYPE: function NAME:  solvePoly RETURN TYPE:  double modlist =  []
	TYPE: UMat  NAME:  coeffs  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  roots  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  maxIters  DEFAULT VALUE:  300  MODS:  []

TYPE: function NAME:  eigen RETURN TYPE:  bool modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  eigenvalues  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  eigenvectors  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  eigen RETURN TYPE:  bool modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  eigenvalues  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  eigenvectors  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  eigenNonSymmetric RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  eigenvalues  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  eigenvectors  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  eigenNonSymmetric RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  eigenvalues  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  eigenvectors  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  calcCovarMatrix RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  covar  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  mean  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ctype  DEFAULT VALUE:  CV_64F  MODS:  []

TYPE: function NAME:  calcCovarMatrix RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  covar  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  mean  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ctype  DEFAULT VALUE:  CV_64F  MODS:  []

TYPE: function NAME:  PCACompute RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  data  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mean  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  eigenvectors  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  maxComponents  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  PCACompute RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  data  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mean  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  eigenvectors  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  maxComponents  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  PCACompute RETURN TYPE:  void modlist =  ['=PCACompute2']
	TYPE: Mat  NAME:  data  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mean  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  eigenvectors  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  eigenvalues  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  maxComponents  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  PCACompute RETURN TYPE:  void modlist =  ['=PCACompute2']
	TYPE: UMat  NAME:  data  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mean  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  eigenvectors  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  eigenvalues  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  maxComponents  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  PCACompute RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  data  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mean  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  eigenvectors  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  retainedVariance  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  PCACompute RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  data  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mean  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  eigenvectors  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  retainedVariance  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  PCACompute RETURN TYPE:  void modlist =  ['=PCACompute2']
	TYPE: Mat  NAME:  data  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mean  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  eigenvectors  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  eigenvalues  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  retainedVariance  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  PCACompute RETURN TYPE:  void modlist =  ['=PCACompute2']
	TYPE: UMat  NAME:  data  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mean  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  eigenvectors  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  eigenvalues  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  retainedVariance  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  PCAProject RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  data  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mean  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  eigenvectors  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  result  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  PCAProject RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  data  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mean  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  eigenvectors  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  result  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  PCABackProject RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  data  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mean  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  eigenvectors  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  result  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  PCABackProject RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  data  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mean  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  eigenvectors  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  result  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  SVDecomp RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  w  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  u  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  vt  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  SVDecomp RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  w  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  u  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  vt  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  SVBackSubst RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  w  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  u  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  vt  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  rhs  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  SVBackSubst RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  w  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  u  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  vt  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  rhs  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  Mahalanobis RETURN TYPE:  double modlist =  []
	TYPE: Mat  NAME:  v1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  v2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  icovar  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  Mahalanobis RETURN TYPE:  double modlist =  []
	TYPE: UMat  NAME:  v1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  v2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  icovar  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  dft RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  nonzeroRows  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  dft RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  nonzeroRows  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  idft RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  nonzeroRows  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  idft RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  nonzeroRows  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  dct RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  dct RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  idct RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  idct RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  mulSpectrums RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  a  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  b  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  c  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  conjB  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  mulSpectrums RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  a  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  b  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  c  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  conjB  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  getOptimalDFTSize RETURN TYPE:  int modlist =  []
	TYPE: int  NAME:  vecsize  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  setRNGSeed RETURN TYPE:  void modlist =  []
	TYPE: int  NAME:  seed  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  randu RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  low  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  high  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  randu RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  low  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  high  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  randn RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  mean  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  stddev  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  randn RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  mean  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  stddev  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  randShuffle RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: double  NAME:  iterFactor  DEFAULT VALUE:  1.  MODS:  []
	TYPE: RNG*  NAME:  rng  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  randShuffle RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: double  NAME:  iterFactor  DEFAULT VALUE:  1.  MODS:  []
	TYPE: RNG*  NAME:  rng  DEFAULT VALUE:  0  MODS:  []

TYPE:  enum  NAME:  PCA_Flags
	NAME: PCA_DATA_AS_ROW  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: PCA_DATA_AS_COL  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: PCA_USE_AVG  POS:  2  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  SVD_Flags
	NAME: SVD_MODIFY_A  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: SVD_NO_UV  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: SVD_FULL_UV  POS:  4  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  RNG_<unnamed>
	NAME: RNG_UNIFORM  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: RNG_NORMAL  POS:  1  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  kmeans RETURN TYPE:  double modlist =  []
	TYPE: Mat  NAME:  data  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  K  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  bestLabels  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  attempts  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  centers  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  kmeans RETURN TYPE:  double modlist =  []
	TYPE: UMat  NAME:  data  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  K  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  bestLabels  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  attempts  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  centers  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE:  enum  NAME:  Formatter_FormatType
	NAME: Formatter_FMT_DEFAULT  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: Formatter_FMT_MATLAB  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: Formatter_FMT_CSV  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: Formatter_FMT_PYTHON  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: Formatter_FMT_NUMPY  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: Formatter_FMT_C  POS:  5  DEFAULT VALUE:  []  MODS:  []

TYPE:  class  NAME:  Algorithm modlist =  []

TYPE: function NAME:  Algorithm_clear RETURN TYPE:  void modlist =  ['/V']

TYPE: function NAME:  Algorithm_write RETURN TYPE:  void modlist =  ['/C']
	TYPE: Ptr_FileStorage  NAME:  fs  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  name  DEFAULT VALUE:  String()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  Algorithm_read RETURN TYPE:  void modlist =  ['/V']
	TYPE: FileNode  NAME:  fn  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  Algorithm_empty RETURN TYPE:  bool modlist =  ['/C', '/V']

TYPE: function NAME:  Algorithm_save RETURN TYPE:  void modlist =  ['/C', '/V']
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  Algorithm_getDefaultName RETURN TYPE:  String modlist =  ['/C', '/V']

TYPE:  enum  NAME:  struct
	NAME: Param_INT  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: Param_BOOLEAN  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: Param_REAL  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: Param_STRING  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: Param_MAT  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: Param_MAT_VECTOR  POS:  5  DEFAULT VALUE:  []  MODS:  []
	NAME: Param_ALGORITHM  POS:  6  DEFAULT VALUE:  []  MODS:  []
	NAME: Param_FLOAT  POS:  7  DEFAULT VALUE:  []  MODS:  []
	NAME: Param_UNSIGNED_INT  POS:  8  DEFAULT VALUE:  []  MODS:  []
	NAME: Param_UINT64  POS:  9  DEFAULT VALUE:  []  MODS:  []
	NAME: Param_UCHAR  POS:  11  DEFAULT VALUE:  []  MODS:  []
	NAME: Param_SCALAR  POS:  12  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  AccessFlag
	NAME: ACCESS_READ  POS:  1<<24  DEFAULT VALUE:  []  MODS:  []
	NAME: ACCESS_WRITE  POS:  1<<25  DEFAULT VALUE:  []  MODS:  []
	NAME: ACCESS_RW  POS:  3<<24  DEFAULT VALUE:  []  MODS:  []
	NAME: ACCESS_MASK  POS:  ACCESS_RW  DEFAULT VALUE:  []  MODS:  []
	NAME: ACCESS_FAST  POS:  1<<26  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  _InputArray_KindFlag
	NAME: _InputArray_KIND_SHIFT  POS:  16  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_FIXED_TYPE  POS:  0x8000 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_FIXED_SIZE  POS:  0x4000 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_KIND_MASK  POS:  31 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_NONE  POS:  0 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_MAT  POS:  1 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_MATX  POS:  2 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_STD_VECTOR  POS:  3 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_STD_VECTOR_VECTOR  POS:  4 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_STD_VECTOR_MAT  POS:  5 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_EXPR  POS:  6 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_OPENGL_BUFFER  POS:  7 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_CUDA_HOST_MEM  POS:  8 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_CUDA_GPU_MAT  POS:  9 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_UMAT  POS:  10 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_STD_VECTOR_UMAT  POS:  11 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_STD_BOOL_VECTOR  POS:  12 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_STD_VECTOR_CUDA_GPU_MAT  POS:  13 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_STD_ARRAY  POS:  14 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []
	NAME: _InputArray_STD_ARRAY_MAT  POS:  15 << KIND_SHIFT  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  _OutputArray_DepthMask
	NAME: _OutputArray_DEPTH_MASK_8U  POS:  1 << CV_8U  DEFAULT VALUE:  []  MODS:  []
	NAME: _OutputArray_DEPTH_MASK_8S  POS:  1 << CV_8S  DEFAULT VALUE:  []  MODS:  []
	NAME: _OutputArray_DEPTH_MASK_16U  POS:  1 << CV_16U  DEFAULT VALUE:  []  MODS:  []
	NAME: _OutputArray_DEPTH_MASK_16S  POS:  1 << CV_16S  DEFAULT VALUE:  []  MODS:  []
	NAME: _OutputArray_DEPTH_MASK_32S  POS:  1 << CV_32S  DEFAULT VALUE:  []  MODS:  []
	NAME: _OutputArray_DEPTH_MASK_32F  POS:  1 << CV_32F  DEFAULT VALUE:  []  MODS:  []
	NAME: _OutputArray_DEPTH_MASK_64F  POS:  1 << CV_64F  DEFAULT VALUE:  []  MODS:  []
	NAME: _OutputArray_DEPTH_MASK_16F  POS:  1 << CV_16F  DEFAULT VALUE:  []  MODS:  []
	NAME: _OutputArray_DEPTH_MASK_ALL  POS:  (DEPTH_MASK_64F<<1)-1  DEFAULT VALUE:  []  MODS:  []
	NAME: _OutputArray_DEPTH_MASK_ALL_BUT_8S  POS:  DEPTH_MASK_ALL & ~DEPTH_MASK_8S  DEFAULT VALUE:  []  MODS:  []
	NAME: _OutputArray_DEPTH_MASK_ALL_16F  POS:  (DEPTH_MASK_16F<<1)-1  DEFAULT VALUE:  []  MODS:  []
	NAME: _OutputArray_DEPTH_MASK_FLT  POS:  DEPTH_MASK_32F + DEPTH_MASK_64F  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  UMatUsageFlags
	NAME: USAGE_DEFAULT  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: USAGE_ALLOCATE_HOST_MEMORY  POS:  1 << 0  DEFAULT VALUE:  []  MODS:  []
	NAME: USAGE_ALLOCATE_DEVICE_MEMORY  POS:  1 << 1  DEFAULT VALUE:  []  MODS:  []
	NAME: USAGE_ALLOCATE_SHARED_MEMORY  POS:  1 << 2  DEFAULT VALUE:  []  MODS:  []
	NAME: __UMAT_USAGE_FLAGS_32BIT  POS:  0x7fffffff  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  UMatData_MemoryFlag
	NAME: UMatData_COPY_ON_MAP  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: UMatData_HOST_COPY_OBSOLETE  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: UMatData_DEVICE_COPY_OBSOLETE  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: UMatData_TEMP_UMAT  POS:  8  DEFAULT VALUE:  []  MODS:  []
	NAME: UMatData_TEMP_COPIED_UMAT  POS:  24  DEFAULT VALUE:  []  MODS:  []
	NAME: UMatData_USER_ALLOCATED  POS:  32  DEFAULT VALUE:  []  MODS:  []
	NAME: UMatData_DEVICE_MEM_MAPPED  POS:  64  DEFAULT VALUE:  []  MODS:  []
	NAME: UMatData_ASYNC_CLEANUP  POS:  128  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  Mat_<unnamed>
	NAME: Mat_MAGIC_VAL  POS:  0x42FF0000  DEFAULT VALUE:  []  MODS:  []
	NAME: Mat_AUTO_STEP  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: Mat_CONTINUOUS_FLAG  POS:  CV_MAT_CONT_FLAG  DEFAULT VALUE:  []  MODS:  []
	NAME: Mat_SUBMATRIX_FLAG  POS:  CV_SUBMAT_FLAG  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  Mat_<unnamed>
	NAME: Mat_MAGIC_MASK  POS:  0xFFFF0000  DEFAULT VALUE:  []  MODS:  []
	NAME: Mat_TYPE_MASK  POS:  0x00000FFF  DEFAULT VALUE:  []  MODS:  []
	NAME: Mat_DEPTH_MASK  POS:  7  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  UMat_<unnamed>
	NAME: UMat_MAGIC_VAL  POS:  0x42FF0000  DEFAULT VALUE:  []  MODS:  []
	NAME: UMat_AUTO_STEP  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: UMat_CONTINUOUS_FLAG  POS:  CV_MAT_CONT_FLAG  DEFAULT VALUE:  []  MODS:  []
	NAME: UMat_SUBMATRIX_FLAG  POS:  CV_SUBMAT_FLAG  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  UMat_<unnamed>
	NAME: UMat_MAGIC_MASK  POS:  0xFFFF0000  DEFAULT VALUE:  []  MODS:  []
	NAME: UMat_TYPE_MASK  POS:  0x00000FFF  DEFAULT VALUE:  []  MODS:  []
	NAME: UMat_DEPTH_MASK  POS:  7  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  SparseMat_<unnamed>
	NAME: SparseMat_MAGIC_VAL  POS:  0x42FD0000  DEFAULT VALUE:  []  MODS:  []
	NAME: SparseMat_MAX_DIM  POS:  32  DEFAULT VALUE:  []  MODS:  []
	NAME: SparseMat_HASH_SCALE  POS:  0x5bd1e995  DEFAULT VALUE:  []  MODS:  []
	NAME: SparseMat_HASH_BIT  POS:  0x80000000  DEFAULT VALUE:  []  MODS:  []

TYPE:  class  NAME:  KeyPoint modlist =  ['/Simple']
	NAME: Point2f  POS:  pt  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: float  POS:  size  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: float  POS:  angle  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: float  POS:  response  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: int  POS:  octave  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: int  POS:  class_id  DEFAULT VALUE:    MODS:  ['/RW']

TYPE: function NAME:  KeyPoint_KeyPoint RETURN TYPE:   modlist =  []
Modifited Return:  None

TYPE: function NAME:  KeyPoint_KeyPoint RETURN TYPE:   modlist =  []
	TYPE: float  NAME:  x  DEFAULT VALUE:    MODS:  []
	TYPE: float  NAME:  y  DEFAULT VALUE:    MODS:  []
	TYPE: float  NAME:  _size  DEFAULT VALUE:    MODS:  []
	TYPE: float  NAME:  _angle  DEFAULT VALUE:  -1  MODS:  []
	TYPE: float  NAME:  _response  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  _octave  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  _class_id  DEFAULT VALUE:  -1  MODS:  []
Modifited Return:  None

TYPE: function NAME:  KeyPoint_convert RETURN TYPE:  void modlist =  ['/S']
	TYPE: vector_KeyPoint  NAME:  keypoints  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: vector_Point2f  NAME:  points2f  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_int  NAME:  keypointIndexes  DEFAULT VALUE:  std::vector<int>()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  KeyPoint_convert RETURN TYPE:  void modlist =  ['/S']
	TYPE: vector_Point2f  NAME:  points2f  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: vector_KeyPoint  NAME:  keypoints  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: float  NAME:  size  DEFAULT VALUE:  1  MODS:  []
	TYPE: float  NAME:  response  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  octave  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  class_id  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  KeyPoint_overlap RETURN TYPE:  float modlist =  ['/S']
	TYPE: KeyPoint  NAME:  kp1  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: KeyPoint  NAME:  kp2  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE:  class  NAME:  DMatch modlist =  ['/Simple']
	NAME: int  POS:  queryIdx  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: int  POS:  trainIdx  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: int  POS:  imgIdx  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: float  POS:  distance  DEFAULT VALUE:    MODS:  ['/RW']

TYPE: function NAME:  DMatch_DMatch RETURN TYPE:   modlist =  []
Modifited Return:  None

TYPE: function NAME:  DMatch_DMatch RETURN TYPE:   modlist =  []
	TYPE: int  NAME:  _queryIdx  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  _trainIdx  DEFAULT VALUE:    MODS:  []
	TYPE: float  NAME:  _distance  DEFAULT VALUE:    MODS:  []
Modifited Return:  None

TYPE: function NAME:  DMatch_DMatch RETURN TYPE:   modlist =  []
	TYPE: int  NAME:  _queryIdx  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  _trainIdx  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  _imgIdx  DEFAULT VALUE:    MODS:  []
	TYPE: float  NAME:  _distance  DEFAULT VALUE:    MODS:  []
Modifited Return:  None

TYPE:  enum  NAME:  TermCriteria_Type
	NAME: TermCriteria_COUNT  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: TermCriteria_MAX_ITER  POS:  COUNT  DEFAULT VALUE:  []  MODS:  []
	NAME: TermCriteria_EPS  POS:  2  DEFAULT VALUE:  []  MODS:  []

TYPE:  class  NAME:  Moments modlist =  ['/Map']
	NAME: double  POS:  m00  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  m10  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  m01  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  m20  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  m11  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  m02  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  m30  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  m21  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  m12  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  m03  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  mu20  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  mu11  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  mu02  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  mu30  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  mu21  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  mu12  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  mu03  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  nu20  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  nu11  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  nu02  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  nu30  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  nu21  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  nu12  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  nu03  DEFAULT VALUE:    MODS:  ['/RW']

TYPE: function NAME:  ocl_haveOpenCL RETURN TYPE:  bool modlist =  []

TYPE: function NAME:  ocl_useOpenCL RETURN TYPE:  bool modlist =  []

TYPE: function NAME:  ocl_haveAmdBlas RETURN TYPE:  bool modlist =  []

TYPE: function NAME:  ocl_haveAmdFft RETURN TYPE:  bool modlist =  []

TYPE: function NAME:  ocl_setUseOpenCL RETURN TYPE:  void modlist =  []
	TYPE: bool  NAME:  flag  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ocl_finish RETURN TYPE:  void modlist =  []

TYPE:  class  NAME:  ocl_Device modlist =  ['/Simple']

TYPE: function NAME:  ocl_Device_Device RETURN TYPE:   modlist =  []
Modifited Return:  None

TYPE:  enum  NAME:  ocl_Device_<unnamed>
	NAME: ocl_Device_TYPE_DEFAULT  POS:  (1 << 0)  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_TYPE_CPU  POS:  (1 << 1)  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_TYPE_GPU  POS:  (1 << 2)  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_TYPE_ACCELERATOR  POS:  (1 << 3)  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_TYPE_DGPU  POS:  TYPE_GPU + (1 << 16)  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_TYPE_IGPU  POS:  TYPE_GPU + (1 << 17)  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_TYPE_ALL  POS:  0xFFFFFFFF  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  ocl_Device_name RETURN TYPE:  String modlist =  ['/C']

TYPE: function NAME:  ocl_Device_extensions RETURN TYPE:  String modlist =  ['/C']

TYPE: function NAME:  ocl_Device_isExtensionSupported RETURN TYPE:  bool modlist =  ['/C']
	TYPE: String  NAME:  extensionName  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  ocl_Device_version RETURN TYPE:  String modlist =  ['/C']

TYPE: function NAME:  ocl_Device_vendorName RETURN TYPE:  String modlist =  ['/C']

TYPE: function NAME:  ocl_Device_OpenCL_C_Version RETURN TYPE:  String modlist =  ['/C']

TYPE: function NAME:  ocl_Device_OpenCLVersion RETURN TYPE:  String modlist =  ['/C']

TYPE: function NAME:  ocl_Device_deviceVersionMajor RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_deviceVersionMinor RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_driverVersion RETURN TYPE:  String modlist =  ['/C']

TYPE: function NAME:  ocl_Device_type RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_addressBits RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_available RETURN TYPE:  bool modlist =  ['/C']

TYPE: function NAME:  ocl_Device_compilerAvailable RETURN TYPE:  bool modlist =  ['/C']

TYPE: function NAME:  ocl_Device_linkerAvailable RETURN TYPE:  bool modlist =  ['/C']

TYPE:  enum  NAME:  ocl_Device_<unnamed>
	NAME: ocl_Device_FP_DENORM  POS:  (1 << 0)  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_FP_INF_NAN  POS:  (1 << 1)  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_FP_ROUND_TO_NEAREST  POS:  (1 << 2)  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_FP_ROUND_TO_ZERO  POS:  (1 << 3)  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_FP_ROUND_TO_INF  POS:  (1 << 4)  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_FP_FMA  POS:  (1 << 5)  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_FP_SOFT_FLOAT  POS:  (1 << 6)  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_FP_CORRECTLY_ROUNDED_DIVIDE_SQRT  POS:  (1 << 7)  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  ocl_Device_doubleFPConfig RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_singleFPConfig RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_halfFPConfig RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_endianLittle RETURN TYPE:  bool modlist =  ['/C']

TYPE: function NAME:  ocl_Device_errorCorrectionSupport RETURN TYPE:  bool modlist =  ['/C']

TYPE:  enum  NAME:  ocl_Device_<unnamed>
	NAME: ocl_Device_EXEC_KERNEL  POS:  (1 << 0)  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_EXEC_NATIVE_KERNEL  POS:  (1 << 1)  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  ocl_Device_executionCapabilities RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_globalMemCacheSize RETURN TYPE:  size_t modlist =  ['/C']

TYPE:  enum  NAME:  ocl_Device_<unnamed>
	NAME: ocl_Device_NO_CACHE  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_READ_ONLY_CACHE  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_READ_WRITE_CACHE  POS:  2  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  ocl_Device_globalMemCacheType RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_globalMemCacheLineSize RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_globalMemSize RETURN TYPE:  size_t modlist =  ['/C']

TYPE: function NAME:  ocl_Device_localMemSize RETURN TYPE:  size_t modlist =  ['/C']

TYPE:  enum  NAME:  ocl_Device_<unnamed>
	NAME: ocl_Device_NO_LOCAL_MEM  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_LOCAL_IS_LOCAL  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_LOCAL_IS_GLOBAL  POS:  2  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  ocl_Device_localMemType RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_hostUnifiedMemory RETURN TYPE:  bool modlist =  ['/C']

TYPE: function NAME:  ocl_Device_imageSupport RETURN TYPE:  bool modlist =  ['/C']

TYPE: function NAME:  ocl_Device_imageFromBufferSupport RETURN TYPE:  bool modlist =  ['/C']

TYPE: function NAME:  ocl_Device_intelSubgroupsSupport RETURN TYPE:  bool modlist =  ['/C']

TYPE: function NAME:  ocl_Device_image2DMaxWidth RETURN TYPE:  size_t modlist =  ['/C']

TYPE: function NAME:  ocl_Device_image2DMaxHeight RETURN TYPE:  size_t modlist =  ['/C']

TYPE: function NAME:  ocl_Device_image3DMaxWidth RETURN TYPE:  size_t modlist =  ['/C']

TYPE: function NAME:  ocl_Device_image3DMaxHeight RETURN TYPE:  size_t modlist =  ['/C']

TYPE: function NAME:  ocl_Device_image3DMaxDepth RETURN TYPE:  size_t modlist =  ['/C']

TYPE: function NAME:  ocl_Device_imageMaxBufferSize RETURN TYPE:  size_t modlist =  ['/C']

TYPE: function NAME:  ocl_Device_imageMaxArraySize RETURN TYPE:  size_t modlist =  ['/C']

TYPE:  enum  NAME:  ocl_Device_<unnamed>
	NAME: ocl_Device_UNKNOWN_VENDOR  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_VENDOR_AMD  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_VENDOR_INTEL  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_Device_VENDOR_NVIDIA  POS:  3  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  ocl_Device_vendorID RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_isAMD RETURN TYPE:  bool modlist =  ['/C']

TYPE: function NAME:  ocl_Device_isIntel RETURN TYPE:  bool modlist =  ['/C']

TYPE: function NAME:  ocl_Device_isNVidia RETURN TYPE:  bool modlist =  ['/C']

TYPE: function NAME:  ocl_Device_maxClockFrequency RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_maxComputeUnits RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_maxConstantArgs RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_maxConstantBufferSize RETURN TYPE:  size_t modlist =  ['/C']

TYPE: function NAME:  ocl_Device_maxMemAllocSize RETURN TYPE:  size_t modlist =  ['/C']

TYPE: function NAME:  ocl_Device_maxParameterSize RETURN TYPE:  size_t modlist =  ['/C']

TYPE: function NAME:  ocl_Device_maxReadImageArgs RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_maxWriteImageArgs RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_maxSamplers RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_maxWorkGroupSize RETURN TYPE:  size_t modlist =  ['/C']

TYPE: function NAME:  ocl_Device_maxWorkItemDims RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_memBaseAddrAlign RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_nativeVectorWidthChar RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_nativeVectorWidthShort RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_nativeVectorWidthInt RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_nativeVectorWidthLong RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_nativeVectorWidthFloat RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_nativeVectorWidthDouble RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_nativeVectorWidthHalf RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_preferredVectorWidthChar RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_preferredVectorWidthShort RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_preferredVectorWidthInt RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_preferredVectorWidthLong RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_preferredVectorWidthFloat RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_preferredVectorWidthDouble RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_preferredVectorWidthHalf RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  ocl_Device_printfBufferSize RETURN TYPE:  size_t modlist =  ['/C']

TYPE: function NAME:  ocl_Device_profilingTimerResolution RETURN TYPE:  size_t modlist =  ['/C']

TYPE: function NAME:  ocl_Device_getDefault RETURN TYPE:  Device modlist =  ['/S']

TYPE:  enum  NAME:  ocl_KernelArg_<unnamed>
	NAME: ocl_KernelArg_LOCAL  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_KernelArg_READ_ONLY  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_KernelArg_WRITE_ONLY  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_KernelArg_READ_WRITE  POS:  6  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_KernelArg_CONSTANT  POS:  8  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_KernelArg_PTR_ONLY  POS:  16  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_KernelArg_NO_SIZE  POS:  256  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ocl_OclVectorStrategy
	NAME: ocl_OCL_VECTOR_OWN  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_OCL_VECTOR_MAX  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: ocl_OCL_VECTOR_DEFAULT  POS:  OCL_VECTOR_OWN  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  flann_FlannIndexType
	NAME: flann_FLANN_INDEX_TYPE_8U  POS:  CV_8U  DEFAULT VALUE:  []  MODS:  []
	NAME: flann_FLANN_INDEX_TYPE_8S  POS:  CV_8S  DEFAULT VALUE:  []  MODS:  []
	NAME: flann_FLANN_INDEX_TYPE_16U  POS:  CV_16U  DEFAULT VALUE:  []  MODS:  []
	NAME: flann_FLANN_INDEX_TYPE_16S  POS:  CV_16S  DEFAULT VALUE:  []  MODS:  []
	NAME: flann_FLANN_INDEX_TYPE_32S  POS:  CV_32S  DEFAULT VALUE:  []  MODS:  []
	NAME: flann_FLANN_INDEX_TYPE_32F  POS:  CV_32F  DEFAULT VALUE:  []  MODS:  []
	NAME: flann_FLANN_INDEX_TYPE_64F  POS:  CV_64F  DEFAULT VALUE:  []  MODS:  []
	NAME: flann_FLANN_INDEX_TYPE_STRING  POS:  CV_64F+1  DEFAULT VALUE:  []  MODS:  []
	NAME: flann_FLANN_INDEX_TYPE_BOOL  POS:  CV_64F+2  DEFAULT VALUE:  []  MODS:  []
	NAME: flann_FLANN_INDEX_TYPE_ALGORITHM  POS:  CV_64F+3  DEFAULT VALUE:  []  MODS:  []
	NAME: flann_LAST_VALUE_FLANN_INDEX_TYPE  POS:  FLANN_INDEX_TYPE_ALGORITHM  DEFAULT VALUE:  []  MODS:  []

TYPE:  class  NAME:  flann_Index modlist =  []

TYPE: function NAME:  flann_Index_Index RETURN TYPE:   modlist =  []
Modifited Return:  None

TYPE: function NAME:  flann_Index_Index RETURN TYPE:   modlist =  []
	TYPE: Mat  NAME:  features  DEFAULT VALUE:    MODS:  []
	TYPE: IndexParams  NAME:  params  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: cvflann_flann_distance_t  NAME:  distType  DEFAULT VALUE:  cvflann::FLANN_DIST_L2  MODS:  []
Modifited Return:  None

TYPE: function NAME:  flann_Index_Index RETURN TYPE:   modlist =  []
	TYPE: UMat  NAME:  features  DEFAULT VALUE:    MODS:  []
	TYPE: IndexParams  NAME:  params  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: cvflann_flann_distance_t  NAME:  distType  DEFAULT VALUE:  cvflann::FLANN_DIST_L2  MODS:  []
Modifited Return:  None

TYPE: function NAME:  flann_Index_build RETURN TYPE:  void modlist =  ['/V']
	TYPE: Mat  NAME:  features  DEFAULT VALUE:    MODS:  []
	TYPE: IndexParams  NAME:  params  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: cvflann_flann_distance_t  NAME:  distType  DEFAULT VALUE:  cvflann::FLANN_DIST_L2  MODS:  []

TYPE: function NAME:  flann_Index_build RETURN TYPE:  void modlist =  ['/V']
	TYPE: UMat  NAME:  features  DEFAULT VALUE:    MODS:  []
	TYPE: IndexParams  NAME:  params  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: cvflann_flann_distance_t  NAME:  distType  DEFAULT VALUE:  cvflann::FLANN_DIST_L2  MODS:  []

TYPE: function NAME:  flann_Index_knnSearch RETURN TYPE:  void modlist =  ['/V']
	TYPE: Mat  NAME:  query  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  indices  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  dists  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  knn  DEFAULT VALUE:    MODS:  []
	TYPE: SearchParams  NAME:  params  DEFAULT VALUE:  SearchParams()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  flann_Index_knnSearch RETURN TYPE:  void modlist =  ['/V']
	TYPE: UMat  NAME:  query  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  indices  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  dists  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  knn  DEFAULT VALUE:    MODS:  []
	TYPE: SearchParams  NAME:  params  DEFAULT VALUE:  SearchParams()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  flann_Index_radiusSearch RETURN TYPE:  int modlist =  ['/V']
	TYPE: Mat  NAME:  query  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  indices  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  dists  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  radius  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  maxResults  DEFAULT VALUE:    MODS:  []
	TYPE: SearchParams  NAME:  params  DEFAULT VALUE:  SearchParams()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  flann_Index_radiusSearch RETURN TYPE:  int modlist =  ['/V']
	TYPE: UMat  NAME:  query  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  indices  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  dists  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  radius  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  maxResults  DEFAULT VALUE:    MODS:  []
	TYPE: SearchParams  NAME:  params  DEFAULT VALUE:  SearchParams()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  flann_Index_save RETURN TYPE:  void modlist =  ['/C', '/V']
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  flann_Index_load RETURN TYPE:  bool modlist =  ['/V']
	TYPE: Mat  NAME:  features  DEFAULT VALUE:    MODS:  []
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  flann_Index_load RETURN TYPE:  bool modlist =  ['/V']
	TYPE: UMat  NAME:  features  DEFAULT VALUE:    MODS:  []
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  flann_Index_release RETURN TYPE:  void modlist =  ['/V']

TYPE: function NAME:  flann_Index_getDistance RETURN TYPE:  cvflann_flann_distance_t modlist =  ['/C']
Modifited Return:  cvflann::flann_distance_t

TYPE: function NAME:  flann_Index_getAlgorithm RETURN TYPE:  cvflann_flann_algorithm_t modlist =  ['/C']
Modifited Return:  cvflann::flann_algorithm_t

TYPE:  enum  NAME:  ml_VariableTypes
	NAME: ml_VAR_NUMERICAL  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_VAR_ORDERED  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_VAR_CATEGORICAL  POS:  1  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ml_ErrorTypes
	NAME: ml_TEST_ERROR  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_TRAIN_ERROR  POS:  1  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ml_SampleTypes
	NAME: ml_ROW_SAMPLE  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_COL_SAMPLE  POS:  1  DEFAULT VALUE:  []  MODS:  []

TYPE:  class  NAME:  ml_ParamGrid modlist =  []
	NAME: double  POS:  minVal  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  maxVal  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: double  POS:  logStep  DEFAULT VALUE:    MODS:  ['/RW']

TYPE: function NAME:  ml_ParamGrid_create RETURN TYPE:  Ptr_ParamGrid modlist =  ['/S']
	TYPE: double  NAME:  minVal  DEFAULT VALUE:  0.  MODS:  []
	TYPE: double  NAME:  maxVal  DEFAULT VALUE:  0.  MODS:  []
	TYPE: double  NAME:  logstep  DEFAULT VALUE:  1.  MODS:  []
Modifited Return:  Ptr<ParamGrid>

TYPE:  class  NAME:  ml_TrainData modlist =  []

TYPE: function NAME:  ml_TrainData_getLayout RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getNTrainSamples RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getNTestSamples RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getNSamples RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getNVars RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getNAllVars RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getSample RETURN TYPE:  void modlist =  ['/C', '/V', '/PV']
	TYPE: Mat  NAME:  varIdx  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  sidx  DEFAULT VALUE:    MODS:  []
	TYPE: float*  NAME:  buf  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_TrainData_getSample RETURN TYPE:  void modlist =  ['/C', '/V', '/PV']
	TYPE: UMat  NAME:  varIdx  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  sidx  DEFAULT VALUE:    MODS:  []
	TYPE: float*  NAME:  buf  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_TrainData_getSamples RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getMissing RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getTrainSamples RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']
	TYPE: int  NAME:  layout  DEFAULT VALUE:  ROW_SAMPLE  MODS:  []
	TYPE: bool  NAME:  compressSamples  DEFAULT VALUE:  true  MODS:  []
	TYPE: bool  NAME:  compressVars  DEFAULT VALUE:  true  MODS:  []

TYPE: function NAME:  ml_TrainData_getTrainResponses RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getTrainNormCatResponses RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getTestResponses RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getTestNormCatResponses RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getResponses RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getNormCatResponses RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getSampleWeights RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getTrainSampleWeights RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getTestSampleWeights RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getVarIdx RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getVarType RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getVarSymbolFlags RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getResponseType RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getTrainSampleIdx RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getTestSampleIdx RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getValues RETURN TYPE:  void modlist =  ['/C', '/V', '/PV']
	TYPE: int  NAME:  vi  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  sidx  DEFAULT VALUE:    MODS:  []
	TYPE: float*  NAME:  values  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_TrainData_getValues RETURN TYPE:  void modlist =  ['/C', '/V', '/PV']
	TYPE: int  NAME:  vi  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  sidx  DEFAULT VALUE:    MODS:  []
	TYPE: float*  NAME:  values  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_TrainData_getDefaultSubstValues RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getCatCount RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']
	TYPE: int  NAME:  vi  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_TrainData_getClassLabels RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getCatOfs RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getCatMap RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_setTrainTestSplit RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  count  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  shuffle  DEFAULT VALUE:  true  MODS:  []

TYPE: function NAME:  ml_TrainData_setTrainTestSplitRatio RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  ratio  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  shuffle  DEFAULT VALUE:  true  MODS:  []

TYPE: function NAME:  ml_TrainData_shuffleTrainTest RETURN TYPE:  void modlist =  ['/V', '/PV']

TYPE: function NAME:  ml_TrainData_getTestSamples RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_TrainData_getNames RETURN TYPE:  void modlist =  ['/C', '/V', '/PV']
	TYPE: vector_String  NAME:  names  DEFAULT VALUE:    MODS:  ['/Ref']

TYPE: function NAME:  ml_TrainData_getSubVector RETURN TYPE:  Mat modlist =  ['/S']
	TYPE: Mat  NAME:  vec  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  idx  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  ml_TrainData_getSubVector RETURN TYPE:  Mat modlist =  ['/S']
	TYPE: Mat  NAME:  vec  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  idx  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  ml_TrainData_getSubMatrix RETURN TYPE:  Mat modlist =  ['/S']
	TYPE: Mat  NAME:  matrix  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  idx  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  layout  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_TrainData_getSubMatrix RETURN TYPE:  Mat modlist =  ['/S']
	TYPE: Mat  NAME:  matrix  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  idx  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  layout  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_TrainData_create RETURN TYPE:  Ptr_TrainData modlist =  ['/S']
	TYPE: Mat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  layout  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  responses  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  varIdx  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: Mat  NAME:  sampleIdx  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: Mat  NAME:  sampleWeights  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: Mat  NAME:  varType  DEFAULT VALUE:  Mat()  MODS:  []
Modifited Return:  Ptr<TrainData>

TYPE: function NAME:  ml_TrainData_create RETURN TYPE:  Ptr_TrainData modlist =  ['/S']
	TYPE: UMat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  layout  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  responses  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  varIdx  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: UMat  NAME:  sampleIdx  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: UMat  NAME:  sampleWeights  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: UMat  NAME:  varType  DEFAULT VALUE:  UMat()  MODS:  []
Modifited Return:  Ptr<TrainData>

TYPE:  class  NAME:  ml_StatModel modlist =  []
: cv::Algorithm

TYPE:  enum  NAME:  ml_StatModel_Flags
	NAME: ml_StatModel_UPDATE_MODEL  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_StatModel_RAW_OUTPUT  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_StatModel_COMPRESSED_INPUT  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_StatModel_PREPROCESSED_INPUT  POS:  4  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  ml_StatModel_getVarCount RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_StatModel_empty RETURN TYPE:  bool modlist =  ['/C', '/V']

TYPE: function NAME:  ml_StatModel_isTrained RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_StatModel_isClassifier RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_StatModel_train RETURN TYPE:  bool modlist =  ['/V']
	TYPE: Ptr_TrainData  NAME:  trainData  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  ml_StatModel_train RETURN TYPE:  bool modlist =  ['/V']
	TYPE: Mat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  layout  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  responses  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_StatModel_train RETURN TYPE:  bool modlist =  ['/V']
	TYPE: UMat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  layout  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  responses  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_StatModel_calcError RETURN TYPE:  float modlist =  ['/C', '/V']
	TYPE: Ptr_TrainData  NAME:  data  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: bool  NAME:  test  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  resp  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  ml_StatModel_calcError RETURN TYPE:  float modlist =  ['/C', '/V']
	TYPE: Ptr_TrainData  NAME:  data  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: bool  NAME:  test  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  resp  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  ml_StatModel_predict RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']
	TYPE: Mat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  results  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  ml_StatModel_predict RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']
	TYPE: UMat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  results  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE:  class  NAME:  ml_NormalBayesClassifier modlist =  []
: cv::ml::StatModel

TYPE: function NAME:  ml_NormalBayesClassifier_predictProb RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']
	TYPE: Mat  NAME:  inputs  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  outputs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  outputProbs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  ml_NormalBayesClassifier_predictProb RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']
	TYPE: UMat  NAME:  inputs  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  outputs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  outputProbs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  ml_NormalBayesClassifier_create RETURN TYPE:  Ptr_NormalBayesClassifier modlist =  ['/S']
Modifited Return:  Ptr<NormalBayesClassifier>

TYPE: function NAME:  ml_NormalBayesClassifier_load RETURN TYPE:  Ptr_NormalBayesClassifier modlist =  ['/S']
	TYPE: String  NAME:  filepath  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  nodeName  DEFAULT VALUE:  String()  MODS:  ['/C', '/Ref']
Modifited Return:  Ptr<NormalBayesClassifier>

TYPE:  class  NAME:  ml_KNearest modlist =  []
: cv::ml::StatModel

TYPE: function NAME:  ml_KNearest_getDefaultK RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_KNearest_setDefaultK RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_KNearest_getIsClassifier RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_KNearest_setIsClassifier RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: bool  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_KNearest_getEmax RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_KNearest_setEmax RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_KNearest_getAlgorithmType RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_KNearest_setAlgorithmType RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_KNearest_findNearest RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']
	TYPE: Mat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  k  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  results  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  neighborResponses  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  dist  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  ml_KNearest_findNearest RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']
	TYPE: UMat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  k  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  results  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  neighborResponses  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  dist  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE:  enum  NAME:  ml_KNearest_Types
	NAME: ml_KNearest_BRUTE_FORCE  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_KNearest_KDTREE  POS:  2  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  ml_KNearest_create RETURN TYPE:  Ptr_KNearest modlist =  ['/S']
Modifited Return:  Ptr<KNearest>

TYPE: function NAME:  ml_KNearest_load RETURN TYPE:  Ptr_KNearest modlist =  ['/S']
	TYPE: String  NAME:  filepath  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
Modifited Return:  Ptr<KNearest>

TYPE:  class  NAME:  ml_SVM modlist =  []
: cv::ml::StatModel

TYPE: function NAME:  ml_SVM_getType RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_SVM_setType RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_SVM_getGamma RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_SVM_setGamma RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_SVM_getCoef0 RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_SVM_setCoef0 RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_SVM_getDegree RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_SVM_setDegree RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_SVM_getC RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_SVM_setC RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_SVM_getNu RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_SVM_setNu RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_SVM_getP RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_SVM_setP RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_SVM_getClassWeights RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']
Modifited Return:  cv::Mat

TYPE: function NAME:  ml_SVM_setClassWeights RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  val  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  ml_SVM_setClassWeights RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  val  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  ml_SVM_getTermCriteria RETURN TYPE:  TermCriteria modlist =  ['/C', '/V', '/PV']
Modifited Return:  cv::TermCriteria

TYPE: function NAME:  ml_SVM_setTermCriteria RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: TermCriteria  NAME:  val  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  ml_SVM_getKernelType RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_SVM_setKernel RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  kernelType  DEFAULT VALUE:    MODS:  []

TYPE:  enum  NAME:  ml_SVM_Types
	NAME: ml_SVM_C_SVC  POS:  100  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_SVM_NU_SVC  POS:  101  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_SVM_ONE_CLASS  POS:  102  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_SVM_EPS_SVR  POS:  103  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_SVM_NU_SVR  POS:  104  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ml_SVM_KernelTypes
	NAME: ml_SVM_CUSTOM  POS:  -1  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_SVM_LINEAR  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_SVM_POLY  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_SVM_RBF  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_SVM_SIGMOID  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_SVM_CHI2  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_SVM_INTER  POS:  5  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ml_SVM_ParamTypes
	NAME: ml_SVM_C  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_SVM_GAMMA  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_SVM_P  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_SVM_NU  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_SVM_COEF  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_SVM_DEGREE  POS:  5  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  ml_SVM_trainAuto RETURN TYPE:  bool modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  layout  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  responses  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  kFold  DEFAULT VALUE:  10  MODS:  []
	TYPE: Ptr_ParamGrid  NAME:  Cgrid  DEFAULT VALUE:  SVM::getDefaultGridPtr(SVM::C)  MODS:  []
	TYPE: Ptr_ParamGrid  NAME:  gammaGrid  DEFAULT VALUE:  SVM::getDefaultGridPtr(SVM::GAMMA)  MODS:  []
	TYPE: Ptr_ParamGrid  NAME:  pGrid  DEFAULT VALUE:  SVM::getDefaultGridPtr(SVM::P)  MODS:  []
	TYPE: Ptr_ParamGrid  NAME:  nuGrid  DEFAULT VALUE:  SVM::getDefaultGridPtr(SVM::NU)  MODS:  []
	TYPE: Ptr_ParamGrid  NAME:  coeffGrid  DEFAULT VALUE:  SVM::getDefaultGridPtr(SVM::COEF)  MODS:  []
	TYPE: Ptr_ParamGrid  NAME:  degreeGrid  DEFAULT VALUE:  SVM::getDefaultGridPtr(SVM::DEGREE)  MODS:  []
	TYPE: bool  NAME:  balanced  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  ml_SVM_trainAuto RETURN TYPE:  bool modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  layout  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  responses  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  kFold  DEFAULT VALUE:  10  MODS:  []
	TYPE: Ptr_ParamGrid  NAME:  Cgrid  DEFAULT VALUE:  SVM::getDefaultGridPtr(SVM::C)  MODS:  []
	TYPE: Ptr_ParamGrid  NAME:  gammaGrid  DEFAULT VALUE:  SVM::getDefaultGridPtr(SVM::GAMMA)  MODS:  []
	TYPE: Ptr_ParamGrid  NAME:  pGrid  DEFAULT VALUE:  SVM::getDefaultGridPtr(SVM::P)  MODS:  []
	TYPE: Ptr_ParamGrid  NAME:  nuGrid  DEFAULT VALUE:  SVM::getDefaultGridPtr(SVM::NU)  MODS:  []
	TYPE: Ptr_ParamGrid  NAME:  coeffGrid  DEFAULT VALUE:  SVM::getDefaultGridPtr(SVM::COEF)  MODS:  []
	TYPE: Ptr_ParamGrid  NAME:  degreeGrid  DEFAULT VALUE:  SVM::getDefaultGridPtr(SVM::DEGREE)  MODS:  []
	TYPE: bool  NAME:  balanced  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  ml_SVM_getSupportVectors RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_SVM_getUncompressedSupportVectors RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_SVM_getDecisionFunction RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']
	TYPE: int  NAME:  i  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  alpha  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  svidx  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  ml_SVM_getDecisionFunction RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']
	TYPE: int  NAME:  i  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  alpha  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  svidx  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  ml_SVM_getDefaultGridPtr RETURN TYPE:  Ptr_ParamGrid modlist =  ['/S']
	TYPE: int  NAME:  param_id  DEFAULT VALUE:    MODS:  []
Modifited Return:  Ptr<ParamGrid>

TYPE: function NAME:  ml_SVM_create RETURN TYPE:  Ptr_SVM modlist =  ['/S']
Modifited Return:  Ptr<SVM>

TYPE: function NAME:  ml_SVM_load RETURN TYPE:  Ptr_SVM modlist =  ['/S']
	TYPE: String  NAME:  filepath  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
Modifited Return:  Ptr<SVM>

TYPE:  class  NAME:  ml_EM modlist =  []
: cv::ml::StatModel

TYPE:  enum  NAME:  ml_EM_Types
	NAME: ml_EM_COV_MAT_SPHERICAL  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_EM_COV_MAT_DIAGONAL  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_EM_COV_MAT_GENERIC  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_EM_COV_MAT_DEFAULT  POS:  COV_MAT_DIAGONAL  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ml_EM_<unnamed>
	NAME: ml_EM_DEFAULT_NCLUSTERS  POS:  5  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_EM_DEFAULT_MAX_ITERS  POS:  100  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ml_EM_<unnamed>
	NAME: ml_EM_START_E_STEP  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_EM_START_M_STEP  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_EM_START_AUTO_STEP  POS:  0  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  ml_EM_getClustersNumber RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_EM_setClustersNumber RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_EM_getCovarianceMatrixType RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_EM_setCovarianceMatrixType RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_EM_getTermCriteria RETURN TYPE:  TermCriteria modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_EM_setTermCriteria RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: TermCriteria  NAME:  val  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  ml_EM_getWeights RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_EM_getMeans RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_EM_getCovs RETURN TYPE:  void modlist =  ['/C', '/V', '/PV']
	TYPE: vector_Mat  NAME:  covs  DEFAULT VALUE:    MODS:  ['/O', '/Ref']

TYPE: function NAME:  ml_EM_getCovs RETURN TYPE:  void modlist =  ['/C', '/V', '/PV']
	TYPE: vector_Mat  NAME:  covs  DEFAULT VALUE:    MODS:  ['/O', '/Ref']

TYPE: function NAME:  ml_EM_predict RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']
	TYPE: Mat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  results  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  ml_EM_predict RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']
	TYPE: UMat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  results  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  ml_EM_predict2 RETURN TYPE:  Vec2d modlist =  ['/C', '/V', '/PV']
	TYPE: Mat  NAME:  sample  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  probs  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  ml_EM_predict2 RETURN TYPE:  Vec2d modlist =  ['/C', '/V', '/PV']
	TYPE: UMat  NAME:  sample  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  probs  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  ml_EM_trainEM RETURN TYPE:  bool modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  logLikelihoods  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  labels  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  probs  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  ml_EM_trainEM RETURN TYPE:  bool modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  logLikelihoods  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  labels  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  probs  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  ml_EM_trainE RETURN TYPE:  bool modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  means0  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  covs0  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: Mat  NAME:  weights0  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: Mat  NAME:  logLikelihoods  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  labels  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  probs  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  ml_EM_trainE RETURN TYPE:  bool modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  means0  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  covs0  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: UMat  NAME:  weights0  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: UMat  NAME:  logLikelihoods  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  labels  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  probs  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  ml_EM_trainM RETURN TYPE:  bool modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  probs0  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  logLikelihoods  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  labels  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  probs  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  ml_EM_trainM RETURN TYPE:  bool modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  probs0  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  logLikelihoods  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  labels  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  probs  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  ml_EM_create RETURN TYPE:  Ptr_EM modlist =  ['/S']
Modifited Return:  Ptr<EM>

TYPE: function NAME:  ml_EM_load RETURN TYPE:  Ptr_EM modlist =  ['/S']
	TYPE: String  NAME:  filepath  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  nodeName  DEFAULT VALUE:  String()  MODS:  ['/C', '/Ref']
Modifited Return:  Ptr<EM>

TYPE:  class  NAME:  ml_DTrees modlist =  []
: cv::ml::StatModel

TYPE:  enum  NAME:  ml_DTrees_Flags
	NAME: ml_DTrees_PREDICT_AUTO  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_DTrees_PREDICT_SUM  POS:  (1<<8)  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_DTrees_PREDICT_MAX_VOTE  POS:  (2<<8)  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_DTrees_PREDICT_MASK  POS:  (3<<8)  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  ml_DTrees_getMaxCategories RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_DTrees_setMaxCategories RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_DTrees_getMaxDepth RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_DTrees_setMaxDepth RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_DTrees_getMinSampleCount RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_DTrees_setMinSampleCount RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_DTrees_getCVFolds RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_DTrees_setCVFolds RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_DTrees_getUseSurrogates RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_DTrees_setUseSurrogates RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: bool  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_DTrees_getUse1SERule RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_DTrees_setUse1SERule RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: bool  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_DTrees_getTruncatePrunedTree RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_DTrees_setTruncatePrunedTree RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: bool  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_DTrees_getRegressionAccuracy RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_DTrees_setRegressionAccuracy RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: float  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_DTrees_getPriors RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']
Modifited Return:  cv::Mat

TYPE: function NAME:  ml_DTrees_setPriors RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  val  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  ml_DTrees_setPriors RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  val  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  ml_DTrees_create RETURN TYPE:  Ptr_DTrees modlist =  ['/S']
Modifited Return:  Ptr<DTrees>

TYPE: function NAME:  ml_DTrees_load RETURN TYPE:  Ptr_DTrees modlist =  ['/S']
	TYPE: String  NAME:  filepath  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  nodeName  DEFAULT VALUE:  String()  MODS:  ['/C', '/Ref']
Modifited Return:  Ptr<DTrees>

TYPE:  class  NAME:  ml_RTrees modlist =  []
: cv::ml::DTrees

TYPE: function NAME:  ml_RTrees_getCalculateVarImportance RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_RTrees_setCalculateVarImportance RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: bool  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_RTrees_getActiveVarCount RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_RTrees_setActiveVarCount RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_RTrees_getTermCriteria RETURN TYPE:  TermCriteria modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_RTrees_setTermCriteria RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: TermCriteria  NAME:  val  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  ml_RTrees_getVarImportance RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_RTrees_getVotes RETURN TYPE:  void modlist =  ['/C', '/V', '/PV']
	TYPE: Mat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  results  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_RTrees_getVotes RETURN TYPE:  void modlist =  ['/C', '/V', '/PV']
	TYPE: UMat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  results  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_RTrees_create RETURN TYPE:  Ptr_RTrees modlist =  ['/S']
Modifited Return:  Ptr<RTrees>

TYPE: function NAME:  ml_RTrees_load RETURN TYPE:  Ptr_RTrees modlist =  ['/S']
	TYPE: String  NAME:  filepath  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  nodeName  DEFAULT VALUE:  String()  MODS:  ['/C', '/Ref']
Modifited Return:  Ptr<RTrees>

TYPE:  class  NAME:  ml_Boost modlist =  []
: cv::ml::DTrees

TYPE: function NAME:  ml_Boost_getBoostType RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_Boost_setBoostType RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_Boost_getWeakCount RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_Boost_setWeakCount RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_Boost_getWeightTrimRate RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_Boost_setWeightTrimRate RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE:  enum  NAME:  ml_Boost_Types
	NAME: ml_Boost_DISCRETE  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_Boost_REAL  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_Boost_LOGIT  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_Boost_GENTLE  POS:  3  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  ml_Boost_create RETURN TYPE:  Ptr_Boost modlist =  ['/S']
Modifited Return:  Ptr<Boost>

TYPE: function NAME:  ml_Boost_load RETURN TYPE:  Ptr_Boost modlist =  ['/S']
	TYPE: String  NAME:  filepath  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  nodeName  DEFAULT VALUE:  String()  MODS:  ['/C', '/Ref']
Modifited Return:  Ptr<Boost>

TYPE:  class  NAME:  ml_ANN_MLP modlist =  []
: cv::ml::StatModel

TYPE:  enum  NAME:  ml_ANN_MLP_TrainingMethods
	NAME: ml_ANN_MLP_BACKPROP  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_ANN_MLP_RPROP  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_ANN_MLP_ANNEAL  POS:  2  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  ml_ANN_MLP_setTrainMethod RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  method  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  param1  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  param2  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  ml_ANN_MLP_getTrainMethod RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_ANN_MLP_setActivationFunction RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  type  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  param1  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  param2  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  ml_ANN_MLP_setLayerSizes RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  _layer_sizes  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_ANN_MLP_setLayerSizes RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  _layer_sizes  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_ANN_MLP_getLayerSizes RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']
Modifited Return:  cv::Mat

TYPE: function NAME:  ml_ANN_MLP_getTermCriteria RETURN TYPE:  TermCriteria modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_ANN_MLP_setTermCriteria RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: TermCriteria  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_ANN_MLP_getBackpropWeightScale RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_ANN_MLP_setBackpropWeightScale RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_ANN_MLP_getBackpropMomentumScale RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_ANN_MLP_setBackpropMomentumScale RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_ANN_MLP_getRpropDW0 RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_ANN_MLP_setRpropDW0 RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_ANN_MLP_getRpropDWPlus RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_ANN_MLP_setRpropDWPlus RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_ANN_MLP_getRpropDWMinus RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_ANN_MLP_setRpropDWMinus RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_ANN_MLP_getRpropDWMin RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_ANN_MLP_setRpropDWMin RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_ANN_MLP_getRpropDWMax RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_ANN_MLP_setRpropDWMax RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_ANN_MLP_getAnnealInitialT RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_ANN_MLP_setAnnealInitialT RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_ANN_MLP_getAnnealFinalT RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_ANN_MLP_setAnnealFinalT RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_ANN_MLP_getAnnealCoolingRatio RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_ANN_MLP_setAnnealCoolingRatio RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_ANN_MLP_getAnnealItePerStep RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_ANN_MLP_setAnnealItePerStep RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE:  enum  NAME:  ml_ANN_MLP_ActivationFunctions
	NAME: ml_ANN_MLP_IDENTITY  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_ANN_MLP_SIGMOID_SYM  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_ANN_MLP_GAUSSIAN  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_ANN_MLP_RELU  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_ANN_MLP_LEAKYRELU  POS:  4  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ml_ANN_MLP_TrainFlags
	NAME: ml_ANN_MLP_UPDATE_WEIGHTS  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_ANN_MLP_NO_INPUT_SCALE  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_ANN_MLP_NO_OUTPUT_SCALE  POS:  4  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  ml_ANN_MLP_getWeights RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']
	TYPE: int  NAME:  layerIdx  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_ANN_MLP_create RETURN TYPE:  Ptr_ANN_MLP modlist =  ['/S']
Modifited Return:  Ptr<ANN_MLP>

TYPE: function NAME:  ml_ANN_MLP_load RETURN TYPE:  Ptr_ANN_MLP modlist =  ['/S']
	TYPE: String  NAME:  filepath  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
Modifited Return:  Ptr<ANN_MLP>

TYPE:  class  NAME:  ml_LogisticRegression modlist =  []
: cv::ml::StatModel

TYPE: function NAME:  ml_LogisticRegression_getLearningRate RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_LogisticRegression_setLearningRate RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_LogisticRegression_getIterations RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_LogisticRegression_setIterations RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_LogisticRegression_getRegularization RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_LogisticRegression_setRegularization RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_LogisticRegression_getTrainMethod RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_LogisticRegression_setTrainMethod RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_LogisticRegression_getMiniBatchSize RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_LogisticRegression_setMiniBatchSize RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_LogisticRegression_getTermCriteria RETURN TYPE:  TermCriteria modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_LogisticRegression_setTermCriteria RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: TermCriteria  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE:  enum  NAME:  ml_LogisticRegression_RegKinds
	NAME: ml_LogisticRegression_REG_DISABLE  POS:  -1  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_LogisticRegression_REG_L1  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_LogisticRegression_REG_L2  POS:  1  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ml_LogisticRegression_Methods
	NAME: ml_LogisticRegression_BATCH  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_LogisticRegression_MINI_BATCH  POS:  1  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  ml_LogisticRegression_predict RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']
	TYPE: Mat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  results  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  ml_LogisticRegression_predict RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']
	TYPE: UMat  NAME:  samples  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  results  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  ml_LogisticRegression_get_learnt_thetas RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_LogisticRegression_create RETURN TYPE:  Ptr_LogisticRegression modlist =  ['/S']
Modifited Return:  Ptr<LogisticRegression>

TYPE: function NAME:  ml_LogisticRegression_load RETURN TYPE:  Ptr_LogisticRegression modlist =  ['/S']
	TYPE: String  NAME:  filepath  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  nodeName  DEFAULT VALUE:  String()  MODS:  ['/C', '/Ref']
Modifited Return:  Ptr<LogisticRegression>

TYPE:  class  NAME:  ml_SVMSGD modlist =  []
: cv::ml::StatModel

TYPE:  enum  NAME:  ml_SVMSGD_SvmsgdType
	NAME: ml_SVMSGD_SGD  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_SVMSGD_ASGD  POS:  1  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ml_SVMSGD_MarginType
	NAME: ml_SVMSGD_SOFT_MARGIN  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ml_SVMSGD_HARD_MARGIN  POS:  1  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  ml_SVMSGD_getWeights RETURN TYPE:  Mat modlist =  ['/V', '/PV']

TYPE: function NAME:  ml_SVMSGD_getShift RETURN TYPE:  float modlist =  ['/V', '/PV']

TYPE: function NAME:  ml_SVMSGD_create RETURN TYPE:  Ptr_SVMSGD modlist =  ['/S']
Modifited Return:  Ptr<SVMSGD>

TYPE: function NAME:  ml_SVMSGD_load RETURN TYPE:  Ptr_SVMSGD modlist =  ['/S']
	TYPE: String  NAME:  filepath  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  nodeName  DEFAULT VALUE:  String()  MODS:  ['/C', '/Ref']
Modifited Return:  Ptr<SVMSGD>

TYPE: function NAME:  ml_SVMSGD_setOptimalParameters RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  svmsgdType  DEFAULT VALUE:  SVMSGD::ASGD  MODS:  []
	TYPE: int  NAME:  marginType  DEFAULT VALUE:  SVMSGD::SOFT_MARGIN  MODS:  []

TYPE: function NAME:  ml_SVMSGD_getSvmsgdType RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_SVMSGD_setSvmsgdType RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  svmsgdType  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_SVMSGD_getMarginType RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_SVMSGD_setMarginType RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  marginType  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_SVMSGD_getMarginRegularization RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_SVMSGD_setMarginRegularization RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: float  NAME:  marginRegularization  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_SVMSGD_getInitialStepSize RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_SVMSGD_setInitialStepSize RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: float  NAME:  InitialStepSize  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_SVMSGD_getStepDecreasingPower RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_SVMSGD_setStepDecreasingPower RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: float  NAME:  stepDecreasingPower  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ml_SVMSGD_getTermCriteria RETURN TYPE:  TermCriteria modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ml_SVMSGD_setTermCriteria RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: TermCriteria  NAME:  val  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE:  enum  NAME:  SpecialFilter
	NAME: FILTER_SCHARR  POS:  -1  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  MorphTypes
	NAME: MORPH_ERODE  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: MORPH_DILATE  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: MORPH_OPEN  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: MORPH_CLOSE  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: MORPH_GRADIENT  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: MORPH_TOPHAT  POS:  5  DEFAULT VALUE:  []  MODS:  []
	NAME: MORPH_BLACKHAT  POS:  6  DEFAULT VALUE:  []  MODS:  []
	NAME: MORPH_HITMISS  POS:  7  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  MorphShapes
	NAME: MORPH_RECT  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: MORPH_CROSS  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: MORPH_ELLIPSE  POS:  2  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  InterpolationFlags
	NAME: INTER_NEAREST  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: INTER_LINEAR  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: INTER_CUBIC  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: INTER_AREA  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: INTER_LANCZOS4  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: INTER_LINEAR_EXACT  POS:  5  DEFAULT VALUE:  []  MODS:  []
	NAME: INTER_MAX  POS:  7  DEFAULT VALUE:  []  MODS:  []
	NAME: WARP_FILL_OUTLIERS  POS:  8  DEFAULT VALUE:  []  MODS:  []
	NAME: WARP_INVERSE_MAP  POS:  16  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  WarpPolarMode
	NAME: WARP_POLAR_LINEAR  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: WARP_POLAR_LOG  POS:  256  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  InterpolationMasks
	NAME: INTER_BITS  POS:  5  DEFAULT VALUE:  []  MODS:  []
	NAME: INTER_BITS2  POS:  INTER_BITS * 2  DEFAULT VALUE:  []  MODS:  []
	NAME: INTER_TAB_SIZE  POS:  1 << INTER_BITS  DEFAULT VALUE:  []  MODS:  []
	NAME: INTER_TAB_SIZE2  POS:  INTER_TAB_SIZE * INTER_TAB_SIZE  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  DistanceTypes
	NAME: DIST_USER  POS:  -1  DEFAULT VALUE:  []  MODS:  []
	NAME: DIST_L1  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: DIST_L2  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: DIST_C  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: DIST_L12  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: DIST_FAIR  POS:  5  DEFAULT VALUE:  []  MODS:  []
	NAME: DIST_WELSCH  POS:  6  DEFAULT VALUE:  []  MODS:  []
	NAME: DIST_HUBER  POS:  7  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  DistanceTransformMasks
	NAME: DIST_MASK_3  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: DIST_MASK_5  POS:  5  DEFAULT VALUE:  []  MODS:  []
	NAME: DIST_MASK_PRECISE  POS:  0  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ThresholdTypes
	NAME: THRESH_BINARY  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: THRESH_BINARY_INV  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: THRESH_TRUNC  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: THRESH_TOZERO  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: THRESH_TOZERO_INV  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: THRESH_MASK  POS:  7  DEFAULT VALUE:  []  MODS:  []
	NAME: THRESH_OTSU  POS:  8  DEFAULT VALUE:  []  MODS:  []
	NAME: THRESH_TRIANGLE  POS:  16  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  AdaptiveThresholdTypes
	NAME: ADAPTIVE_THRESH_MEAN_C  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ADAPTIVE_THRESH_GAUSSIAN_C  POS:  1  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  GrabCutClasses
	NAME: GC_BGD  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: GC_FGD  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: GC_PR_BGD  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: GC_PR_FGD  POS:  3  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  GrabCutModes
	NAME: GC_INIT_WITH_RECT  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: GC_INIT_WITH_MASK  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: GC_EVAL  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: GC_EVAL_FREEZE_MODEL  POS:  3  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  DistanceTransformLabelTypes
	NAME: DIST_LABEL_CCOMP  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: DIST_LABEL_PIXEL  POS:  1  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  FloodFillFlags
	NAME: FLOODFILL_FIXED_RANGE  POS:  1 << 16  DEFAULT VALUE:  []  MODS:  []
	NAME: FLOODFILL_MASK_ONLY  POS:  1 << 17  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ConnectedComponentsTypes
	NAME: CC_STAT_LEFT  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: CC_STAT_TOP  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: CC_STAT_WIDTH  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: CC_STAT_HEIGHT  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: CC_STAT_AREA  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: CC_STAT_MAX  POS:  5  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ConnectedComponentsAlgorithmsTypes
	NAME: CCL_WU  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: CCL_DEFAULT  POS:  -1  DEFAULT VALUE:  []  MODS:  []
	NAME: CCL_GRANA  POS:  1  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  RetrievalModes
	NAME: RETR_EXTERNAL  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: RETR_LIST  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: RETR_CCOMP  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: RETR_TREE  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: RETR_FLOODFILL  POS:  4  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ContourApproximationModes
	NAME: CHAIN_APPROX_NONE  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: CHAIN_APPROX_SIMPLE  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: CHAIN_APPROX_TC89_L1  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: CHAIN_APPROX_TC89_KCOS  POS:  4  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ShapeMatchModes
	NAME: CONTOURS_MATCH_I1  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: CONTOURS_MATCH_I2  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: CONTOURS_MATCH_I3  POS:  3  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  HoughModes
	NAME: HOUGH_STANDARD  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: HOUGH_PROBABILISTIC  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: HOUGH_MULTI_SCALE  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: HOUGH_GRADIENT  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: HOUGH_GRADIENT_ALT  POS:  4  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  LineSegmentDetectorModes
	NAME: LSD_REFINE_NONE  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: LSD_REFINE_STD  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: LSD_REFINE_ADV  POS:  2  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  HistCompMethods
	NAME: HISTCMP_CORREL  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: HISTCMP_CHISQR  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: HISTCMP_INTERSECT  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: HISTCMP_BHATTACHARYYA  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: HISTCMP_HELLINGER  POS:  HISTCMP_BHATTACHARYYA  DEFAULT VALUE:  []  MODS:  []
	NAME: HISTCMP_CHISQR_ALT  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: HISTCMP_KL_DIV  POS:  5  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ColorConversionCodes
	NAME: COLOR_BGR2BGRA  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGB2RGBA  POS:  COLOR_BGR2BGRA  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGRA2BGR  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGBA2RGB  POS:  COLOR_BGRA2BGR  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR2RGBA  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGB2BGRA  POS:  COLOR_BGR2RGBA  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGBA2BGR  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGRA2RGB  POS:  COLOR_RGBA2BGR  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR2RGB  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGB2BGR  POS:  COLOR_BGR2RGB  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGRA2RGBA  POS:  5  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGBA2BGRA  POS:  COLOR_BGRA2RGBA  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR2GRAY  POS:  6  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGB2GRAY  POS:  7  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_GRAY2BGR  POS:  8  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_GRAY2RGB  POS:  COLOR_GRAY2BGR  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_GRAY2BGRA  POS:  9  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_GRAY2RGBA  POS:  COLOR_GRAY2BGRA  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGRA2GRAY  POS:  10  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGBA2GRAY  POS:  11  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR2BGR565  POS:  12  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGB2BGR565  POS:  13  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR5652BGR  POS:  14  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR5652RGB  POS:  15  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGRA2BGR565  POS:  16  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGBA2BGR565  POS:  17  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR5652BGRA  POS:  18  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR5652RGBA  POS:  19  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_GRAY2BGR565  POS:  20  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR5652GRAY  POS:  21  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR2BGR555  POS:  22  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGB2BGR555  POS:  23  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR5552BGR  POS:  24  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR5552RGB  POS:  25  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGRA2BGR555  POS:  26  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGBA2BGR555  POS:  27  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR5552BGRA  POS:  28  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR5552RGBA  POS:  29  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_GRAY2BGR555  POS:  30  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR5552GRAY  POS:  31  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR2XYZ  POS:  32  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGB2XYZ  POS:  33  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_XYZ2BGR  POS:  34  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_XYZ2RGB  POS:  35  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR2YCrCb  POS:  36  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGB2YCrCb  POS:  37  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YCrCb2BGR  POS:  38  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YCrCb2RGB  POS:  39  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR2HSV  POS:  40  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGB2HSV  POS:  41  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR2Lab  POS:  44  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGB2Lab  POS:  45  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR2Luv  POS:  50  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGB2Luv  POS:  51  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR2HLS  POS:  52  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGB2HLS  POS:  53  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_HSV2BGR  POS:  54  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_HSV2RGB  POS:  55  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_Lab2BGR  POS:  56  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_Lab2RGB  POS:  57  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_Luv2BGR  POS:  58  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_Luv2RGB  POS:  59  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_HLS2BGR  POS:  60  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_HLS2RGB  POS:  61  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR2HSV_FULL  POS:  66  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGB2HSV_FULL  POS:  67  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR2HLS_FULL  POS:  68  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGB2HLS_FULL  POS:  69  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_HSV2BGR_FULL  POS:  70  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_HSV2RGB_FULL  POS:  71  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_HLS2BGR_FULL  POS:  72  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_HLS2RGB_FULL  POS:  73  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_LBGR2Lab  POS:  74  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_LRGB2Lab  POS:  75  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_LBGR2Luv  POS:  76  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_LRGB2Luv  POS:  77  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_Lab2LBGR  POS:  78  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_Lab2LRGB  POS:  79  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_Luv2LBGR  POS:  80  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_Luv2LRGB  POS:  81  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR2YUV  POS:  82  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGB2YUV  POS:  83  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGR  POS:  84  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGB  POS:  85  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGB_NV12  POS:  90  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGR_NV12  POS:  91  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGB_NV21  POS:  92  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGR_NV21  POS:  93  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV420sp2RGB  POS:  COLOR_YUV2RGB_NV21  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV420sp2BGR  POS:  COLOR_YUV2BGR_NV21  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGBA_NV12  POS:  94  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGRA_NV12  POS:  95  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGBA_NV21  POS:  96  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGRA_NV21  POS:  97  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV420sp2RGBA  POS:  COLOR_YUV2RGBA_NV21  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV420sp2BGRA  POS:  COLOR_YUV2BGRA_NV21  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGB_YV12  POS:  98  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGR_YV12  POS:  99  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGB_IYUV  POS:  100  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGR_IYUV  POS:  101  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGB_I420  POS:  COLOR_YUV2RGB_IYUV  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGR_I420  POS:  COLOR_YUV2BGR_IYUV  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV420p2RGB  POS:  COLOR_YUV2RGB_YV12  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV420p2BGR  POS:  COLOR_YUV2BGR_YV12  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGBA_YV12  POS:  102  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGRA_YV12  POS:  103  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGBA_IYUV  POS:  104  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGRA_IYUV  POS:  105  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGBA_I420  POS:  COLOR_YUV2RGBA_IYUV  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGRA_I420  POS:  COLOR_YUV2BGRA_IYUV  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV420p2RGBA  POS:  COLOR_YUV2RGBA_YV12  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV420p2BGRA  POS:  COLOR_YUV2BGRA_YV12  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2GRAY_420  POS:  106  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2GRAY_NV21  POS:  COLOR_YUV2GRAY_420  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2GRAY_NV12  POS:  COLOR_YUV2GRAY_420  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2GRAY_YV12  POS:  COLOR_YUV2GRAY_420  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2GRAY_IYUV  POS:  COLOR_YUV2GRAY_420  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2GRAY_I420  POS:  COLOR_YUV2GRAY_420  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV420sp2GRAY  POS:  COLOR_YUV2GRAY_420  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV420p2GRAY  POS:  COLOR_YUV2GRAY_420  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGB_UYVY  POS:  107  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGR_UYVY  POS:  108  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGB_Y422  POS:  COLOR_YUV2RGB_UYVY  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGR_Y422  POS:  COLOR_YUV2BGR_UYVY  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGB_UYNV  POS:  COLOR_YUV2RGB_UYVY  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGR_UYNV  POS:  COLOR_YUV2BGR_UYVY  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGBA_UYVY  POS:  111  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGRA_UYVY  POS:  112  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGBA_Y422  POS:  COLOR_YUV2RGBA_UYVY  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGRA_Y422  POS:  COLOR_YUV2BGRA_UYVY  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGBA_UYNV  POS:  COLOR_YUV2RGBA_UYVY  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGRA_UYNV  POS:  COLOR_YUV2BGRA_UYVY  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGB_YUY2  POS:  115  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGR_YUY2  POS:  116  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGB_YVYU  POS:  117  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGR_YVYU  POS:  118  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGB_YUYV  POS:  COLOR_YUV2RGB_YUY2  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGR_YUYV  POS:  COLOR_YUV2BGR_YUY2  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGB_YUNV  POS:  COLOR_YUV2RGB_YUY2  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGR_YUNV  POS:  COLOR_YUV2BGR_YUY2  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGBA_YUY2  POS:  119  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGRA_YUY2  POS:  120  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGBA_YVYU  POS:  121  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGRA_YVYU  POS:  122  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGBA_YUYV  POS:  COLOR_YUV2RGBA_YUY2  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGRA_YUYV  POS:  COLOR_YUV2BGRA_YUY2  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2RGBA_YUNV  POS:  COLOR_YUV2RGBA_YUY2  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2BGRA_YUNV  POS:  COLOR_YUV2BGRA_YUY2  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2GRAY_UYVY  POS:  123  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2GRAY_YUY2  POS:  124  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2GRAY_Y422  POS:  COLOR_YUV2GRAY_UYVY  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2GRAY_UYNV  POS:  COLOR_YUV2GRAY_UYVY  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2GRAY_YVYU  POS:  COLOR_YUV2GRAY_YUY2  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2GRAY_YUYV  POS:  COLOR_YUV2GRAY_YUY2  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_YUV2GRAY_YUNV  POS:  COLOR_YUV2GRAY_YUY2  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGBA2mRGBA  POS:  125  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_mRGBA2RGBA  POS:  126  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGB2YUV_I420  POS:  127  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR2YUV_I420  POS:  128  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGB2YUV_IYUV  POS:  COLOR_RGB2YUV_I420  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR2YUV_IYUV  POS:  COLOR_BGR2YUV_I420  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGBA2YUV_I420  POS:  129  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGRA2YUV_I420  POS:  130  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGBA2YUV_IYUV  POS:  COLOR_RGBA2YUV_I420  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGRA2YUV_IYUV  POS:  COLOR_BGRA2YUV_I420  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGB2YUV_YV12  POS:  131  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGR2YUV_YV12  POS:  132  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_RGBA2YUV_YV12  POS:  133  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BGRA2YUV_YV12  POS:  134  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerBG2BGR  POS:  46  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerGB2BGR  POS:  47  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerRG2BGR  POS:  48  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerGR2BGR  POS:  49  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerBG2RGB  POS:  COLOR_BayerRG2BGR  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerGB2RGB  POS:  COLOR_BayerGR2BGR  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerRG2RGB  POS:  COLOR_BayerBG2BGR  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerGR2RGB  POS:  COLOR_BayerGB2BGR  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerBG2GRAY  POS:  86  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerGB2GRAY  POS:  87  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerRG2GRAY  POS:  88  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerGR2GRAY  POS:  89  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerBG2BGR_VNG  POS:  62  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerGB2BGR_VNG  POS:  63  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerRG2BGR_VNG  POS:  64  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerGR2BGR_VNG  POS:  65  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerBG2RGB_VNG  POS:  COLOR_BayerRG2BGR_VNG  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerGB2RGB_VNG  POS:  COLOR_BayerGR2BGR_VNG  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerRG2RGB_VNG  POS:  COLOR_BayerBG2BGR_VNG  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerGR2RGB_VNG  POS:  COLOR_BayerGB2BGR_VNG  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerBG2BGR_EA  POS:  135  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerGB2BGR_EA  POS:  136  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerRG2BGR_EA  POS:  137  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerGR2BGR_EA  POS:  138  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerBG2RGB_EA  POS:  COLOR_BayerRG2BGR_EA  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerGB2RGB_EA  POS:  COLOR_BayerGR2BGR_EA  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerRG2RGB_EA  POS:  COLOR_BayerBG2BGR_EA  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerGR2RGB_EA  POS:  COLOR_BayerGB2BGR_EA  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerBG2BGRA  POS:  139  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerGB2BGRA  POS:  140  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerRG2BGRA  POS:  141  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerGR2BGRA  POS:  142  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerBG2RGBA  POS:  COLOR_BayerRG2BGRA  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerGB2RGBA  POS:  COLOR_BayerGR2BGRA  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerRG2RGBA  POS:  COLOR_BayerBG2BGRA  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_BayerGR2RGBA  POS:  COLOR_BayerGB2BGRA  DEFAULT VALUE:  []  MODS:  []
	NAME: COLOR_COLORCVT_MAX  POS:  143  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  RectanglesIntersectTypes
	NAME: INTERSECT_NONE  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: INTERSECT_PARTIAL  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: INTERSECT_FULL  POS:  2  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  LineTypes
	NAME: FILLED  POS:  -1  DEFAULT VALUE:  []  MODS:  []
	NAME: LINE_4  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: LINE_8  POS:  8  DEFAULT VALUE:  []  MODS:  []
	NAME: LINE_AA  POS:  16  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  HersheyFonts
	NAME: FONT_HERSHEY_SIMPLEX  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: FONT_HERSHEY_PLAIN  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: FONT_HERSHEY_DUPLEX  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: FONT_HERSHEY_COMPLEX  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: FONT_HERSHEY_TRIPLEX  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: FONT_HERSHEY_COMPLEX_SMALL  POS:  5  DEFAULT VALUE:  []  MODS:  []
	NAME: FONT_HERSHEY_SCRIPT_SIMPLEX  POS:  6  DEFAULT VALUE:  []  MODS:  []
	NAME: FONT_HERSHEY_SCRIPT_COMPLEX  POS:  7  DEFAULT VALUE:  []  MODS:  []
	NAME: FONT_ITALIC  POS:  16  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  MarkerTypes
	NAME: MARKER_CROSS  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: MARKER_TILTED_CROSS  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: MARKER_STAR  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: MARKER_DIAMOND  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: MARKER_SQUARE  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: MARKER_TRIANGLE_UP  POS:  5  DEFAULT VALUE:  []  MODS:  []
	NAME: MARKER_TRIANGLE_DOWN  POS:  6  DEFAULT VALUE:  []  MODS:  []

TYPE:  class  NAME:  GeneralizedHough modlist =  []
: cv::Algorithm

TYPE: function NAME:  GeneralizedHough_setTemplate RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  templ  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  templCenter  DEFAULT VALUE:  Point(-1, -1)  MODS:  []

TYPE: function NAME:  GeneralizedHough_setTemplate RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  templ  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  templCenter  DEFAULT VALUE:  Point(-1, -1)  MODS:  []

TYPE: function NAME:  GeneralizedHough_setTemplate RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  edges  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dx  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dy  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  templCenter  DEFAULT VALUE:  Point(-1, -1)  MODS:  []

TYPE: function NAME:  GeneralizedHough_setTemplate RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  edges  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dx  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dy  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  templCenter  DEFAULT VALUE:  Point(-1, -1)  MODS:  []

TYPE: function NAME:  GeneralizedHough_detect RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  positions  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  votes  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  GeneralizedHough_detect RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  positions  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  votes  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  GeneralizedHough_detect RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  edges  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dx  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dy  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  positions  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  votes  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  GeneralizedHough_detect RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  edges  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dx  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dy  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  positions  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  votes  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  GeneralizedHough_setCannyLowThresh RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  cannyLowThresh  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHough_getCannyLowThresh RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GeneralizedHough_setCannyHighThresh RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  cannyHighThresh  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHough_getCannyHighThresh RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GeneralizedHough_setMinDist RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  minDist  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHough_getMinDist RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GeneralizedHough_setDp RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  dp  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHough_getDp RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GeneralizedHough_setMaxBufferSize RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  maxBufferSize  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHough_getMaxBufferSize RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE:  class  NAME:  GeneralizedHoughBallard modlist =  []
: cv::GeneralizedHough

TYPE: function NAME:  GeneralizedHoughBallard_setLevels RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  levels  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHoughBallard_getLevels RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GeneralizedHoughBallard_setVotesThreshold RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  votesThreshold  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHoughBallard_getVotesThreshold RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE:  class  NAME:  GeneralizedHoughGuil modlist =  []
: cv::GeneralizedHough

TYPE: function NAME:  GeneralizedHoughGuil_setXi RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  xi  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHoughGuil_getXi RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GeneralizedHoughGuil_setLevels RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  levels  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHoughGuil_getLevels RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GeneralizedHoughGuil_setAngleEpsilon RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  angleEpsilon  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHoughGuil_getAngleEpsilon RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GeneralizedHoughGuil_setMinAngle RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  minAngle  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHoughGuil_getMinAngle RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GeneralizedHoughGuil_setMaxAngle RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  maxAngle  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHoughGuil_getMaxAngle RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GeneralizedHoughGuil_setAngleStep RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  angleStep  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHoughGuil_getAngleStep RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GeneralizedHoughGuil_setAngleThresh RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  angleThresh  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHoughGuil_getAngleThresh RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GeneralizedHoughGuil_setMinScale RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  minScale  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHoughGuil_getMinScale RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GeneralizedHoughGuil_setMaxScale RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  maxScale  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHoughGuil_getMaxScale RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GeneralizedHoughGuil_setScaleStep RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  scaleStep  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHoughGuil_getScaleStep RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GeneralizedHoughGuil_setScaleThresh RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  scaleThresh  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHoughGuil_getScaleThresh RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GeneralizedHoughGuil_setPosThresh RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  posThresh  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GeneralizedHoughGuil_getPosThresh RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE:  class  NAME:  CLAHE modlist =  []
: cv::Algorithm

TYPE: function NAME:  CLAHE_apply RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  CLAHE_apply RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  CLAHE_setClipLimit RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  clipLimit  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  CLAHE_getClipLimit RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  CLAHE_setTilesGridSize RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Size  NAME:  tileGridSize  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  CLAHE_getTilesGridSize RETURN TYPE:  Size modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  CLAHE_collectGarbage RETURN TYPE:  void modlist =  ['/V', '/PV']

TYPE:  class  NAME:  Subdiv2D modlist =  []

TYPE:  enum  NAME:  Subdiv2D_<unnamed>
	NAME: Subdiv2D_PTLOC_ERROR  POS:  -2  DEFAULT VALUE:  []  MODS:  []
	NAME: Subdiv2D_PTLOC_OUTSIDE_RECT  POS:  -1  DEFAULT VALUE:  []  MODS:  []
	NAME: Subdiv2D_PTLOC_INSIDE  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: Subdiv2D_PTLOC_VERTEX  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: Subdiv2D_PTLOC_ON_EDGE  POS:  2  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  Subdiv2D_<unnamed>
	NAME: Subdiv2D_NEXT_AROUND_ORG  POS:  0x00  DEFAULT VALUE:  []  MODS:  []
	NAME: Subdiv2D_NEXT_AROUND_DST  POS:  0x22  DEFAULT VALUE:  []  MODS:  []
	NAME: Subdiv2D_PREV_AROUND_ORG  POS:  0x11  DEFAULT VALUE:  []  MODS:  []
	NAME: Subdiv2D_PREV_AROUND_DST  POS:  0x33  DEFAULT VALUE:  []  MODS:  []
	NAME: Subdiv2D_NEXT_AROUND_LEFT  POS:  0x13  DEFAULT VALUE:  []  MODS:  []
	NAME: Subdiv2D_NEXT_AROUND_RIGHT  POS:  0x31  DEFAULT VALUE:  []  MODS:  []
	NAME: Subdiv2D_PREV_AROUND_LEFT  POS:  0x20  DEFAULT VALUE:  []  MODS:  []
	NAME: Subdiv2D_PREV_AROUND_RIGHT  POS:  0x02  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  Subdiv2D_Subdiv2D RETURN TYPE:   modlist =  []
Modifited Return:  None

TYPE: function NAME:  Subdiv2D_Subdiv2D RETURN TYPE:   modlist =  []
	TYPE: Rect  NAME:  rect  DEFAULT VALUE:    MODS:  []
Modifited Return:  None

TYPE: function NAME:  Subdiv2D_initDelaunay RETURN TYPE:  void modlist =  []
	TYPE: Rect  NAME:  rect  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  Subdiv2D_insert RETURN TYPE:  int modlist =  []
	TYPE: Point2f  NAME:  pt  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  Subdiv2D_insert RETURN TYPE:  void modlist =  []
	TYPE: vector_Point2f  NAME:  ptvec  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  Subdiv2D_locate RETURN TYPE:  int modlist =  []
	TYPE: Point2f  NAME:  pt  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  edge  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: int  NAME:  vertex  DEFAULT VALUE:    MODS:  ['/O', '/Ref']

TYPE: function NAME:  Subdiv2D_findNearest RETURN TYPE:  int modlist =  []
	TYPE: Point2f  NAME:  pt  DEFAULT VALUE:    MODS:  []
	TYPE: Point2f*  NAME:  nearestPt  DEFAULT VALUE:  0  MODS:  ['/O']

TYPE: function NAME:  Subdiv2D_getEdgeList RETURN TYPE:  void modlist =  ['/C']
	TYPE: vector_Vec4f  NAME:  edgeList  DEFAULT VALUE:    MODS:  ['/O', '/Ref']

TYPE: function NAME:  Subdiv2D_getLeadingEdgeList RETURN TYPE:  void modlist =  ['/C']
	TYPE: vector_int  NAME:  leadingEdgeList  DEFAULT VALUE:    MODS:  ['/O', '/Ref']

TYPE: function NAME:  Subdiv2D_getTriangleList RETURN TYPE:  void modlist =  ['/C']
	TYPE: vector_Vec6f  NAME:  triangleList  DEFAULT VALUE:    MODS:  ['/O', '/Ref']

TYPE: function NAME:  Subdiv2D_getVoronoiFacetList RETURN TYPE:  void modlist =  []
	TYPE: vector_int  NAME:  idx  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: vector_vector_Point2f  NAME:  facetList  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_Point2f  NAME:  facetCenters  DEFAULT VALUE:    MODS:  ['/O', '/Ref']

TYPE: function NAME:  Subdiv2D_getVertex RETURN TYPE:  Point2f modlist =  ['/C']
	TYPE: int  NAME:  vertex  DEFAULT VALUE:    MODS:  []
	TYPE: int*  NAME:  firstEdge  DEFAULT VALUE:  0  MODS:  ['/O']

TYPE: function NAME:  Subdiv2D_getEdge RETURN TYPE:  int modlist =  ['/C']
	TYPE: int  NAME:  edge  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  nextEdgeType  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  Subdiv2D_nextEdge RETURN TYPE:  int modlist =  ['/C']
	TYPE: int  NAME:  edge  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  Subdiv2D_rotateEdge RETURN TYPE:  int modlist =  ['/C']
	TYPE: int  NAME:  edge  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  rotate  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  Subdiv2D_symEdge RETURN TYPE:  int modlist =  ['/C']
	TYPE: int  NAME:  edge  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  Subdiv2D_edgeOrg RETURN TYPE:  int modlist =  ['/C']
	TYPE: int  NAME:  edge  DEFAULT VALUE:    MODS:  []
	TYPE: Point2f*  NAME:  orgpt  DEFAULT VALUE:  0  MODS:  ['/O']

TYPE: function NAME:  Subdiv2D_edgeDst RETURN TYPE:  int modlist =  ['/C']
	TYPE: int  NAME:  edge  DEFAULT VALUE:    MODS:  []
	TYPE: Point2f*  NAME:  dstpt  DEFAULT VALUE:  0  MODS:  ['/O']

TYPE:  class  NAME:  LineSegmentDetector modlist =  []
: cv::Algorithm

TYPE: function NAME:  LineSegmentDetector_detect RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  _image  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  _lines  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  width  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  prec  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  nfa  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  LineSegmentDetector_detect RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  _image  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  _lines  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  width  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  prec  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  nfa  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  LineSegmentDetector_drawSegments RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  _image  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  lines  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  LineSegmentDetector_drawSegments RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  _image  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  lines  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  LineSegmentDetector_compareSegments RETURN TYPE:  int modlist =  ['/V', '/PV']
	TYPE: Size  NAME:  size  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  lines1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  lines2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  _image  DEFAULT VALUE:  Mat()  MODS:  ['/IO']

TYPE: function NAME:  LineSegmentDetector_compareSegments RETURN TYPE:  int modlist =  ['/V', '/PV']
	TYPE: Size  NAME:  size  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  lines1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  lines2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  _image  DEFAULT VALUE:  UMat()  MODS:  ['/IO']

TYPE: function NAME:  createLineSegmentDetector RETURN TYPE:  Ptr_LineSegmentDetector modlist =  []
	TYPE: int  NAME:  _refine  DEFAULT VALUE:  LSD_REFINE_STD  MODS:  []
	TYPE: double  NAME:  _scale  DEFAULT VALUE:  0.8  MODS:  []
	TYPE: double  NAME:  _sigma_scale  DEFAULT VALUE:  0.6  MODS:  []
	TYPE: double  NAME:  _quant  DEFAULT VALUE:  2.0  MODS:  []
	TYPE: double  NAME:  _ang_th  DEFAULT VALUE:  22.5  MODS:  []
	TYPE: double  NAME:  _log_eps  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  _density_th  DEFAULT VALUE:  0.7  MODS:  []
	TYPE: int  NAME:  _n_bins  DEFAULT VALUE:  1024  MODS:  []
Modifited Return:  Ptr<LineSegmentDetector>

TYPE: function NAME:  getGaussianKernel RETURN TYPE:  Mat modlist =  []
	TYPE: int  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  sigma  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ktype  DEFAULT VALUE:  CV_64F  MODS:  []

TYPE: function NAME:  getDerivKernels RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  kx  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  ky  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  dx  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  dy  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  normalize  DEFAULT VALUE:  false  MODS:  []
	TYPE: int  NAME:  ktype  DEFAULT VALUE:  CV_32F  MODS:  []

TYPE: function NAME:  getDerivKernels RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  kx  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  ky  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  dx  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  dy  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  normalize  DEFAULT VALUE:  false  MODS:  []
	TYPE: int  NAME:  ktype  DEFAULT VALUE:  CV_32F  MODS:  []

TYPE: function NAME:  getGaborKernel RETURN TYPE:  Mat modlist =  []
	TYPE: Size  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  sigma  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  theta  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  lambd  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  gamma  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  psi  DEFAULT VALUE:  CV_PI*0.5  MODS:  []
	TYPE: int  NAME:  ktype  DEFAULT VALUE:  CV_64F  MODS:  []

TYPE: function NAME:  getStructuringElement RETURN TYPE:  Mat modlist =  []
	TYPE: int  NAME:  shape  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  anchor  DEFAULT VALUE:  Point(-1,-1)  MODS:  []

TYPE: function NAME:  medianBlur RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ksize  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  medianBlur RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ksize  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GaussianBlur RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Size  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  sigmaX  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  sigmaY  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  GaussianBlur RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Size  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  sigmaX  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  sigmaY  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  bilateralFilter RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  d  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  sigmaColor  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  sigmaSpace  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  bilateralFilter RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  d  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  sigmaColor  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  sigmaSpace  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  boxFilter RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ddepth  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  anchor  DEFAULT VALUE:  Point(-1,-1)  MODS:  []
	TYPE: bool  NAME:  normalize  DEFAULT VALUE:  true  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  boxFilter RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ddepth  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  anchor  DEFAULT VALUE:  Point(-1,-1)  MODS:  []
	TYPE: bool  NAME:  normalize  DEFAULT VALUE:  true  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  sqrBoxFilter RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ddepth  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  anchor  DEFAULT VALUE:  Point(-1, -1)  MODS:  []
	TYPE: bool  NAME:  normalize  DEFAULT VALUE:  true  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  sqrBoxFilter RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ddepth  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  anchor  DEFAULT VALUE:  Point(-1, -1)  MODS:  []
	TYPE: bool  NAME:  normalize  DEFAULT VALUE:  true  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  blur RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Size  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  anchor  DEFAULT VALUE:  Point(-1,-1)  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  blur RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Size  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  anchor  DEFAULT VALUE:  Point(-1,-1)  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  filter2D RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ddepth  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  kernel  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  anchor  DEFAULT VALUE:  Point(-1,-1)  MODS:  []
	TYPE: double  NAME:  delta  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  filter2D RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ddepth  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  kernel  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  anchor  DEFAULT VALUE:  Point(-1,-1)  MODS:  []
	TYPE: double  NAME:  delta  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  sepFilter2D RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ddepth  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  kernelX  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  kernelY  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  anchor  DEFAULT VALUE:  Point(-1,-1)  MODS:  []
	TYPE: double  NAME:  delta  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  sepFilter2D RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ddepth  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  kernelX  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  kernelY  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  anchor  DEFAULT VALUE:  Point(-1,-1)  MODS:  []
	TYPE: double  NAME:  delta  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  Sobel RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ddepth  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  dx  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  dy  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ksize  DEFAULT VALUE:  3  MODS:  []
	TYPE: double  NAME:  scale  DEFAULT VALUE:  1  MODS:  []
	TYPE: double  NAME:  delta  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  Sobel RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ddepth  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  dx  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  dy  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ksize  DEFAULT VALUE:  3  MODS:  []
	TYPE: double  NAME:  scale  DEFAULT VALUE:  1  MODS:  []
	TYPE: double  NAME:  delta  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  spatialGradient RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dx  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  dy  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ksize  DEFAULT VALUE:  3  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  spatialGradient RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dx  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  dy  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ksize  DEFAULT VALUE:  3  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  Scharr RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ddepth  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  dx  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  dy  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  scale  DEFAULT VALUE:  1  MODS:  []
	TYPE: double  NAME:  delta  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  Scharr RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ddepth  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  dx  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  dy  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  scale  DEFAULT VALUE:  1  MODS:  []
	TYPE: double  NAME:  delta  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  Laplacian RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ddepth  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ksize  DEFAULT VALUE:  1  MODS:  []
	TYPE: double  NAME:  scale  DEFAULT VALUE:  1  MODS:  []
	TYPE: double  NAME:  delta  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  Laplacian RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ddepth  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ksize  DEFAULT VALUE:  1  MODS:  []
	TYPE: double  NAME:  scale  DEFAULT VALUE:  1  MODS:  []
	TYPE: double  NAME:  delta  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  Canny RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  edges  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  threshold1  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  threshold2  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  apertureSize  DEFAULT VALUE:  3  MODS:  []
	TYPE: bool  NAME:  L2gradient  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  Canny RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  edges  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  threshold1  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  threshold2  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  apertureSize  DEFAULT VALUE:  3  MODS:  []
	TYPE: bool  NAME:  L2gradient  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  Canny RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  dx  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dy  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  edges  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  threshold1  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  threshold2  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  L2gradient  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  Canny RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  dx  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dy  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  edges  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  threshold1  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  threshold2  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  L2gradient  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  cornerMinEigenVal RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ksize  DEFAULT VALUE:  3  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  cornerMinEigenVal RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ksize  DEFAULT VALUE:  3  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  cornerHarris RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  k  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  cornerHarris RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  k  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  cornerEigenValsAndVecs RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  cornerEigenValsAndVecs RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  preCornerDetect RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  preCornerDetect RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  ksize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  cornerSubPix RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  corners  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Size  NAME:  winSize  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  zeroZone  DEFAULT VALUE:    MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  cornerSubPix RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  corners  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Size  NAME:  winSize  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  zeroZone  DEFAULT VALUE:    MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  goodFeaturesToTrack RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  corners  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  maxCorners  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  qualityLevel  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  minDistance  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:  3  MODS:  []
	TYPE: bool  NAME:  useHarrisDetector  DEFAULT VALUE:  false  MODS:  []
	TYPE: double  NAME:  k  DEFAULT VALUE:  0.04  MODS:  []

TYPE: function NAME:  goodFeaturesToTrack RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  corners  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  maxCorners  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  qualityLevel  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  minDistance  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:  3  MODS:  []
	TYPE: bool  NAME:  useHarrisDetector  DEFAULT VALUE:  false  MODS:  []
	TYPE: double  NAME:  k  DEFAULT VALUE:  0.04  MODS:  []

TYPE: function NAME:  goodFeaturesToTrack RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  corners  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  maxCorners  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  qualityLevel  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  minDistance  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  gradientSize  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  useHarrisDetector  DEFAULT VALUE:  false  MODS:  []
	TYPE: double  NAME:  k  DEFAULT VALUE:  0.04  MODS:  []

TYPE: function NAME:  goodFeaturesToTrack RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  corners  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  maxCorners  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  qualityLevel  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  minDistance  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  gradientSize  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  useHarrisDetector  DEFAULT VALUE:  false  MODS:  []
	TYPE: double  NAME:  k  DEFAULT VALUE:  0.04  MODS:  []

TYPE: function NAME:  HoughLines RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  lines  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  rho  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  theta  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  threshold  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  srn  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  stn  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  min_theta  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  max_theta  DEFAULT VALUE:  CV_PI  MODS:  []

TYPE: function NAME:  HoughLines RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  lines  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  rho  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  theta  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  threshold  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  srn  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  stn  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  min_theta  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  max_theta  DEFAULT VALUE:  CV_PI  MODS:  []

TYPE: function NAME:  HoughLinesP RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  lines  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  rho  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  theta  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  threshold  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  minLineLength  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  maxLineGap  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  HoughLinesP RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  lines  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  rho  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  theta  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  threshold  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  minLineLength  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  maxLineGap  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  HoughLinesPointSet RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  _point  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  _lines  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  lines_max  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  threshold  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  min_rho  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  max_rho  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  rho_step  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  min_theta  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  max_theta  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  theta_step  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  HoughLinesPointSet RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  _point  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  _lines  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  lines_max  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  threshold  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  min_rho  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  max_rho  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  rho_step  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  min_theta  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  max_theta  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  theta_step  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  HoughCircles RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  circles  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  method  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  dp  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  minDist  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  param1  DEFAULT VALUE:  100  MODS:  []
	TYPE: double  NAME:  param2  DEFAULT VALUE:  100  MODS:  []
	TYPE: int  NAME:  minRadius  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  maxRadius  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  HoughCircles RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  circles  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  method  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  dp  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  minDist  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  param1  DEFAULT VALUE:  100  MODS:  []
	TYPE: double  NAME:  param2  DEFAULT VALUE:  100  MODS:  []
	TYPE: int  NAME:  minRadius  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  maxRadius  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  erode RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  kernel  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  anchor  DEFAULT VALUE:  Point(-1,-1)  MODS:  []
	TYPE: int  NAME:  iterations  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_CONSTANT  MODS:  []
	TYPE: Scalar  NAME:  borderValue  DEFAULT VALUE:  morphologyDefaultBorderValue()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  erode RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  kernel  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  anchor  DEFAULT VALUE:  Point(-1,-1)  MODS:  []
	TYPE: int  NAME:  iterations  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_CONSTANT  MODS:  []
	TYPE: Scalar  NAME:  borderValue  DEFAULT VALUE:  morphologyDefaultBorderValue()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  dilate RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  kernel  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  anchor  DEFAULT VALUE:  Point(-1,-1)  MODS:  []
	TYPE: int  NAME:  iterations  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_CONSTANT  MODS:  []
	TYPE: Scalar  NAME:  borderValue  DEFAULT VALUE:  morphologyDefaultBorderValue()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  dilate RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  kernel  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  anchor  DEFAULT VALUE:  Point(-1,-1)  MODS:  []
	TYPE: int  NAME:  iterations  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_CONSTANT  MODS:  []
	TYPE: Scalar  NAME:  borderValue  DEFAULT VALUE:  morphologyDefaultBorderValue()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  morphologyEx RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  op  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  kernel  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  anchor  DEFAULT VALUE:  Point(-1,-1)  MODS:  []
	TYPE: int  NAME:  iterations  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_CONSTANT  MODS:  []
	TYPE: Scalar  NAME:  borderValue  DEFAULT VALUE:  morphologyDefaultBorderValue()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  morphologyEx RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  op  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  kernel  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  anchor  DEFAULT VALUE:  Point(-1,-1)  MODS:  []
	TYPE: int  NAME:  iterations  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_CONSTANT  MODS:  []
	TYPE: Scalar  NAME:  borderValue  DEFAULT VALUE:  morphologyDefaultBorderValue()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  resize RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Size  NAME:  dsize  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  fx  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  fy  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  interpolation  DEFAULT VALUE:  INTER_LINEAR  MODS:  []

TYPE: function NAME:  resize RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Size  NAME:  dsize  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  fx  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  fy  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  interpolation  DEFAULT VALUE:  INTER_LINEAR  MODS:  []

TYPE: function NAME:  warpAffine RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  M  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  dsize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  INTER_LINEAR  MODS:  []
	TYPE: int  NAME:  borderMode  DEFAULT VALUE:  BORDER_CONSTANT  MODS:  []
	TYPE: Scalar  NAME:  borderValue  DEFAULT VALUE:  Scalar()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  warpAffine RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  M  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  dsize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  INTER_LINEAR  MODS:  []
	TYPE: int  NAME:  borderMode  DEFAULT VALUE:  BORDER_CONSTANT  MODS:  []
	TYPE: Scalar  NAME:  borderValue  DEFAULT VALUE:  Scalar()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  warpPerspective RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  M  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  dsize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  INTER_LINEAR  MODS:  []
	TYPE: int  NAME:  borderMode  DEFAULT VALUE:  BORDER_CONSTANT  MODS:  []
	TYPE: Scalar  NAME:  borderValue  DEFAULT VALUE:  Scalar()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  warpPerspective RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  M  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  dsize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  INTER_LINEAR  MODS:  []
	TYPE: int  NAME:  borderMode  DEFAULT VALUE:  BORDER_CONSTANT  MODS:  []
	TYPE: Scalar  NAME:  borderValue  DEFAULT VALUE:  Scalar()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  remap RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  map1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  map2  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  interpolation  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  borderMode  DEFAULT VALUE:  BORDER_CONSTANT  MODS:  []
	TYPE: Scalar  NAME:  borderValue  DEFAULT VALUE:  Scalar()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  remap RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  map1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  map2  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  interpolation  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  borderMode  DEFAULT VALUE:  BORDER_CONSTANT  MODS:  []
	TYPE: Scalar  NAME:  borderValue  DEFAULT VALUE:  Scalar()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  convertMaps RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  map1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  map2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dstmap1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  dstmap2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  dstmap1type  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  nninterpolation  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  convertMaps RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  map1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  map2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dstmap1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  dstmap2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  dstmap1type  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  nninterpolation  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  getRotationMatrix2D RETURN TYPE:  Mat modlist =  []
	TYPE: Point2f  NAME:  center  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  angle  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  scale  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  invertAffineTransform RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  M  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  iM  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  invertAffineTransform RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  M  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  iM  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  getPerspectiveTransform RETURN TYPE:  Mat modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  solveMethod  DEFAULT VALUE:  DECOMP_LU  MODS:  []

TYPE: function NAME:  getPerspectiveTransform RETURN TYPE:  Mat modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  solveMethod  DEFAULT VALUE:  DECOMP_LU  MODS:  []

TYPE: function NAME:  getAffineTransform RETURN TYPE:  Mat modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  getAffineTransform RETURN TYPE:  Mat modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  getRectSubPix RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  patchSize  DEFAULT VALUE:    MODS:  []
	TYPE: Point2f  NAME:  center  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  patch  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  patchType  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  getRectSubPix RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  patchSize  DEFAULT VALUE:    MODS:  []
	TYPE: Point2f  NAME:  center  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  patch  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  patchType  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  logPolar RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Point2f  NAME:  center  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  M  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  logPolar RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Point2f  NAME:  center  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  M  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  linearPolar RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Point2f  NAME:  center  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  maxRadius  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  linearPolar RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Point2f  NAME:  center  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  maxRadius  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  warpPolar RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Size  NAME:  dsize  DEFAULT VALUE:    MODS:  []
	TYPE: Point2f  NAME:  center  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  maxRadius  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  warpPolar RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Size  NAME:  dsize  DEFAULT VALUE:    MODS:  []
	TYPE: Point2f  NAME:  center  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  maxRadius  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  integral RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  sum  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  sdepth  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  integral RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  sum  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  sdepth  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  integral RETURN TYPE:  void modlist =  ['=integral2']
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  sum  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  sqsum  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  sdepth  DEFAULT VALUE:  -1  MODS:  []
	TYPE: int  NAME:  sqdepth  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  integral RETURN TYPE:  void modlist =  ['=integral2']
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  sum  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  sqsum  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  sdepth  DEFAULT VALUE:  -1  MODS:  []
	TYPE: int  NAME:  sqdepth  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  integral RETURN TYPE:  void modlist =  ['=integral3']
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  sum  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  sqsum  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  tilted  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  sdepth  DEFAULT VALUE:  -1  MODS:  []
	TYPE: int  NAME:  sqdepth  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  integral RETURN TYPE:  void modlist =  ['=integral3']
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  sum  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  sqsum  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  tilted  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  sdepth  DEFAULT VALUE:  -1  MODS:  []
	TYPE: int  NAME:  sqdepth  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  accumulate RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  accumulate RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  accumulateSquare RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  accumulateSquare RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  accumulateProduct RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  accumulateProduct RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  accumulateWeighted RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: double  NAME:  alpha  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  accumulateWeighted RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: double  NAME:  alpha  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  phaseCorrelate RETURN TYPE:  Point2d modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  window  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: double*  NAME:  response  DEFAULT VALUE:  0  MODS:  ['/O']

TYPE: function NAME:  phaseCorrelate RETURN TYPE:  Point2d modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  window  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: double*  NAME:  response  DEFAULT VALUE:  0  MODS:  ['/O']

TYPE: function NAME:  createHanningWindow RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Size  NAME:  winSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  type  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  createHanningWindow RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Size  NAME:  winSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  type  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  threshold RETURN TYPE:  double modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  thresh  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  maxval  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  type  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  threshold RETURN TYPE:  double modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  thresh  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  maxval  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  type  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  adaptiveThreshold RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  maxValue  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  adaptiveMethod  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  thresholdType  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  C  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  adaptiveThreshold RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  maxValue  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  adaptiveMethod  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  thresholdType  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  C  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  pyrDown RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Size  NAME:  dstsize  DEFAULT VALUE:  Size()  MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  pyrDown RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Size  NAME:  dstsize  DEFAULT VALUE:  Size()  MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  pyrUp RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Size  NAME:  dstsize  DEFAULT VALUE:  Size()  MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  pyrUp RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Size  NAME:  dstsize  DEFAULT VALUE:  Size()  MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  borderType  DEFAULT VALUE:  BORDER_DEFAULT  MODS:  []

TYPE: function NAME:  calcHist RETURN TYPE:  void modlist =  []
	TYPE: vector_Mat  NAME:  images  DEFAULT VALUE:    MODS:  []
	TYPE: vector_int  NAME:  channels  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  hist  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_int  NAME:  histSize  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: vector_float  NAME:  ranges  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: bool  NAME:  accumulate  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  calcHist RETURN TYPE:  void modlist =  []
	TYPE: vector_UMat  NAME:  images  DEFAULT VALUE:    MODS:  []
	TYPE: vector_int  NAME:  channels  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  hist  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_int  NAME:  histSize  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: vector_float  NAME:  ranges  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: bool  NAME:  accumulate  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  calcBackProject RETURN TYPE:  void modlist =  []
	TYPE: vector_Mat  NAME:  images  DEFAULT VALUE:    MODS:  []
	TYPE: vector_int  NAME:  channels  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  hist  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_float  NAME:  ranges  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: double  NAME:  scale  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  calcBackProject RETURN TYPE:  void modlist =  []
	TYPE: vector_UMat  NAME:  images  DEFAULT VALUE:    MODS:  []
	TYPE: vector_int  NAME:  channels  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  hist  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_float  NAME:  ranges  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: double  NAME:  scale  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  compareHist RETURN TYPE:  double modlist =  []
	TYPE: Mat  NAME:  H1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  H2  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  method  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  compareHist RETURN TYPE:  double modlist =  []
	TYPE: UMat  NAME:  H1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  H2  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  method  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  equalizeHist RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  equalizeHist RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  createCLAHE RETURN TYPE:  Ptr_CLAHE modlist =  []
	TYPE: double  NAME:  clipLimit  DEFAULT VALUE:  40.0  MODS:  []
	TYPE: Size  NAME:  tileGridSize  DEFAULT VALUE:  Size(8, 8)  MODS:  []
Modifited Return:  Ptr<CLAHE>

TYPE: function NAME:  wrapperEMD RETURN TYPE:  float modlist =  ['=EMD']
	TYPE: Mat  NAME:  signature1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  signature2  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  distType  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cost  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: Ptr_float  NAME:  lowerBound  DEFAULT VALUE:  Ptr<float>()  MODS:  ['/IO']
	TYPE: Mat  NAME:  flow  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  wrapperEMD RETURN TYPE:  float modlist =  ['=EMD']
	TYPE: UMat  NAME:  signature1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  signature2  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  distType  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cost  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: Ptr_float  NAME:  lowerBound  DEFAULT VALUE:  Ptr<float>()  MODS:  ['/IO']
	TYPE: UMat  NAME:  flow  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  watershed RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  markers  DEFAULT VALUE:    MODS:  ['/IO']

TYPE: function NAME:  watershed RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  markers  DEFAULT VALUE:    MODS:  ['/IO']

TYPE: function NAME:  pyrMeanShiftFiltering RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  sp  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  sr  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  maxLevel  DEFAULT VALUE:  1  MODS:  []
	TYPE: TermCriteria  NAME:  termcrit  DEFAULT VALUE:  TermCriteria(TermCriteria::MAX_ITER+TermCriteria::EPS,5,1)  MODS:  []

TYPE: function NAME:  pyrMeanShiftFiltering RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  sp  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  sr  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  maxLevel  DEFAULT VALUE:  1  MODS:  []
	TYPE: TermCriteria  NAME:  termcrit  DEFAULT VALUE:  TermCriteria(TermCriteria::MAX_ITER+TermCriteria::EPS,5,1)  MODS:  []

TYPE: function NAME:  grabCut RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Rect  NAME:  rect  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  bgdModel  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  fgdModel  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: int  NAME:  iterCount  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  mode  DEFAULT VALUE:  GC_EVAL  MODS:  []

TYPE: function NAME:  grabCut RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Rect  NAME:  rect  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  bgdModel  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  fgdModel  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: int  NAME:  iterCount  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  mode  DEFAULT VALUE:  GC_EVAL  MODS:  []

TYPE: function NAME:  distanceTransform RETURN TYPE:  void modlist =  ['=distanceTransformWithLabels']
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  labels  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  distanceType  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  maskSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  labelType  DEFAULT VALUE:  DIST_LABEL_CCOMP  MODS:  []

TYPE: function NAME:  distanceTransform RETURN TYPE:  void modlist =  ['=distanceTransformWithLabels']
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  labels  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  distanceType  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  maskSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  labelType  DEFAULT VALUE:  DIST_LABEL_CCOMP  MODS:  []

TYPE: function NAME:  distanceTransform RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  distanceType  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  maskSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  dstType  DEFAULT VALUE:  CV_32F  MODS:  []

TYPE: function NAME:  distanceTransform RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  distanceType  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  maskSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  dstType  DEFAULT VALUE:  CV_32F  MODS:  []

TYPE: function NAME:  floodFill RETURN TYPE:  int modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Point  NAME:  seedPoint  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  newVal  DEFAULT VALUE:    MODS:  []
	TYPE: Rect*  NAME:  rect  DEFAULT VALUE:  0  MODS:  ['/O']
	TYPE: Scalar  NAME:  loDiff  DEFAULT VALUE:  Scalar()  MODS:  []
	TYPE: Scalar  NAME:  upDiff  DEFAULT VALUE:  Scalar()  MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  4  MODS:  []

TYPE: function NAME:  floodFill RETURN TYPE:  int modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Point  NAME:  seedPoint  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  newVal  DEFAULT VALUE:    MODS:  []
	TYPE: Rect*  NAME:  rect  DEFAULT VALUE:  0  MODS:  ['/O']
	TYPE: Scalar  NAME:  loDiff  DEFAULT VALUE:  Scalar()  MODS:  []
	TYPE: Scalar  NAME:  upDiff  DEFAULT VALUE:  Scalar()  MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  4  MODS:  []

TYPE: function NAME:  cvtColor RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  code  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  dstCn  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  cvtColor RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  code  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  dstCn  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  cvtColorTwoPlane RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  code  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  cvtColorTwoPlane RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  src2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  code  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  demosaicing RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  code  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  dstCn  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  demosaicing RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  code  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  dstCn  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  moments RETURN TYPE:  Moments modlist =  []
	TYPE: Mat  NAME:  array  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  binaryImage  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  moments RETURN TYPE:  Moments modlist =  []
	TYPE: UMat  NAME:  array  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  binaryImage  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  HuMoments RETURN TYPE:  void modlist =  []
	TYPE: Moments  NAME:  m  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  hu  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  HuMoments RETURN TYPE:  void modlist =  []
	TYPE: Moments  NAME:  m  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  hu  DEFAULT VALUE:    MODS:  ['/O']

TYPE:  enum  NAME:  TemplateMatchModes
	NAME: TM_SQDIFF  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: TM_SQDIFF_NORMED  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: TM_CCORR  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: TM_CCORR_NORMED  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: TM_CCOEFF  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: TM_CCOEFF_NORMED  POS:  5  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  matchTemplate RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  templ  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  result  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  method  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  matchTemplate RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  templ  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  result  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  method  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  connectedComponents RETURN TYPE:  int modlist =  ['=connectedComponentsWithAlgorithm']
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  labels  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  connectivity  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ltype  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ccltype  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  connectedComponents RETURN TYPE:  int modlist =  ['=connectedComponentsWithAlgorithm']
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  labels  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  connectivity  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ltype  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ccltype  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  connectedComponents RETURN TYPE:  int modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  labels  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  connectivity  DEFAULT VALUE:  8  MODS:  []
	TYPE: int  NAME:  ltype  DEFAULT VALUE:  CV_32S  MODS:  []

TYPE: function NAME:  connectedComponents RETURN TYPE:  int modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  labels  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  connectivity  DEFAULT VALUE:  8  MODS:  []
	TYPE: int  NAME:  ltype  DEFAULT VALUE:  CV_32S  MODS:  []

TYPE: function NAME:  connectedComponentsWithStats RETURN TYPE:  int modlist =  ['=connectedComponentsWithStatsWithAlgorithm']
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  labels  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  stats  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  centroids  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  connectivity  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ltype  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ccltype  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  connectedComponentsWithStats RETURN TYPE:  int modlist =  ['=connectedComponentsWithStatsWithAlgorithm']
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  labels  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  stats  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  centroids  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  connectivity  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ltype  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  ccltype  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  connectedComponentsWithStats RETURN TYPE:  int modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  labels  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  stats  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  centroids  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  connectivity  DEFAULT VALUE:  8  MODS:  []
	TYPE: int  NAME:  ltype  DEFAULT VALUE:  CV_32S  MODS:  []

TYPE: function NAME:  connectedComponentsWithStats RETURN TYPE:  int modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  labels  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  stats  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  centroids  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  connectivity  DEFAULT VALUE:  8  MODS:  []
	TYPE: int  NAME:  ltype  DEFAULT VALUE:  CV_32S  MODS:  []

TYPE: function NAME:  findContours RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  contours  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  hierarchy  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  mode  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  method  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  offset  DEFAULT VALUE:  Point()  MODS:  []

TYPE: function NAME:  findContours RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  contours  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  hierarchy  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  mode  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  method  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  offset  DEFAULT VALUE:  Point()  MODS:  []

TYPE: function NAME:  approxPolyDP RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  curve  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  approxCurve  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  epsilon  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  closed  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  approxPolyDP RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  curve  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  approxCurve  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  epsilon  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  closed  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  arcLength RETURN TYPE:  double modlist =  []
	TYPE: Mat  NAME:  curve  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  closed  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  arcLength RETURN TYPE:  double modlist =  []
	TYPE: UMat  NAME:  curve  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  closed  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  boundingRect RETURN TYPE:  Rect modlist =  []
	TYPE: Mat  NAME:  array  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  boundingRect RETURN TYPE:  Rect modlist =  []
	TYPE: UMat  NAME:  array  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  contourArea RETURN TYPE:  double modlist =  []
	TYPE: Mat  NAME:  contour  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  oriented  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  contourArea RETURN TYPE:  double modlist =  []
	TYPE: UMat  NAME:  contour  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  oriented  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  minAreaRect RETURN TYPE:  RotatedRect modlist =  []
	TYPE: Mat  NAME:  points  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  minAreaRect RETURN TYPE:  RotatedRect modlist =  []
	TYPE: UMat  NAME:  points  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  boxPoints RETURN TYPE:  void modlist =  []
	TYPE: RotatedRect  NAME:  box  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  boxPoints RETURN TYPE:  void modlist =  []
	TYPE: RotatedRect  NAME:  box  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  minEnclosingCircle RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  points  DEFAULT VALUE:    MODS:  []
	TYPE: Point2f  NAME:  center  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: float  NAME:  radius  DEFAULT VALUE:    MODS:  ['/O', '/Ref']

TYPE: function NAME:  minEnclosingCircle RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  points  DEFAULT VALUE:    MODS:  []
	TYPE: Point2f  NAME:  center  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: float  NAME:  radius  DEFAULT VALUE:    MODS:  ['/O', '/Ref']

TYPE: function NAME:  minEnclosingTriangle RETURN TYPE:  double modlist =  []
	TYPE: Mat  NAME:  points  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  triangle  DEFAULT VALUE:    MODS:  ['/O', '/O']

TYPE: function NAME:  minEnclosingTriangle RETURN TYPE:  double modlist =  []
	TYPE: UMat  NAME:  points  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  triangle  DEFAULT VALUE:    MODS:  ['/O', '/O']

TYPE: function NAME:  matchShapes RETURN TYPE:  double modlist =  []
	TYPE: Mat  NAME:  contour1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  contour2  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  method  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  parameter  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  matchShapes RETURN TYPE:  double modlist =  []
	TYPE: UMat  NAME:  contour1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  contour2  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  method  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  parameter  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  convexHull RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  points  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  hull  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  clockwise  DEFAULT VALUE:  false  MODS:  []
	TYPE: bool  NAME:  returnPoints  DEFAULT VALUE:  true  MODS:  []

TYPE: function NAME:  convexHull RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  points  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  hull  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  clockwise  DEFAULT VALUE:  false  MODS:  []
	TYPE: bool  NAME:  returnPoints  DEFAULT VALUE:  true  MODS:  []

TYPE: function NAME:  convexityDefects RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  contour  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  convexhull  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  convexityDefects  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  convexityDefects RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  contour  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  convexhull  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  convexityDefects  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  isContourConvex RETURN TYPE:  bool modlist =  []
	TYPE: Mat  NAME:  contour  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  isContourConvex RETURN TYPE:  bool modlist =  []
	TYPE: UMat  NAME:  contour  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  intersectConvexConvex RETURN TYPE:  float modlist =  []
	TYPE: Mat  NAME:  _p1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  _p2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  _p12  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  handleNested  DEFAULT VALUE:  true  MODS:  []

TYPE: function NAME:  intersectConvexConvex RETURN TYPE:  float modlist =  []
	TYPE: UMat  NAME:  _p1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  _p2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  _p12  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  handleNested  DEFAULT VALUE:  true  MODS:  []

TYPE: function NAME:  fitEllipse RETURN TYPE:  RotatedRect modlist =  []
	TYPE: Mat  NAME:  points  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  fitEllipse RETURN TYPE:  RotatedRect modlist =  []
	TYPE: UMat  NAME:  points  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  fitEllipseAMS RETURN TYPE:  RotatedRect modlist =  []
	TYPE: Mat  NAME:  points  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  fitEllipseAMS RETURN TYPE:  RotatedRect modlist =  []
	TYPE: UMat  NAME:  points  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  fitEllipseDirect RETURN TYPE:  RotatedRect modlist =  []
	TYPE: Mat  NAME:  points  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  fitEllipseDirect RETURN TYPE:  RotatedRect modlist =  []
	TYPE: UMat  NAME:  points  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  fitLine RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  points  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  line  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  distType  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  param  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  reps  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  aeps  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  fitLine RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  points  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  line  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  distType  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  param  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  reps  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  aeps  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  pointPolygonTest RETURN TYPE:  double modlist =  []
	TYPE: Mat  NAME:  contour  DEFAULT VALUE:    MODS:  []
	TYPE: Point2f  NAME:  pt  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  measureDist  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  pointPolygonTest RETURN TYPE:  double modlist =  []
	TYPE: UMat  NAME:  contour  DEFAULT VALUE:    MODS:  []
	TYPE: Point2f  NAME:  pt  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  measureDist  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  rotatedRectangleIntersection RETURN TYPE:  int modlist =  []
	TYPE: RotatedRect  NAME:  rect1  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: RotatedRect  NAME:  rect2  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  intersectingRegion  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  rotatedRectangleIntersection RETURN TYPE:  int modlist =  []
	TYPE: RotatedRect  NAME:  rect1  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: RotatedRect  NAME:  rect2  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  intersectingRegion  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  createGeneralizedHoughBallard RETURN TYPE:  Ptr_GeneralizedHoughBallard modlist =  []
Modifited Return:  Ptr<GeneralizedHoughBallard>

TYPE: function NAME:  createGeneralizedHoughGuil RETURN TYPE:  Ptr_GeneralizedHoughGuil modlist =  []
Modifited Return:  Ptr<GeneralizedHoughGuil>

TYPE:  enum  NAME:  ColormapTypes
	NAME: COLORMAP_AUTUMN  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_BONE  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_JET  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_WINTER  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_RAINBOW  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_OCEAN  POS:  5  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_SUMMER  POS:  6  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_SPRING  POS:  7  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_COOL  POS:  8  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_HSV  POS:  9  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_PINK  POS:  10  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_HOT  POS:  11  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_PARULA  POS:  12  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_MAGMA  POS:  13  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_INFERNO  POS:  14  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_PLASMA  POS:  15  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_VIRIDIS  POS:  16  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_CIVIDIS  POS:  17  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_TWILIGHT  POS:  18  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_TWILIGHT_SHIFTED  POS:  19  DEFAULT VALUE:  []  MODS:  []
	NAME: COLORMAP_TURBO  POS:  20  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  applyColorMap RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  colormap  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  applyColorMap RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  colormap  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  applyColorMap RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  userColor  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  applyColorMap RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  userColor  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  line RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Point  NAME:  pt1  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  pt2  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: int  NAME:  shift  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  line RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Point  NAME:  pt1  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  pt2  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: int  NAME:  shift  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  arrowedLine RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Point  NAME:  pt1  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  pt2  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  line_type  DEFAULT VALUE:  8  MODS:  []
	TYPE: int  NAME:  shift  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  tipLength  DEFAULT VALUE:  0.1  MODS:  []

TYPE: function NAME:  arrowedLine RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Point  NAME:  pt1  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  pt2  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  line_type  DEFAULT VALUE:  8  MODS:  []
	TYPE: int  NAME:  shift  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  tipLength  DEFAULT VALUE:  0.1  MODS:  []

TYPE: function NAME:  rectangle RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Point  NAME:  pt1  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  pt2  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: int  NAME:  shift  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  rectangle RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Point  NAME:  pt1  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  pt2  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: int  NAME:  shift  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  rectangle RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Rect  NAME:  rec  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: int  NAME:  shift  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  rectangle RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Rect  NAME:  rec  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: int  NAME:  shift  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  circle RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Point  NAME:  center  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  radius  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: int  NAME:  shift  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  circle RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Point  NAME:  center  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  radius  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: int  NAME:  shift  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  ellipse RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Point  NAME:  center  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  axes  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  angle  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  startAngle  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  endAngle  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: int  NAME:  shift  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  ellipse RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Point  NAME:  center  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  axes  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  angle  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  startAngle  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  endAngle  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: int  NAME:  shift  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  ellipse RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: RotatedRect  NAME:  box  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []

TYPE: function NAME:  ellipse RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: RotatedRect  NAME:  box  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []

TYPE: function NAME:  drawMarker RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Point  NAME:  position  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  markerType  DEFAULT VALUE:  MARKER_CROSS  MODS:  []
	TYPE: int  NAME:  markerSize  DEFAULT VALUE:  20  MODS:  []
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  line_type  DEFAULT VALUE:  8  MODS:  []

TYPE: function NAME:  drawMarker RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Point  NAME:  position  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  markerType  DEFAULT VALUE:  MARKER_CROSS  MODS:  []
	TYPE: int  NAME:  markerSize  DEFAULT VALUE:  20  MODS:  []
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  line_type  DEFAULT VALUE:  8  MODS:  []

TYPE: function NAME:  fillConvexPoly RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  points  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: int  NAME:  shift  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  fillConvexPoly RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  points  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: int  NAME:  shift  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  fillPoly RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: vector_Mat  NAME:  pts  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: int  NAME:  shift  DEFAULT VALUE:  0  MODS:  []
	TYPE: Point  NAME:  offset  DEFAULT VALUE:  Point()  MODS:  []

TYPE: function NAME:  fillPoly RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: vector_UMat  NAME:  pts  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: int  NAME:  shift  DEFAULT VALUE:  0  MODS:  []
	TYPE: Point  NAME:  offset  DEFAULT VALUE:  Point()  MODS:  []

TYPE: function NAME:  polylines RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: vector_Mat  NAME:  pts  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  isClosed  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: int  NAME:  shift  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  polylines RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: vector_UMat  NAME:  pts  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  isClosed  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: int  NAME:  shift  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  drawContours RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: vector_Mat  NAME:  contours  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  contourIdx  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: Mat  NAME:  hierarchy  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: int  NAME:  maxLevel  DEFAULT VALUE:  INT_MAX  MODS:  []
	TYPE: Point  NAME:  offset  DEFAULT VALUE:  Point()  MODS:  []

TYPE: function NAME:  drawContours RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: vector_UMat  NAME:  contours  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  contourIdx  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: UMat  NAME:  hierarchy  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: int  NAME:  maxLevel  DEFAULT VALUE:  INT_MAX  MODS:  []
	TYPE: Point  NAME:  offset  DEFAULT VALUE:  Point()  MODS:  []

TYPE: function NAME:  clipLine RETURN TYPE:  bool modlist =  []
	TYPE: Rect  NAME:  imgRect  DEFAULT VALUE:    MODS:  []
	TYPE: Point  NAME:  pt1  DEFAULT VALUE:    MODS:  ['/O', '/IO', '/Ref']
	TYPE: Point  NAME:  pt2  DEFAULT VALUE:    MODS:  ['/O', '/IO', '/Ref']

TYPE: function NAME:  ellipse2Poly RETURN TYPE:  void modlist =  []
	TYPE: Point  NAME:  center  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  axes  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  angle  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  arcStart  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  arcEnd  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  delta  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Point  NAME:  pts  DEFAULT VALUE:    MODS:  ['/O', '/Ref']

TYPE: function NAME:  putText RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: String  NAME:  text  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Point  NAME:  org  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  fontFace  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  fontScale  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: bool  NAME:  bottomLeftOrigin  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  putText RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: String  NAME:  text  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Point  NAME:  org  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  fontFace  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  fontScale  DEFAULT VALUE:    MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  lineType  DEFAULT VALUE:  LINE_8  MODS:  []
	TYPE: bool  NAME:  bottomLeftOrigin  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  getTextSize RETURN TYPE:  Size modlist =  []
	TYPE: String  NAME:  text  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  fontFace  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  fontScale  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  thickness  DEFAULT VALUE:    MODS:  []
	TYPE: int*  NAME:  baseLine  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  getFontScaleFromHeight RETURN TYPE:  double modlist =  []
	TYPE: int  NAME:  fontFace  DEFAULT VALUE:    MODS:  ['/C']
	TYPE: int  NAME:  pixelHeight  DEFAULT VALUE:    MODS:  ['/C']
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  1  MODS:  ['/C']

TYPE:  enum  NAME:  <unnamed>
	NAME: LMEDS  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: RANSAC  POS:  8  DEFAULT VALUE:  []  MODS:  []
	NAME: RHO  POS:  16  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  SolvePnPMethod
	NAME: SOLVEPNP_ITERATIVE  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: SOLVEPNP_EPNP  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: SOLVEPNP_P3P  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: SOLVEPNP_DLS  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: SOLVEPNP_UPNP  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: SOLVEPNP_AP3P  POS:  5  DEFAULT VALUE:  []  MODS:  []
	NAME: SOLVEPNP_IPPE  POS:  6  DEFAULT VALUE:  []  MODS:  []
	NAME: SOLVEPNP_IPPE_SQUARE  POS:  7  DEFAULT VALUE:  []  MODS:  []
	NAME: SOLVEPNP_MAX_COUNT  POS:  7+1  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CALIB_CB_ADAPTIVE_THRESH  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_CB_NORMALIZE_IMAGE  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_CB_FILTER_QUADS  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_CB_FAST_CHECK  POS:  8  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_CB_EXHAUSTIVE  POS:  16  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_CB_ACCURACY  POS:  32  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_CB_LARGER  POS:  64  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_CB_MARKER  POS:  128  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CALIB_CB_SYMMETRIC_GRID  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_CB_ASYMMETRIC_GRID  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_CB_CLUSTERING  POS:  4  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CALIB_NINTRINSIC  POS:  18  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_USE_INTRINSIC_GUESS  POS:  0x00001  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_FIX_ASPECT_RATIO  POS:  0x00002  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_FIX_PRINCIPAL_POINT  POS:  0x00004  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_ZERO_TANGENT_DIST  POS:  0x00008  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_FIX_FOCAL_LENGTH  POS:  0x00010  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_FIX_K1  POS:  0x00020  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_FIX_K2  POS:  0x00040  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_FIX_K3  POS:  0x00080  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_FIX_K4  POS:  0x00800  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_FIX_K5  POS:  0x01000  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_FIX_K6  POS:  0x02000  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_RATIONAL_MODEL  POS:  0x04000  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_THIN_PRISM_MODEL  POS:  0x08000  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_FIX_S1_S2_S3_S4  POS:  0x10000  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_TILTED_MODEL  POS:  0x40000  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_FIX_TAUX_TAUY  POS:  0x80000  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_USE_QR  POS:  0x100000  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_FIX_TANGENT_DIST  POS:  0x200000  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_FIX_INTRINSIC  POS:  0x00100  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_SAME_FOCAL_LENGTH  POS:  0x00200  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_ZERO_DISPARITY  POS:  0x00400  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_USE_LU  POS:  (1 << 17)  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_USE_EXTRINSIC_GUESS  POS:  (1 << 22)  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: FM_7POINT  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: FM_8POINT  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: FM_LMEDS  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: FM_RANSAC  POS:  8  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  HandEyeCalibrationMethod
	NAME: CALIB_HAND_EYE_TSAI  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_HAND_EYE_PARK  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_HAND_EYE_HORAUD  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_HAND_EYE_ANDREFF  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: CALIB_HAND_EYE_DANIILIDIS  POS:  4  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  Rodrigues RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  jacobian  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  Rodrigues RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  jacobian  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  findHomography RETURN TYPE:  Mat modlist =  []
	TYPE: Mat  NAME:  srcPoints  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dstPoints  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  method  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  ransacReprojThreshold  DEFAULT VALUE:  3  MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: int  NAME:  maxIters  DEFAULT VALUE:  2000  MODS:  ['/C']
	TYPE: double  NAME:  confidence  DEFAULT VALUE:  0.995  MODS:  ['/C']

TYPE: function NAME:  findHomography RETURN TYPE:  Mat modlist =  []
	TYPE: UMat  NAME:  srcPoints  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dstPoints  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  method  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  ransacReprojThreshold  DEFAULT VALUE:  3  MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: int  NAME:  maxIters  DEFAULT VALUE:  2000  MODS:  ['/C']
	TYPE: double  NAME:  confidence  DEFAULT VALUE:  0.995  MODS:  ['/C']

TYPE: function NAME:  RQDecomp3x3 RETURN TYPE:  Vec3d modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mtxR  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  mtxQ  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  Qx  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  Qy  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  Qz  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  RQDecomp3x3 RETURN TYPE:  Vec3d modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mtxR  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  mtxQ  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  Qx  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  Qy  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  Qz  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  decomposeProjectionMatrix RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  projMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  rotMatrix  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  transVect  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  rotMatrixX  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  rotMatrixY  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  rotMatrixZ  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  eulerAngles  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  decomposeProjectionMatrix RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  projMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  rotMatrix  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  transVect  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  rotMatrixX  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  rotMatrixY  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  rotMatrixZ  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  eulerAngles  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  matMulDeriv RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  A  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  B  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dABdA  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  dABdB  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  matMulDeriv RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  A  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  B  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dABdA  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  dABdB  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  composeRT RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  rvec1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  tvec1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  rvec2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  tvec2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  rvec3  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  tvec3  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  dr3dr1  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  dr3dt1  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  dr3dr2  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  dr3dt2  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  dt3dr1  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  dt3dt1  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  dt3dr2  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  dt3dt2  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  composeRT RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  rvec1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  tvec1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  rvec2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  tvec2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  rvec3  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  tvec3  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  dr3dr1  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  dr3dt1  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  dr3dr2  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  dr3dt2  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  dt3dr1  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  dt3dt1  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  dt3dr2  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  dt3dt2  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  projectPoints RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  rvec  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  tvec  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  jacobian  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: double  NAME:  aspectRatio  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  projectPoints RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  rvec  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  tvec  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  jacobian  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: double  NAME:  aspectRatio  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  solvePnP RETURN TYPE:  bool modlist =  []
	TYPE: Mat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  rvec  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  tvec  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  useExtrinsicGuess  DEFAULT VALUE:  false  MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  SOLVEPNP_ITERATIVE  MODS:  []

TYPE: function NAME:  solvePnP RETURN TYPE:  bool modlist =  []
	TYPE: UMat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  rvec  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  tvec  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  useExtrinsicGuess  DEFAULT VALUE:  false  MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  SOLVEPNP_ITERATIVE  MODS:  []

TYPE: function NAME:  solvePnPRansac RETURN TYPE:  bool modlist =  []
	TYPE: Mat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  rvec  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  tvec  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  useExtrinsicGuess  DEFAULT VALUE:  false  MODS:  []
	TYPE: int  NAME:  iterationsCount  DEFAULT VALUE:  100  MODS:  []
	TYPE: float  NAME:  reprojectionError  DEFAULT VALUE:  8.0  MODS:  []
	TYPE: double  NAME:  confidence  DEFAULT VALUE:  0.99  MODS:  []
	TYPE: Mat  NAME:  inliers  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  SOLVEPNP_ITERATIVE  MODS:  []

TYPE: function NAME:  solvePnPRansac RETURN TYPE:  bool modlist =  []
	TYPE: UMat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  rvec  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  tvec  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  useExtrinsicGuess  DEFAULT VALUE:  false  MODS:  []
	TYPE: int  NAME:  iterationsCount  DEFAULT VALUE:  100  MODS:  []
	TYPE: float  NAME:  reprojectionError  DEFAULT VALUE:  8.0  MODS:  []
	TYPE: double  NAME:  confidence  DEFAULT VALUE:  0.99  MODS:  []
	TYPE: UMat  NAME:  inliers  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  SOLVEPNP_ITERATIVE  MODS:  []

TYPE: function NAME:  solveP3P RETURN TYPE:  int modlist =  []
	TYPE: Mat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  rvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_Mat  NAME:  tvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  solveP3P RETURN TYPE:  int modlist =  []
	TYPE: UMat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  rvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_UMat  NAME:  tvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  solvePnPRefineLM RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  rvec  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  tvec  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria(TermCriteria::EPS + TermCriteria::COUNT, 20, FLT_EPSILON)  MODS:  []

TYPE: function NAME:  solvePnPRefineLM RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  rvec  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  tvec  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria(TermCriteria::EPS + TermCriteria::COUNT, 20, FLT_EPSILON)  MODS:  []

TYPE: function NAME:  solvePnPRefineVVS RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  rvec  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  tvec  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria(TermCriteria::EPS + TermCriteria::COUNT, 20, FLT_EPSILON)  MODS:  []
	TYPE: double  NAME:  VVSlambda  DEFAULT VALUE:  1  MODS:  []

TYPE: function NAME:  solvePnPRefineVVS RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  rvec  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  tvec  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria(TermCriteria::EPS + TermCriteria::COUNT, 20, FLT_EPSILON)  MODS:  []
	TYPE: double  NAME:  VVSlambda  DEFAULT VALUE:  1  MODS:  []

TYPE: function NAME:  solvePnPGeneric RETURN TYPE:  int modlist =  []
	TYPE: Mat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  rvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_Mat  NAME:  tvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  useExtrinsicGuess  DEFAULT VALUE:  false  MODS:  []
	TYPE: SolvePnPMethod  NAME:  flags  DEFAULT VALUE:  SOLVEPNP_ITERATIVE  MODS:  []
	TYPE: Mat  NAME:  rvec  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: Mat  NAME:  tvec  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: Mat  NAME:  reprojectionError  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  solvePnPGeneric RETURN TYPE:  int modlist =  []
	TYPE: UMat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  rvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_UMat  NAME:  tvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  useExtrinsicGuess  DEFAULT VALUE:  false  MODS:  []
	TYPE: SolvePnPMethod  NAME:  flags  DEFAULT VALUE:  SOLVEPNP_ITERATIVE  MODS:  []
	TYPE: UMat  NAME:  rvec  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: UMat  NAME:  tvec  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: UMat  NAME:  reprojectionError  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  initCameraMatrix2D RETURN TYPE:  Mat modlist =  []
	TYPE: vector_Mat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  aspectRatio  DEFAULT VALUE:  1.0  MODS:  []

TYPE: function NAME:  initCameraMatrix2D RETURN TYPE:  Mat modlist =  []
	TYPE: vector_UMat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  aspectRatio  DEFAULT VALUE:  1.0  MODS:  []

TYPE: function NAME:  findChessboardCorners RETURN TYPE:  bool modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  patternSize  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  corners  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  CALIB_CB_ADAPTIVE_THRESH + CALIB_CB_NORMALIZE_IMAGE  MODS:  []

TYPE: function NAME:  findChessboardCorners RETURN TYPE:  bool modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  patternSize  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  corners  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  CALIB_CB_ADAPTIVE_THRESH + CALIB_CB_NORMALIZE_IMAGE  MODS:  []

TYPE: function NAME:  checkChessboard RETURN TYPE:  bool modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  size  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  checkChessboard RETURN TYPE:  bool modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  size  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  findChessboardCornersSB RETURN TYPE:  bool modlist =  ['=findChessboardCornersSBWithMeta']
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  patternSize  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  corners  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  meta  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  findChessboardCornersSB RETURN TYPE:  bool modlist =  ['=findChessboardCornersSBWithMeta']
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  patternSize  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  corners  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  meta  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  findChessboardCornersSB RETURN TYPE:  bool modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  patternSize  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  corners  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  findChessboardCornersSB RETURN TYPE:  bool modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  patternSize  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  corners  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  estimateChessboardSharpness RETURN TYPE:  Scalar modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  patternSize  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  corners  DEFAULT VALUE:    MODS:  []
	TYPE: float  NAME:  rise_distance  DEFAULT VALUE:  0.8F  MODS:  []
	TYPE: bool  NAME:  vertical  DEFAULT VALUE:  false  MODS:  []
	TYPE: Mat  NAME:  sharpness  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  estimateChessboardSharpness RETURN TYPE:  Scalar modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  patternSize  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  corners  DEFAULT VALUE:    MODS:  []
	TYPE: float  NAME:  rise_distance  DEFAULT VALUE:  0.8F  MODS:  []
	TYPE: bool  NAME:  vertical  DEFAULT VALUE:  false  MODS:  []
	TYPE: UMat  NAME:  sharpness  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  find4QuadCornerSubpix RETURN TYPE:  bool modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  corners  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Size  NAME:  region_size  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  find4QuadCornerSubpix RETURN TYPE:  bool modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  corners  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Size  NAME:  region_size  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  drawChessboardCorners RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Size  NAME:  patternSize  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  corners  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  patternWasFound  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  drawChessboardCorners RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Size  NAME:  patternSize  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  corners  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  patternWasFound  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  drawFrameAxes RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  rvec  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  tvec  DEFAULT VALUE:    MODS:  []
	TYPE: float  NAME:  length  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  3  MODS:  []

TYPE: function NAME:  drawFrameAxes RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  rvec  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  tvec  DEFAULT VALUE:    MODS:  []
	TYPE: float  NAME:  length  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  thickness  DEFAULT VALUE:  3  MODS:  []

['struct cv.CirclesGridFinderParameters', '', ['/Simple'], [['Size2f', 'densityNeighborhoodSize', '', ['/RW']], ['float', 'minDensity', '', ['/RW']], ['int', 'kmeansAttempts', '', ['/RW']], ['int', 'minDistanceToAddKeypoint', '', ['/RW']], ['int', 'keypointScale', '', ['/RW']], ['float', 'minGraphConfidence', '', ['/RW']], ['float', 'vertexGain', '', ['/RW']], ['float', 'vertexPenalty', '', ['/RW']], ['float', 'existingVertexGain', '', ['/RW']], ['float', 'edgeGain', '', ['/RW']], ['float', 'edgePenalty', '', ['/RW']], ['float', 'convexHullFactor', '', ['/RW']], ['float', 'minRNGEdgeSwitchDist', '', ['/RW']], ['float', 'squareSize', '', ['/RW']], ['float', 'maxRectifiedDistance', '', ['/RW']]], None, '']

TYPE: function NAME:  CirclesGridFinderParameters_CirclesGridFinderParameters RETURN TYPE:   modlist =  []
Modifited Return:  None

TYPE:  enum  NAME:  CirclesGridFinderParameters_GridType
	NAME: CirclesGridFinderParameters_SYMMETRIC_GRID  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: CirclesGridFinderParameters_ASYMMETRIC_GRID  POS:  1  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  findCirclesGrid RETURN TYPE:  bool modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  patternSize  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  centers  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []
	TYPE: Ptr_FeatureDetector  NAME:  blobDetector  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: CirclesGridFinderParameters  NAME:  parameters  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  findCirclesGrid RETURN TYPE:  bool modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  patternSize  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  centers  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []
	TYPE: Ptr_FeatureDetector  NAME:  blobDetector  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: CirclesGridFinderParameters  NAME:  parameters  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  findCirclesGrid RETURN TYPE:  bool modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  patternSize  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  centers  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  CALIB_CB_SYMMETRIC_GRID  MODS:  []
	TYPE: Ptr_FeatureDetector  NAME:  blobDetector  DEFAULT VALUE:  SimpleBlobDetector::create()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  findCirclesGrid RETURN TYPE:  bool modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  patternSize  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  centers  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  CALIB_CB_SYMMETRIC_GRID  MODS:  []
	TYPE: Ptr_FeatureDetector  NAME:  blobDetector  DEFAULT VALUE:  SimpleBlobDetector::create()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  calibrateCamera RETURN TYPE:  double modlist =  ['=calibrateCameraExtended']
	TYPE: vector_Mat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: vector_Mat  NAME:  rvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_Mat  NAME:  tvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  stdDeviationsIntrinsics  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  stdDeviationsExtrinsics  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  perViewErrors  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria( TermCriteria::COUNT + TermCriteria::EPS, 30, DBL_EPSILON)  MODS:  []

TYPE: function NAME:  calibrateCamera RETURN TYPE:  double modlist =  ['=calibrateCameraExtended']
	TYPE: vector_UMat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: vector_UMat  NAME:  rvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_UMat  NAME:  tvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  stdDeviationsIntrinsics  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  stdDeviationsExtrinsics  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  perViewErrors  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria( TermCriteria::COUNT + TermCriteria::EPS, 30, DBL_EPSILON)  MODS:  []

TYPE: function NAME:  calibrateCamera RETURN TYPE:  double modlist =  []
	TYPE: vector_Mat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: vector_Mat  NAME:  rvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_Mat  NAME:  tvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria( TermCriteria::COUNT + TermCriteria::EPS, 30, DBL_EPSILON)  MODS:  []

TYPE: function NAME:  calibrateCamera RETURN TYPE:  double modlist =  []
	TYPE: vector_UMat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: vector_UMat  NAME:  rvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_UMat  NAME:  tvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria( TermCriteria::COUNT + TermCriteria::EPS, 30, DBL_EPSILON)  MODS:  []

TYPE: function NAME:  calibrateCameraRO RETURN TYPE:  double modlist =  ['=calibrateCameraROExtended']
	TYPE: vector_Mat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  iFixedPoint  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: vector_Mat  NAME:  rvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_Mat  NAME:  tvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  newObjPoints  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  stdDeviationsIntrinsics  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  stdDeviationsExtrinsics  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  stdDeviationsObjPoints  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  perViewErrors  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria( TermCriteria::COUNT + TermCriteria::EPS, 30, DBL_EPSILON)  MODS:  []

TYPE: function NAME:  calibrateCameraRO RETURN TYPE:  double modlist =  ['=calibrateCameraROExtended']
	TYPE: vector_UMat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  iFixedPoint  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: vector_UMat  NAME:  rvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_UMat  NAME:  tvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  newObjPoints  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  stdDeviationsIntrinsics  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  stdDeviationsExtrinsics  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  stdDeviationsObjPoints  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  perViewErrors  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria( TermCriteria::COUNT + TermCriteria::EPS, 30, DBL_EPSILON)  MODS:  []

TYPE: function NAME:  calibrateCameraRO RETURN TYPE:  double modlist =  []
	TYPE: vector_Mat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  iFixedPoint  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: vector_Mat  NAME:  rvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_Mat  NAME:  tvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  newObjPoints  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria( TermCriteria::COUNT + TermCriteria::EPS, 30, DBL_EPSILON)  MODS:  []

TYPE: function NAME:  calibrateCameraRO RETURN TYPE:  double modlist =  []
	TYPE: vector_UMat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  iFixedPoint  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: vector_UMat  NAME:  rvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_UMat  NAME:  tvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  newObjPoints  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria( TermCriteria::COUNT + TermCriteria::EPS, 30, DBL_EPSILON)  MODS:  []

TYPE: function NAME:  calibrationMatrixValues RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  apertureWidth  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  apertureHeight  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  fovx  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: double  NAME:  fovy  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: double  NAME:  focalLength  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: Point2d  NAME:  principalPoint  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: double  NAME:  aspectRatio  DEFAULT VALUE:    MODS:  ['/O', '/Ref']

TYPE: function NAME:  calibrationMatrixValues RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  apertureWidth  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  apertureHeight  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  fovx  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: double  NAME:  fovy  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: double  NAME:  focalLength  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: Point2d  NAME:  principalPoint  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: double  NAME:  aspectRatio  DEFAULT VALUE:    MODS:  ['/O', '/Ref']

TYPE: function NAME:  stereoCalibrate RETURN TYPE:  double modlist =  ['=stereoCalibrateExtended']
	TYPE: vector_Mat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  imagePoints1  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  imagePoints2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix1  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  distCoeffs1  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  cameraMatrix2  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  distCoeffs2  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  T  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  E  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  F  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  perViewErrors  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  CALIB_FIX_INTRINSIC  MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria(TermCriteria::COUNT+TermCriteria::EPS, 30, 1e-6)  MODS:  []

TYPE: function NAME:  stereoCalibrate RETURN TYPE:  double modlist =  ['=stereoCalibrateExtended']
	TYPE: vector_UMat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  imagePoints1  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  imagePoints2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix1  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  distCoeffs1  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  cameraMatrix2  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  distCoeffs2  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  T  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  E  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  F  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  perViewErrors  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  CALIB_FIX_INTRINSIC  MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria(TermCriteria::COUNT+TermCriteria::EPS, 30, 1e-6)  MODS:  []

TYPE: function NAME:  stereoCalibrate RETURN TYPE:  double modlist =  []
	TYPE: vector_Mat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  imagePoints1  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  imagePoints2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix1  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  distCoeffs1  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  cameraMatrix2  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  distCoeffs2  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  T  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  E  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  F  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  CALIB_FIX_INTRINSIC  MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria(TermCriteria::COUNT+TermCriteria::EPS, 30, 1e-6)  MODS:  []

TYPE: function NAME:  stereoCalibrate RETURN TYPE:  double modlist =  []
	TYPE: vector_UMat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  imagePoints1  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  imagePoints2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix1  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  distCoeffs1  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  cameraMatrix2  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  distCoeffs2  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  T  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  E  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  F  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  CALIB_FIX_INTRINSIC  MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria(TermCriteria::COUNT+TermCriteria::EPS, 30, 1e-6)  MODS:  []

TYPE: function NAME:  stereoRectify RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  cameraMatrix1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distCoeffs1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distCoeffs2  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  T  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  R2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  P1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  P2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  Q  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  CALIB_ZERO_DISPARITY  MODS:  []
	TYPE: double  NAME:  alpha  DEFAULT VALUE:  -1  MODS:  []
	TYPE: Size  NAME:  newImageSize  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: Rect*  NAME:  validPixROI1  DEFAULT VALUE:  0  MODS:  ['/O']
	TYPE: Rect*  NAME:  validPixROI2  DEFAULT VALUE:  0  MODS:  ['/O']

TYPE: function NAME:  stereoRectify RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  cameraMatrix1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distCoeffs1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distCoeffs2  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  T  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  R2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  P1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  P2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  Q  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  CALIB_ZERO_DISPARITY  MODS:  []
	TYPE: double  NAME:  alpha  DEFAULT VALUE:  -1  MODS:  []
	TYPE: Size  NAME:  newImageSize  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: Rect*  NAME:  validPixROI1  DEFAULT VALUE:  0  MODS:  ['/O']
	TYPE: Rect*  NAME:  validPixROI2  DEFAULT VALUE:  0  MODS:  ['/O']

TYPE: function NAME:  stereoRectifyUncalibrated RETURN TYPE:  bool modlist =  []
	TYPE: Mat  NAME:  points1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  F  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imgSize  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  H1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  H2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  threshold  DEFAULT VALUE:  5  MODS:  []

TYPE: function NAME:  stereoRectifyUncalibrated RETURN TYPE:  bool modlist =  []
	TYPE: UMat  NAME:  points1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  F  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imgSize  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  H1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  H2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  threshold  DEFAULT VALUE:  5  MODS:  []

TYPE: function NAME:  rectify3Collinear RETURN TYPE:  float modlist =  []
	TYPE: Mat  NAME:  cameraMatrix1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distCoeffs1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distCoeffs2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix3  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distCoeffs3  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  imgpt1  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  imgpt3  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R12  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  T12  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R13  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  T13  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  R2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  R3  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  P1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  P2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  P3  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  Q  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  alpha  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  newImgSize  DEFAULT VALUE:    MODS:  []
	TYPE: Rect*  NAME:  roi1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Rect*  NAME:  roi2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  rectify3Collinear RETURN TYPE:  float modlist =  []
	TYPE: UMat  NAME:  cameraMatrix1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distCoeffs1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distCoeffs2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix3  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distCoeffs3  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  imgpt1  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  imgpt3  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R12  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  T12  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R13  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  T13  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  R2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  R3  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  P1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  P2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  P3  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  Q  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  alpha  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  newImgSize  DEFAULT VALUE:    MODS:  []
	TYPE: Rect*  NAME:  roi1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Rect*  NAME:  roi2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  getOptimalNewCameraMatrix RETURN TYPE:  Mat modlist =  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  alpha  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  newImgSize  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: Rect*  NAME:  validPixROI  DEFAULT VALUE:  0  MODS:  ['/O']
	TYPE: bool  NAME:  centerPrincipalPoint  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  getOptimalNewCameraMatrix RETURN TYPE:  Mat modlist =  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  alpha  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  newImgSize  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: Rect*  NAME:  validPixROI  DEFAULT VALUE:  0  MODS:  ['/O']
	TYPE: bool  NAME:  centerPrincipalPoint  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  calibrateHandEye RETURN TYPE:  void modlist =  []
	TYPE: vector_Mat  NAME:  R_gripper2base  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  t_gripper2base  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  R_target2cam  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  t_target2cam  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R_cam2gripper  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  t_cam2gripper  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: HandEyeCalibrationMethod  NAME:  method  DEFAULT VALUE:  CALIB_HAND_EYE_TSAI  MODS:  []

TYPE: function NAME:  calibrateHandEye RETURN TYPE:  void modlist =  []
	TYPE: vector_UMat  NAME:  R_gripper2base  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  t_gripper2base  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  R_target2cam  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  t_target2cam  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R_cam2gripper  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  t_cam2gripper  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: HandEyeCalibrationMethod  NAME:  method  DEFAULT VALUE:  CALIB_HAND_EYE_TSAI  MODS:  []

TYPE: function NAME:  convertPointsToHomogeneous RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  convertPointsToHomogeneous RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  convertPointsFromHomogeneous RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  convertPointsFromHomogeneous RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  findFundamentalMat RETURN TYPE:  Mat modlist =  []
	TYPE: Mat  NAME:  points1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points2  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  method  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  ransacReprojThreshold  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  confidence  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  maxIters  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  findFundamentalMat RETURN TYPE:  Mat modlist =  []
	TYPE: UMat  NAME:  points1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points2  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  method  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  ransacReprojThreshold  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  confidence  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  maxIters  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  findFundamentalMat RETURN TYPE:  Mat modlist =  []
	TYPE: Mat  NAME:  points1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points2  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  method  DEFAULT VALUE:  FM_RANSAC  MODS:  []
	TYPE: double  NAME:  ransacReprojThreshold  DEFAULT VALUE:  3.  MODS:  []
	TYPE: double  NAME:  confidence  DEFAULT VALUE:  0.99  MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  findFundamentalMat RETURN TYPE:  Mat modlist =  []
	TYPE: UMat  NAME:  points1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points2  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  method  DEFAULT VALUE:  FM_RANSAC  MODS:  []
	TYPE: double  NAME:  ransacReprojThreshold  DEFAULT VALUE:  3.  MODS:  []
	TYPE: double  NAME:  confidence  DEFAULT VALUE:  0.99  MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  findEssentialMat RETURN TYPE:  Mat modlist =  []
	TYPE: Mat  NAME:  points1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  method  DEFAULT VALUE:  RANSAC  MODS:  []
	TYPE: double  NAME:  prob  DEFAULT VALUE:  0.999  MODS:  []
	TYPE: double  NAME:  threshold  DEFAULT VALUE:  1.0  MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  findEssentialMat RETURN TYPE:  Mat modlist =  []
	TYPE: UMat  NAME:  points1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  method  DEFAULT VALUE:  RANSAC  MODS:  []
	TYPE: double  NAME:  prob  DEFAULT VALUE:  0.999  MODS:  []
	TYPE: double  NAME:  threshold  DEFAULT VALUE:  1.0  MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  findEssentialMat RETURN TYPE:  Mat modlist =  []
	TYPE: Mat  NAME:  points1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points2  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  focal  DEFAULT VALUE:  1.0  MODS:  []
	TYPE: Point2d  NAME:  pp  DEFAULT VALUE:  Point2d(0, 0)  MODS:  []
	TYPE: int  NAME:  method  DEFAULT VALUE:  RANSAC  MODS:  []
	TYPE: double  NAME:  prob  DEFAULT VALUE:  0.999  MODS:  []
	TYPE: double  NAME:  threshold  DEFAULT VALUE:  1.0  MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  findEssentialMat RETURN TYPE:  Mat modlist =  []
	TYPE: UMat  NAME:  points1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points2  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  focal  DEFAULT VALUE:  1.0  MODS:  []
	TYPE: Point2d  NAME:  pp  DEFAULT VALUE:  Point2d(0, 0)  MODS:  []
	TYPE: int  NAME:  method  DEFAULT VALUE:  RANSAC  MODS:  []
	TYPE: double  NAME:  prob  DEFAULT VALUE:  0.999  MODS:  []
	TYPE: double  NAME:  threshold  DEFAULT VALUE:  1.0  MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  decomposeEssentialMat RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  E  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  R2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  t  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  decomposeEssentialMat RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  E  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  R2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  t  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  recoverPose RETURN TYPE:  int modlist =  []
	TYPE: Mat  NAME:  E  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  t  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  ['/IO']

TYPE: function NAME:  recoverPose RETURN TYPE:  int modlist =  []
	TYPE: UMat  NAME:  E  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  t  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  ['/IO']

TYPE: function NAME:  recoverPose RETURN TYPE:  int modlist =  []
	TYPE: Mat  NAME:  E  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  t  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  focal  DEFAULT VALUE:  1.0  MODS:  []
	TYPE: Point2d  NAME:  pp  DEFAULT VALUE:  Point2d(0, 0)  MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  ['/IO']

TYPE: function NAME:  recoverPose RETURN TYPE:  int modlist =  []
	TYPE: UMat  NAME:  E  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  t  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  focal  DEFAULT VALUE:  1.0  MODS:  []
	TYPE: Point2d  NAME:  pp  DEFAULT VALUE:  Point2d(0, 0)  MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  ['/IO']

TYPE: function NAME:  recoverPose RETURN TYPE:  int modlist =  []
	TYPE: Mat  NAME:  E  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  t  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  distanceThresh  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  ['/IO']
	TYPE: Mat  NAME:  triangulatedPoints  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  recoverPose RETURN TYPE:  int modlist =  []
	TYPE: UMat  NAME:  E  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  t  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  distanceThresh  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  ['/IO']
	TYPE: UMat  NAME:  triangulatedPoints  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  computeCorrespondEpilines RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  points  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  whichImage  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  F  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  lines  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  computeCorrespondEpilines RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  points  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  whichImage  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  F  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  lines  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  triangulatePoints RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  projMatr1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  projMatr2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  projPoints1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  projPoints2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points4D  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  triangulatePoints RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  projMatr1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  projMatr2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  projPoints1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  projPoints2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points4D  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  correctMatches RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  F  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  newPoints1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  newPoints2  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  correctMatches RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  F  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  newPoints1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  newPoints2  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  filterSpeckles RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: double  NAME:  newVal  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  maxSpeckleSize  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  maxDiff  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  buf  DEFAULT VALUE:  Mat()  MODS:  ['/IO']

TYPE: function NAME:  filterSpeckles RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: double  NAME:  newVal  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  maxSpeckleSize  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  maxDiff  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  buf  DEFAULT VALUE:  UMat()  MODS:  ['/IO']

TYPE: function NAME:  getValidDisparityROI RETURN TYPE:  Rect modlist =  []
	TYPE: Rect  NAME:  roi1  DEFAULT VALUE:    MODS:  []
	TYPE: Rect  NAME:  roi2  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  minDisparity  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  numberOfDisparities  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  validateDisparity RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  disparity  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  cost  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  minDisparity  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  numberOfDisparities  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  disp12MaxDisp  DEFAULT VALUE:  1  MODS:  []

TYPE: function NAME:  validateDisparity RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  disparity  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  cost  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  minDisparity  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  numberOfDisparities  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  disp12MaxDisp  DEFAULT VALUE:  1  MODS:  []

TYPE: function NAME:  reprojectImageTo3D RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  disparity  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  _3dImage  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  Q  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  handleMissingValues  DEFAULT VALUE:  false  MODS:  []
	TYPE: int  NAME:  ddepth  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  reprojectImageTo3D RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  disparity  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  _3dImage  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  Q  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  handleMissingValues  DEFAULT VALUE:  false  MODS:  []
	TYPE: int  NAME:  ddepth  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  sampsonDistance RETURN TYPE:  double modlist =  []
	TYPE: Mat  NAME:  pt1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  pt2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  F  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  sampsonDistance RETURN TYPE:  double modlist =  []
	TYPE: UMat  NAME:  pt1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  pt2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  F  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  estimateAffine3D RETURN TYPE:  int modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  out  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  inliers  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  ransacThreshold  DEFAULT VALUE:  3  MODS:  []
	TYPE: double  NAME:  confidence  DEFAULT VALUE:  0.99  MODS:  []

TYPE: function NAME:  estimateAffine3D RETURN TYPE:  int modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  out  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  inliers  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  ransacThreshold  DEFAULT VALUE:  3  MODS:  []
	TYPE: double  NAME:  confidence  DEFAULT VALUE:  0.99  MODS:  []

TYPE: function NAME:  estimateAffine2D RETURN TYPE:  Mat modlist =  []
	TYPE: Mat  NAME:  from  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  to  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  inliers  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: int  NAME:  method  DEFAULT VALUE:  RANSAC  MODS:  []
	TYPE: double  NAME:  ransacReprojThreshold  DEFAULT VALUE:  3  MODS:  []
	TYPE: size_t  NAME:  maxIters  DEFAULT VALUE:  2000  MODS:  []
	TYPE: double  NAME:  confidence  DEFAULT VALUE:  0.99  MODS:  []
	TYPE: size_t  NAME:  refineIters  DEFAULT VALUE:  10  MODS:  []
Modifited Return:  cv::Mat

TYPE: function NAME:  estimateAffine2D RETURN TYPE:  Mat modlist =  []
	TYPE: UMat  NAME:  from  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  to  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  inliers  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: int  NAME:  method  DEFAULT VALUE:  RANSAC  MODS:  []
	TYPE: double  NAME:  ransacReprojThreshold  DEFAULT VALUE:  3  MODS:  []
	TYPE: size_t  NAME:  maxIters  DEFAULT VALUE:  2000  MODS:  []
	TYPE: double  NAME:  confidence  DEFAULT VALUE:  0.99  MODS:  []
	TYPE: size_t  NAME:  refineIters  DEFAULT VALUE:  10  MODS:  []
Modifited Return:  cv::Mat

TYPE: function NAME:  estimateAffinePartial2D RETURN TYPE:  Mat modlist =  []
	TYPE: Mat  NAME:  from  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  to  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  inliers  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: int  NAME:  method  DEFAULT VALUE:  RANSAC  MODS:  []
	TYPE: double  NAME:  ransacReprojThreshold  DEFAULT VALUE:  3  MODS:  []
	TYPE: size_t  NAME:  maxIters  DEFAULT VALUE:  2000  MODS:  []
	TYPE: double  NAME:  confidence  DEFAULT VALUE:  0.99  MODS:  []
	TYPE: size_t  NAME:  refineIters  DEFAULT VALUE:  10  MODS:  []
Modifited Return:  cv::Mat

TYPE: function NAME:  estimateAffinePartial2D RETURN TYPE:  Mat modlist =  []
	TYPE: UMat  NAME:  from  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  to  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  inliers  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: int  NAME:  method  DEFAULT VALUE:  RANSAC  MODS:  []
	TYPE: double  NAME:  ransacReprojThreshold  DEFAULT VALUE:  3  MODS:  []
	TYPE: size_t  NAME:  maxIters  DEFAULT VALUE:  2000  MODS:  []
	TYPE: double  NAME:  confidence  DEFAULT VALUE:  0.99  MODS:  []
	TYPE: size_t  NAME:  refineIters  DEFAULT VALUE:  10  MODS:  []
Modifited Return:  cv::Mat

TYPE: function NAME:  decomposeHomographyMat RETURN TYPE:  int modlist =  []
	TYPE: Mat  NAME:  H  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  K  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  rotations  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_Mat  NAME:  translations  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_Mat  NAME:  normals  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  decomposeHomographyMat RETURN TYPE:  int modlist =  []
	TYPE: UMat  NAME:  H  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  K  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  rotations  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_UMat  NAME:  translations  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_UMat  NAME:  normals  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  filterHomographyDecompByVisibleRefpoints RETURN TYPE:  void modlist =  []
	TYPE: vector_Mat  NAME:  rotations  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  normals  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  beforePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  afterPoints  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  possibleSolutions  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  pointsMask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  filterHomographyDecompByVisibleRefpoints RETURN TYPE:  void modlist =  []
	TYPE: vector_UMat  NAME:  rotations  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  normals  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  beforePoints  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  afterPoints  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  possibleSolutions  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  pointsMask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE:  class  NAME:  StereoMatcher modlist =  []
: cv::Algorithm

TYPE:  enum  NAME:  StereoMatcher_<unnamed>
	NAME: StereoMatcher_DISP_SHIFT  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: StereoMatcher_DISP_SCALE  POS:  (1 << DISP_SHIFT)  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  StereoMatcher_compute RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  left  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  right  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  disparity  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  StereoMatcher_compute RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  left  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  right  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  disparity  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  StereoMatcher_getMinDisparity RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoMatcher_setMinDisparity RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  minDisparity  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  StereoMatcher_getNumDisparities RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoMatcher_setNumDisparities RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  numDisparities  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  StereoMatcher_getBlockSize RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoMatcher_setBlockSize RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  StereoMatcher_getSpeckleWindowSize RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoMatcher_setSpeckleWindowSize RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  speckleWindowSize  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  StereoMatcher_getSpeckleRange RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoMatcher_setSpeckleRange RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  speckleRange  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  StereoMatcher_getDisp12MaxDiff RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoMatcher_setDisp12MaxDiff RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  disp12MaxDiff  DEFAULT VALUE:    MODS:  []

TYPE:  class  NAME:  StereoBM modlist =  []
: cv::StereoMatcher

TYPE:  enum  NAME:  StereoBM_<unnamed>
	NAME: StereoBM_PREFILTER_NORMALIZED_RESPONSE  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: StereoBM_PREFILTER_XSOBEL  POS:  1  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  StereoBM_getPreFilterType RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoBM_setPreFilterType RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  preFilterType  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  StereoBM_getPreFilterSize RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoBM_setPreFilterSize RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  preFilterSize  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  StereoBM_getPreFilterCap RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoBM_setPreFilterCap RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  preFilterCap  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  StereoBM_getTextureThreshold RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoBM_setTextureThreshold RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  textureThreshold  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  StereoBM_getUniquenessRatio RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoBM_setUniquenessRatio RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  uniquenessRatio  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  StereoBM_getSmallerBlockSize RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoBM_setSmallerBlockSize RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  StereoBM_getROI1 RETURN TYPE:  Rect modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoBM_setROI1 RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Rect  NAME:  roi1  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  StereoBM_getROI2 RETURN TYPE:  Rect modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoBM_setROI2 RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Rect  NAME:  roi2  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  StereoBM_create RETURN TYPE:  Ptr_StereoBM modlist =  ['/S']
	TYPE: int  NAME:  numDisparities  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:  21  MODS:  []
Modifited Return:  Ptr<StereoBM>

TYPE:  class  NAME:  StereoSGBM modlist =  []
: cv::StereoMatcher

TYPE:  enum  NAME:  StereoSGBM_<unnamed>
	NAME: StereoSGBM_MODE_SGBM  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: StereoSGBM_MODE_HH  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: StereoSGBM_MODE_SGBM_3WAY  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: StereoSGBM_MODE_HH4  POS:  3  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  StereoSGBM_getPreFilterCap RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoSGBM_setPreFilterCap RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  preFilterCap  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  StereoSGBM_getUniquenessRatio RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoSGBM_setUniquenessRatio RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  uniquenessRatio  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  StereoSGBM_getP1 RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoSGBM_setP1 RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  P1  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  StereoSGBM_getP2 RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoSGBM_setP2 RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  P2  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  StereoSGBM_getMode RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  StereoSGBM_setMode RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  mode  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  StereoSGBM_create RETURN TYPE:  Ptr_StereoSGBM modlist =  ['/S']
	TYPE: int  NAME:  minDisparity  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  numDisparities  DEFAULT VALUE:  16  MODS:  []
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:  3  MODS:  []
	TYPE: int  NAME:  P1  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  P2  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  disp12MaxDiff  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  preFilterCap  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  uniquenessRatio  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  speckleWindowSize  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  speckleRange  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  mode  DEFAULT VALUE:  StereoSGBM::MODE_SGBM  MODS:  []
Modifited Return:  Ptr<StereoSGBM>

TYPE:  enum  NAME:  UndistortTypes
	NAME: PROJ_SPHERICAL_ORTHO  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: PROJ_SPHERICAL_EQRECT  POS:  1  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  undistort RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  newCameraMatrix  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  undistort RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  newCameraMatrix  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  initUndistortRectifyMap RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  newCameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  size  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  m1type  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  map1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  map2  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  initUndistortRectifyMap RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  newCameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  size  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  m1type  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  map1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  map2  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  getDefaultNewCameraMatrix RETURN TYPE:  Mat modlist =  []
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imgsize  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: bool  NAME:  centerPrincipalPoint  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  getDefaultNewCameraMatrix RETURN TYPE:  Mat modlist =  []
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imgsize  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: bool  NAME:  centerPrincipalPoint  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  undistortPoints RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: Mat  NAME:  P  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  undistortPoints RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: UMat  NAME:  P  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  undistortPoints RETURN TYPE:  void modlist =  ['=undistortPointsIter']
	TYPE: Mat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  P  DEFAULT VALUE:    MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  undistortPoints RETURN TYPE:  void modlist =  ['=undistortPointsIter']
	TYPE: UMat  NAME:  src  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  dst  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  cameraMatrix  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distCoeffs  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  P  DEFAULT VALUE:    MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:    MODS:  []

TYPE:  enum  NAME:  fisheye_<unnamed>
	NAME: fisheye_CALIB_USE_INTRINSIC_GUESS  POS:  1 << 0  DEFAULT VALUE:  []  MODS:  []
	NAME: fisheye_CALIB_RECOMPUTE_EXTRINSIC  POS:  1 << 1  DEFAULT VALUE:  []  MODS:  []
	NAME: fisheye_CALIB_CHECK_COND  POS:  1 << 2  DEFAULT VALUE:  []  MODS:  []
	NAME: fisheye_CALIB_FIX_SKEW  POS:  1 << 3  DEFAULT VALUE:  []  MODS:  []
	NAME: fisheye_CALIB_FIX_K1  POS:  1 << 4  DEFAULT VALUE:  []  MODS:  []
	NAME: fisheye_CALIB_FIX_K2  POS:  1 << 5  DEFAULT VALUE:  []  MODS:  []
	NAME: fisheye_CALIB_FIX_K3  POS:  1 << 6  DEFAULT VALUE:  []  MODS:  []
	NAME: fisheye_CALIB_FIX_K4  POS:  1 << 7  DEFAULT VALUE:  []  MODS:  []
	NAME: fisheye_CALIB_FIX_INTRINSIC  POS:  1 << 8  DEFAULT VALUE:  []  MODS:  []
	NAME: fisheye_CALIB_FIX_PRINCIPAL_POINT  POS:  1 << 9  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  fisheye_projectPoints RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  rvec  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  tvec  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  K  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  D  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  alpha  DEFAULT VALUE:  0  MODS:  []
	TYPE: Mat  NAME:  jacobian  DEFAULT VALUE:  Mat()  MODS:  ['/O']

TYPE: function NAME:  fisheye_projectPoints RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  rvec  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  tvec  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  K  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  D  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  alpha  DEFAULT VALUE:  0  MODS:  []
	TYPE: UMat  NAME:  jacobian  DEFAULT VALUE:  UMat()  MODS:  ['/O']

TYPE: function NAME:  fisheye_distortPoints RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  undistorted  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  distorted  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  K  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  D  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  alpha  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  fisheye_distortPoints RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  undistorted  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  distorted  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  K  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  D  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  alpha  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  fisheye_undistortPoints RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  distorted  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  undistorted  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  K  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  D  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: Mat  NAME:  P  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  fisheye_undistortPoints RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  distorted  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  undistorted  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  K  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  D  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: UMat  NAME:  P  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  fisheye_initUndistortRectifyMap RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  K  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  D  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  P  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  size  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  m1type  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  map1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  map2  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  fisheye_initUndistortRectifyMap RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  K  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  D  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  P  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  size  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  m1type  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  map1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  map2  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  fisheye_undistortImage RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  distorted  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  undistorted  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  K  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  D  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  Knew  DEFAULT VALUE:  cv::Mat()  MODS:  []
	TYPE: Size  NAME:  new_size  DEFAULT VALUE:  Size()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  fisheye_undistortImage RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  distorted  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  undistorted  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  K  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  D  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  Knew  DEFAULT VALUE:  cv::UMat()  MODS:  []
	TYPE: Size  NAME:  new_size  DEFAULT VALUE:  Size()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  fisheye_estimateNewCameraMatrixForUndistortRectify RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  K  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  D  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  image_size  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  R  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  P  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  balance  DEFAULT VALUE:  0.0  MODS:  []
	TYPE: Size  NAME:  new_size  DEFAULT VALUE:  Size()  MODS:  ['/C', '/Ref']
	TYPE: double  NAME:  fov_scale  DEFAULT VALUE:  1.0  MODS:  []

TYPE: function NAME:  fisheye_estimateNewCameraMatrixForUndistortRectify RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  K  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  D  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  image_size  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  R  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  P  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  balance  DEFAULT VALUE:  0.0  MODS:  []
	TYPE: Size  NAME:  new_size  DEFAULT VALUE:  Size()  MODS:  ['/C', '/Ref']
	TYPE: double  NAME:  fov_scale  DEFAULT VALUE:  1.0  MODS:  []

TYPE: function NAME:  fisheye_calibrate RETURN TYPE:  double modlist =  []
	TYPE: vector_Mat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  image_size  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  K  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  D  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: vector_Mat  NAME:  rvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_Mat  NAME:  tvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria(TermCriteria::COUNT + TermCriteria::EPS, 100, DBL_EPSILON)  MODS:  []

TYPE: function NAME:  fisheye_calibrate RETURN TYPE:  double modlist =  []
	TYPE: vector_UMat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  imagePoints  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  image_size  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  K  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  D  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: vector_UMat  NAME:  rvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: vector_UMat  NAME:  tvecs  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria(TermCriteria::COUNT + TermCriteria::EPS, 100, DBL_EPSILON)  MODS:  []

TYPE: function NAME:  fisheye_stereoRectify RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  K1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  D1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  K2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  D2  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  R  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  tvec  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  R2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  P1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  P2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  Q  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  newImageSize  DEFAULT VALUE:  Size()  MODS:  ['/C', '/Ref']
	TYPE: double  NAME:  balance  DEFAULT VALUE:  0.0  MODS:  []
	TYPE: double  NAME:  fov_scale  DEFAULT VALUE:  1.0  MODS:  []

TYPE: function NAME:  fisheye_stereoRectify RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  K1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  D1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  K2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  D2  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  R  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  tvec  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  R2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  P1  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  P2  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  Q  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  newImageSize  DEFAULT VALUE:  Size()  MODS:  ['/C', '/Ref']
	TYPE: double  NAME:  balance  DEFAULT VALUE:  0.0  MODS:  []
	TYPE: double  NAME:  fov_scale  DEFAULT VALUE:  1.0  MODS:  []

TYPE: function NAME:  fisheye_stereoCalibrate RETURN TYPE:  double modlist =  []
	TYPE: vector_Mat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  imagePoints1  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  imagePoints2  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  K1  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  D1  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  K2  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  D2  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  R  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  T  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  fisheye::CALIB_FIX_INTRINSIC  MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria(TermCriteria::COUNT + TermCriteria::EPS, 100, DBL_EPSILON)  MODS:  []

TYPE: function NAME:  fisheye_stereoCalibrate RETURN TYPE:  double modlist =  []
	TYPE: vector_UMat  NAME:  objectPoints  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  imagePoints1  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  imagePoints2  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  K1  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  D1  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  K2  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  D2  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Size  NAME:  imageSize  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  R  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  T  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  fisheye::CALIB_FIX_INTRINSIC  MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria(TermCriteria::COUNT + TermCriteria::EPS, 100, DBL_EPSILON)  MODS:  []

TYPE:  class  NAME:  Feature2D modlist =  []
: cv::Algorithm, cv::class, cv::Feature2D, cv::Algorithm

TYPE: function NAME:  Feature2D_detect RETURN TYPE:  void modlist =  ['/V']
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: vector_KeyPoint  NAME:  keypoints  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  Feature2D_detect RETURN TYPE:  void modlist =  ['/V']
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: vector_KeyPoint  NAME:  keypoints  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  Feature2D_detect RETURN TYPE:  void modlist =  ['/V']
	TYPE: vector_Mat  NAME:  images  DEFAULT VALUE:    MODS:  []
	TYPE: vector_vector_KeyPoint  NAME:  keypoints  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_Mat  NAME:  masks  DEFAULT VALUE:  vector_Mat()  MODS:  []

TYPE: function NAME:  Feature2D_detect RETURN TYPE:  void modlist =  ['/V']
	TYPE: vector_UMat  NAME:  images  DEFAULT VALUE:    MODS:  []
	TYPE: vector_vector_KeyPoint  NAME:  keypoints  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_UMat  NAME:  masks  DEFAULT VALUE:  vector_UMat()  MODS:  []

TYPE: function NAME:  Feature2D_compute RETURN TYPE:  void modlist =  ['/V']
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: vector_KeyPoint  NAME:  keypoints  DEFAULT VALUE:    MODS:  ['/O', '/IO', '/Ref']
	TYPE: Mat  NAME:  descriptors  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  Feature2D_compute RETURN TYPE:  void modlist =  ['/V']
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: vector_KeyPoint  NAME:  keypoints  DEFAULT VALUE:    MODS:  ['/O', '/IO', '/Ref']
	TYPE: UMat  NAME:  descriptors  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  Feature2D_compute RETURN TYPE:  void modlist =  ['/V']
	TYPE: vector_Mat  NAME:  images  DEFAULT VALUE:    MODS:  []
	TYPE: vector_vector_KeyPoint  NAME:  keypoints  DEFAULT VALUE:    MODS:  ['/O', '/IO', '/Ref']
	TYPE: vector_Mat  NAME:  descriptors  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  Feature2D_compute RETURN TYPE:  void modlist =  ['/V']
	TYPE: vector_UMat  NAME:  images  DEFAULT VALUE:    MODS:  []
	TYPE: vector_vector_KeyPoint  NAME:  keypoints  DEFAULT VALUE:    MODS:  ['/O', '/IO', '/Ref']
	TYPE: vector_UMat  NAME:  descriptors  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  Feature2D_detectAndCompute RETURN TYPE:  void modlist =  ['/V']
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:    MODS:  []
	TYPE: vector_KeyPoint  NAME:  keypoints  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: Mat  NAME:  descriptors  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  useProvidedKeypoints  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  Feature2D_detectAndCompute RETURN TYPE:  void modlist =  ['/V']
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:    MODS:  []
	TYPE: vector_KeyPoint  NAME:  keypoints  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: UMat  NAME:  descriptors  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: bool  NAME:  useProvidedKeypoints  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  Feature2D_descriptorSize RETURN TYPE:  int modlist =  ['/C', '/V']

TYPE: function NAME:  Feature2D_descriptorType RETURN TYPE:  int modlist =  ['/C', '/V']

TYPE: function NAME:  Feature2D_defaultNorm RETURN TYPE:  int modlist =  ['/C', '/V']

TYPE: function NAME:  Feature2D_write RETURN TYPE:  void modlist =  ['/C']
	TYPE: String  NAME:  fileName  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  Feature2D_read RETURN TYPE:  void modlist =  []
	TYPE: String  NAME:  fileName  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  Feature2D_read RETURN TYPE:  void modlist =  ['/V']
	TYPE: FileNode  NAME:  arg1  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  Feature2D_empty RETURN TYPE:  bool modlist =  ['/C', '/V']

TYPE: function NAME:  Feature2D_getDefaultName RETURN TYPE:  String modlist =  ['/C', '/V']

TYPE: function NAME:  Feature2D_write RETURN TYPE:  void modlist =  ['/C']
	TYPE: Ptr_FileStorage  NAME:  fs  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  name  DEFAULT VALUE:  String()  MODS:  ['/C', '/Ref']

TYPE:  class  NAME:  BRISK modlist =  []
: cv::Feature2D

TYPE: function NAME:  BRISK_create RETURN TYPE:  Ptr_BRISK modlist =  ['/S']
	TYPE: int  NAME:  thresh  DEFAULT VALUE:  30  MODS:  []
	TYPE: int  NAME:  octaves  DEFAULT VALUE:  3  MODS:  []
	TYPE: float  NAME:  patternScale  DEFAULT VALUE:  1.0f  MODS:  []
Modifited Return:  Ptr<BRISK>

TYPE: function NAME:  BRISK_create RETURN TYPE:  Ptr_BRISK modlist =  ['/S']
	TYPE: vector_float  NAME:  radiusList  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: vector_int  NAME:  numberList  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: float  NAME:  dMax  DEFAULT VALUE:  5.85f  MODS:  []
	TYPE: float  NAME:  dMin  DEFAULT VALUE:  8.2f  MODS:  []
	TYPE: vector_int  NAME:  indexChange  DEFAULT VALUE:  std::vector<int>()  MODS:  ['/C', '/Ref']
Modifited Return:  Ptr<BRISK>

TYPE: function NAME:  BRISK_create RETURN TYPE:  Ptr_BRISK modlist =  ['/S']
	TYPE: int  NAME:  thresh  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  octaves  DEFAULT VALUE:    MODS:  []
	TYPE: vector_float  NAME:  radiusList  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: vector_int  NAME:  numberList  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: float  NAME:  dMax  DEFAULT VALUE:  5.85f  MODS:  []
	TYPE: float  NAME:  dMin  DEFAULT VALUE:  8.2f  MODS:  []
	TYPE: vector_int  NAME:  indexChange  DEFAULT VALUE:  std::vector<int>()  MODS:  ['/C', '/Ref']
Modifited Return:  Ptr<BRISK>

TYPE: function NAME:  BRISK_getDefaultName RETURN TYPE:  String modlist =  ['/C', '/V']

TYPE: function NAME:  BRISK_setThreshold RETURN TYPE:  void modlist =  ['/V']
	TYPE: int  NAME:  threshold  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BRISK_getThreshold RETURN TYPE:  int modlist =  ['/C', '/V']

TYPE: function NAME:  BRISK_setOctaves RETURN TYPE:  void modlist =  ['/V']
	TYPE: int  NAME:  octaves  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BRISK_getOctaves RETURN TYPE:  int modlist =  ['/C', '/V']

TYPE:  class  NAME:  ORB modlist =  []
: cv::Feature2D

TYPE:  enum  NAME:  ORB_ScoreType
	NAME: ORB_HARRIS_SCORE  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: ORB_FAST_SCORE  POS:  1  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  ORB_create RETURN TYPE:  Ptr_ORB modlist =  ['/S']
	TYPE: int  NAME:  nfeatures  DEFAULT VALUE:  500  MODS:  []
	TYPE: float  NAME:  scaleFactor  DEFAULT VALUE:  1.2f  MODS:  []
	TYPE: int  NAME:  nlevels  DEFAULT VALUE:  8  MODS:  []
	TYPE: int  NAME:  edgeThreshold  DEFAULT VALUE:  31  MODS:  []
	TYPE: int  NAME:  firstLevel  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  WTA_K  DEFAULT VALUE:  2  MODS:  []
	TYPE: ORB_ScoreType  NAME:  scoreType  DEFAULT VALUE:  ORB::HARRIS_SCORE  MODS:  []
	TYPE: int  NAME:  patchSize  DEFAULT VALUE:  31  MODS:  []
	TYPE: int  NAME:  fastThreshold  DEFAULT VALUE:  20  MODS:  []
Modifited Return:  Ptr<ORB>

TYPE: function NAME:  ORB_setMaxFeatures RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  maxFeatures  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ORB_getMaxFeatures RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ORB_setScaleFactor RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  scaleFactor  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ORB_getScaleFactor RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ORB_setNLevels RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  nlevels  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ORB_getNLevels RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ORB_setEdgeThreshold RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  edgeThreshold  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ORB_getEdgeThreshold RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ORB_setFirstLevel RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  firstLevel  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ORB_getFirstLevel RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ORB_setWTA_K RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  wta_k  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ORB_getWTA_K RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ORB_setScoreType RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: ORB_ScoreType  NAME:  scoreType  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ORB_getScoreType RETURN TYPE:  ORB_ScoreType modlist =  ['/C', '/V', '/PV']
Modifited Return:  ORB::ScoreType

TYPE: function NAME:  ORB_setPatchSize RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  patchSize  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ORB_getPatchSize RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ORB_setFastThreshold RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  fastThreshold  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  ORB_getFastThreshold RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  ORB_getDefaultName RETURN TYPE:  String modlist =  ['/C', '/V']

TYPE:  class  NAME:  MSER modlist =  []
: cv::Feature2D

TYPE: function NAME:  MSER_create RETURN TYPE:  Ptr_MSER modlist =  ['/S']
	TYPE: int  NAME:  _delta  DEFAULT VALUE:  5  MODS:  []
	TYPE: int  NAME:  _min_area  DEFAULT VALUE:  60  MODS:  []
	TYPE: int  NAME:  _max_area  DEFAULT VALUE:  14400  MODS:  []
	TYPE: double  NAME:  _max_variation  DEFAULT VALUE:  0.25  MODS:  []
	TYPE: double  NAME:  _min_diversity  DEFAULT VALUE:  .2  MODS:  []
	TYPE: int  NAME:  _max_evolution  DEFAULT VALUE:  200  MODS:  []
	TYPE: double  NAME:  _area_threshold  DEFAULT VALUE:  1.01  MODS:  []
	TYPE: double  NAME:  _min_margin  DEFAULT VALUE:  0.003  MODS:  []
	TYPE: int  NAME:  _edge_blur_size  DEFAULT VALUE:  5  MODS:  []
Modifited Return:  Ptr<MSER>

TYPE: function NAME:  MSER_detectRegions RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: vector_vector_Point  NAME:  msers  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_Rect  NAME:  bboxes  DEFAULT VALUE:    MODS:  ['/O', '/Ref']

TYPE: function NAME:  MSER_detectRegions RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: vector_vector_Point  NAME:  msers  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_Rect  NAME:  bboxes  DEFAULT VALUE:    MODS:  ['/O', '/Ref']

TYPE: function NAME:  MSER_setDelta RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  delta  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  MSER_getDelta RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  MSER_setMinArea RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  minArea  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  MSER_getMinArea RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  MSER_setMaxArea RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  maxArea  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  MSER_getMaxArea RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  MSER_setPass2Only RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: bool  NAME:  f  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  MSER_getPass2Only RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  MSER_getDefaultName RETURN TYPE:  String modlist =  ['/C', '/V']

TYPE:  class  NAME:  FastFeatureDetector modlist =  []
: cv::Feature2D

TYPE:  enum  NAME:  FastFeatureDetector_DetectorType
	NAME: FastFeatureDetector_TYPE_5_8  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: FastFeatureDetector_TYPE_7_12  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: FastFeatureDetector_TYPE_9_16  POS:  2  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  FastFeatureDetector_<unnamed>
	NAME: FastFeatureDetector_THRESHOLD  POS:  10000  DEFAULT VALUE:  []  MODS:  []
	NAME: FastFeatureDetector_NONMAX_SUPPRESSION  POS:  10001  DEFAULT VALUE:  []  MODS:  []
	NAME: FastFeatureDetector_FAST_N  POS:  10002  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  FastFeatureDetector_create RETURN TYPE:  Ptr_FastFeatureDetector modlist =  ['/S']
	TYPE: int  NAME:  threshold  DEFAULT VALUE:  10  MODS:  []
	TYPE: bool  NAME:  nonmaxSuppression  DEFAULT VALUE:  true  MODS:  []
	TYPE: FastFeatureDetector_DetectorType  NAME:  type  DEFAULT VALUE:  FastFeatureDetector::TYPE_9_16  MODS:  []
Modifited Return:  Ptr<FastFeatureDetector>

TYPE: function NAME:  FastFeatureDetector_setThreshold RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  threshold  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  FastFeatureDetector_getThreshold RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  FastFeatureDetector_setNonmaxSuppression RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: bool  NAME:  f  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  FastFeatureDetector_getNonmaxSuppression RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  FastFeatureDetector_setType RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: FastFeatureDetector_DetectorType  NAME:  type  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  FastFeatureDetector_getType RETURN TYPE:  FastFeatureDetector_DetectorType modlist =  ['/C', '/V', '/PV']
Modifited Return:  FastFeatureDetector::DetectorType

TYPE: function NAME:  FastFeatureDetector_getDefaultName RETURN TYPE:  String modlist =  ['/C', '/V']

TYPE:  class  NAME:  AgastFeatureDetector modlist =  []
: cv::Feature2D

TYPE:  enum  NAME:  AgastFeatureDetector_DetectorType
	NAME: AgastFeatureDetector_AGAST_5_8  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: AgastFeatureDetector_AGAST_7_12d  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: AgastFeatureDetector_AGAST_7_12s  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: AgastFeatureDetector_OAST_9_16  POS:  3  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  AgastFeatureDetector_<unnamed>
	NAME: AgastFeatureDetector_THRESHOLD  POS:  10000  DEFAULT VALUE:  []  MODS:  []
	NAME: AgastFeatureDetector_NONMAX_SUPPRESSION  POS:  10001  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  AgastFeatureDetector_create RETURN TYPE:  Ptr_AgastFeatureDetector modlist =  ['/S']
	TYPE: int  NAME:  threshold  DEFAULT VALUE:  10  MODS:  []
	TYPE: bool  NAME:  nonmaxSuppression  DEFAULT VALUE:  true  MODS:  []
	TYPE: AgastFeatureDetector_DetectorType  NAME:  type  DEFAULT VALUE:  AgastFeatureDetector::OAST_9_16  MODS:  []
Modifited Return:  Ptr<AgastFeatureDetector>

TYPE: function NAME:  AgastFeatureDetector_setThreshold RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  threshold  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  AgastFeatureDetector_getThreshold RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  AgastFeatureDetector_setNonmaxSuppression RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: bool  NAME:  f  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  AgastFeatureDetector_getNonmaxSuppression RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  AgastFeatureDetector_setType RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: AgastFeatureDetector_DetectorType  NAME:  type  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  AgastFeatureDetector_getType RETURN TYPE:  AgastFeatureDetector_DetectorType modlist =  ['/C', '/V', '/PV']
Modifited Return:  AgastFeatureDetector::DetectorType

TYPE: function NAME:  AgastFeatureDetector_getDefaultName RETURN TYPE:  String modlist =  ['/C', '/V']

TYPE:  class  NAME:  GFTTDetector modlist =  []
: cv::Feature2D

TYPE: function NAME:  GFTTDetector_create RETURN TYPE:  Ptr_GFTTDetector modlist =  ['/S']
	TYPE: int  NAME:  maxCorners  DEFAULT VALUE:  1000  MODS:  []
	TYPE: double  NAME:  qualityLevel  DEFAULT VALUE:  0.01  MODS:  []
	TYPE: double  NAME:  minDistance  DEFAULT VALUE:  1  MODS:  []
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:  3  MODS:  []
	TYPE: bool  NAME:  useHarrisDetector  DEFAULT VALUE:  false  MODS:  []
	TYPE: double  NAME:  k  DEFAULT VALUE:  0.04  MODS:  []
Modifited Return:  Ptr<GFTTDetector>

TYPE: function NAME:  GFTTDetector_create RETURN TYPE:  Ptr_GFTTDetector modlist =  ['/S']
	TYPE: int  NAME:  maxCorners  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  qualityLevel  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  minDistance  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  gradiantSize  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  useHarrisDetector  DEFAULT VALUE:  false  MODS:  []
	TYPE: double  NAME:  k  DEFAULT VALUE:  0.04  MODS:  []
Modifited Return:  Ptr<GFTTDetector>

TYPE: function NAME:  GFTTDetector_setMaxFeatures RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  maxFeatures  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GFTTDetector_getMaxFeatures RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GFTTDetector_setQualityLevel RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  qlevel  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GFTTDetector_getQualityLevel RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GFTTDetector_setMinDistance RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  minDistance  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GFTTDetector_getMinDistance RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GFTTDetector_setBlockSize RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  blockSize  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GFTTDetector_getBlockSize RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GFTTDetector_setHarrisDetector RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: bool  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GFTTDetector_getHarrisDetector RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GFTTDetector_setK RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  k  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  GFTTDetector_getK RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  GFTTDetector_getDefaultName RETURN TYPE:  String modlist =  ['/C', '/V']

TYPE:  class  NAME:  SimpleBlobDetector modlist =  []
: cv::Feature2D

['struct cv.SimpleBlobDetector.Params', '', ['/Simple'], [['float', 'thresholdStep', '', ['/RW']], ['float', 'minThreshold', '', ['/RW']], ['float', 'maxThreshold', '', ['/RW']], ['size_t', 'minRepeatability', '', ['/RW']], ['float', 'minDistBetweenBlobs', '', ['/RW']], ['bool', 'filterByColor', '', ['/RW']], ['uchar', 'blobColor', '', ['/RW']], ['bool', 'filterByArea', '', ['/RW']], ['float', 'minArea', '', ['/RW']], ['float', 'maxArea', '', ['/RW']], ['bool', 'filterByCircularity', '', ['/RW']], ['float', 'minCircularity', '', ['/RW']], ['float', 'maxCircularity', '', ['/RW']], ['bool', 'filterByInertia', '', ['/RW']], ['float', 'minInertiaRatio', '', ['/RW']], ['float', 'maxInertiaRatio', '', ['/RW']], ['bool', 'filterByConvexity', '', ['/RW']], ['float', 'minConvexity', '', ['/RW']], ['float', 'maxConvexity', '', ['/RW']]], None, '']

TYPE: function NAME:  SimpleBlobDetector_Params_Params RETURN TYPE:   modlist =  []
Modifited Return:  None

TYPE: function NAME:  SimpleBlobDetector_create RETURN TYPE:  Ptr_SimpleBlobDetector modlist =  ['/S']
	TYPE: SimpleBlobDetector_Params  NAME:  parameters  DEFAULT VALUE:  SimpleBlobDetector::Params()  MODS:  ['/C', '/Ref']
Modifited Return:  Ptr<SimpleBlobDetector>

TYPE: function NAME:  SimpleBlobDetector_getDefaultName RETURN TYPE:  String modlist =  ['/C', '/V']

TYPE:  class  NAME:  KAZE modlist =  []
: cv::Feature2D

TYPE:  enum  NAME:  KAZE_DiffusivityType
	NAME: KAZE_DIFF_PM_G1  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: KAZE_DIFF_PM_G2  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: KAZE_DIFF_WEICKERT  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: KAZE_DIFF_CHARBONNIER  POS:  3  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  KAZE_create RETURN TYPE:  Ptr_KAZE modlist =  ['/S']
	TYPE: bool  NAME:  extended  DEFAULT VALUE:  false  MODS:  []
	TYPE: bool  NAME:  upright  DEFAULT VALUE:  false  MODS:  []
	TYPE: float  NAME:  threshold  DEFAULT VALUE:  0.001f  MODS:  []
	TYPE: int  NAME:  nOctaves  DEFAULT VALUE:  4  MODS:  []
	TYPE: int  NAME:  nOctaveLayers  DEFAULT VALUE:  4  MODS:  []
	TYPE: KAZE_DiffusivityType  NAME:  diffusivity  DEFAULT VALUE:  KAZE::DIFF_PM_G2  MODS:  []
Modifited Return:  Ptr<KAZE>

TYPE: function NAME:  KAZE_setExtended RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: bool  NAME:  extended  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  KAZE_getExtended RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  KAZE_setUpright RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: bool  NAME:  upright  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  KAZE_getUpright RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  KAZE_setThreshold RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  threshold  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  KAZE_getThreshold RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  KAZE_setNOctaves RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  octaves  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  KAZE_getNOctaves RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  KAZE_setNOctaveLayers RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  octaveLayers  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  KAZE_getNOctaveLayers RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  KAZE_setDiffusivity RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: KAZE_DiffusivityType  NAME:  diff  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  KAZE_getDiffusivity RETURN TYPE:  KAZE_DiffusivityType modlist =  ['/C', '/V', '/PV']
Modifited Return:  KAZE::DiffusivityType

TYPE: function NAME:  KAZE_getDefaultName RETURN TYPE:  String modlist =  ['/C', '/V']

TYPE:  class  NAME:  AKAZE modlist =  []
: cv::Feature2D

TYPE:  enum  NAME:  AKAZE_DescriptorType
	NAME: AKAZE_DESCRIPTOR_KAZE_UPRIGHT  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: AKAZE_DESCRIPTOR_KAZE  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: AKAZE_DESCRIPTOR_MLDB_UPRIGHT  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: AKAZE_DESCRIPTOR_MLDB  POS:  5  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  AKAZE_create RETURN TYPE:  Ptr_AKAZE modlist =  ['/S']
	TYPE: AKAZE_DescriptorType  NAME:  descriptor_type  DEFAULT VALUE:  AKAZE::DESCRIPTOR_MLDB  MODS:  []
	TYPE: int  NAME:  descriptor_size  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  descriptor_channels  DEFAULT VALUE:  3  MODS:  []
	TYPE: float  NAME:  threshold  DEFAULT VALUE:  0.001f  MODS:  []
	TYPE: int  NAME:  nOctaves  DEFAULT VALUE:  4  MODS:  []
	TYPE: int  NAME:  nOctaveLayers  DEFAULT VALUE:  4  MODS:  []
	TYPE: KAZE_DiffusivityType  NAME:  diffusivity  DEFAULT VALUE:  KAZE::DIFF_PM_G2  MODS:  []
Modifited Return:  Ptr<AKAZE>

TYPE: function NAME:  AKAZE_setDescriptorType RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: AKAZE_DescriptorType  NAME:  dtype  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  AKAZE_getDescriptorType RETURN TYPE:  AKAZE_DescriptorType modlist =  ['/C', '/V', '/PV']
Modifited Return:  AKAZE::DescriptorType

TYPE: function NAME:  AKAZE_setDescriptorSize RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  dsize  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  AKAZE_getDescriptorSize RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  AKAZE_setDescriptorChannels RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  dch  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  AKAZE_getDescriptorChannels RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  AKAZE_setThreshold RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  threshold  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  AKAZE_getThreshold RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  AKAZE_setNOctaves RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  octaves  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  AKAZE_getNOctaves RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  AKAZE_setNOctaveLayers RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  octaveLayers  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  AKAZE_getNOctaveLayers RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  AKAZE_setDiffusivity RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: KAZE_DiffusivityType  NAME:  diff  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  AKAZE_getDiffusivity RETURN TYPE:  KAZE_DiffusivityType modlist =  ['/C', '/V', '/PV']
Modifited Return:  KAZE::DiffusivityType

TYPE: function NAME:  AKAZE_getDefaultName RETURN TYPE:  String modlist =  ['/C', '/V']

TYPE:  class  NAME:  DescriptorMatcher modlist =  []
: cv::Algorithm

TYPE:  enum  NAME:  DescriptorMatcher_MatcherType
	NAME: DescriptorMatcher_FLANNBASED  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: DescriptorMatcher_BRUTEFORCE  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: DescriptorMatcher_BRUTEFORCE_L1  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: DescriptorMatcher_BRUTEFORCE_HAMMING  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: DescriptorMatcher_BRUTEFORCE_HAMMINGLUT  POS:  5  DEFAULT VALUE:  []  MODS:  []
	NAME: DescriptorMatcher_BRUTEFORCE_SL2  POS:  6  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  DescriptorMatcher_add RETURN TYPE:  void modlist =  ['/V']
	TYPE: vector_Mat  NAME:  descriptors  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  DescriptorMatcher_add RETURN TYPE:  void modlist =  ['/V']
	TYPE: vector_UMat  NAME:  descriptors  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  DescriptorMatcher_getTrainDescriptors RETURN TYPE:  vector_Mat modlist =  ['/C']
Modifited Return:  std::vector<Mat>

TYPE: function NAME:  DescriptorMatcher_clear RETURN TYPE:  void modlist =  ['/V']

TYPE: function NAME:  DescriptorMatcher_empty RETURN TYPE:  bool modlist =  ['/C', '/V']

TYPE: function NAME:  DescriptorMatcher_isMaskSupported RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  DescriptorMatcher_train RETURN TYPE:  void modlist =  ['/V']

TYPE: function NAME:  DescriptorMatcher_match RETURN TYPE:  void modlist =  ['/C']
	TYPE: Mat  NAME:  queryDescriptors  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  trainDescriptors  DEFAULT VALUE:    MODS:  []
	TYPE: vector_DMatch  NAME:  matches  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  DescriptorMatcher_match RETURN TYPE:  void modlist =  ['/C']
	TYPE: UMat  NAME:  queryDescriptors  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  trainDescriptors  DEFAULT VALUE:    MODS:  []
	TYPE: vector_DMatch  NAME:  matches  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  DescriptorMatcher_knnMatch RETURN TYPE:  void modlist =  ['/C']
	TYPE: Mat  NAME:  queryDescriptors  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  trainDescriptors  DEFAULT VALUE:    MODS:  []
	TYPE: vector_vector_DMatch  NAME:  matches  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: int  NAME:  k  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: bool  NAME:  compactResult  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  DescriptorMatcher_knnMatch RETURN TYPE:  void modlist =  ['/C']
	TYPE: UMat  NAME:  queryDescriptors  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  trainDescriptors  DEFAULT VALUE:    MODS:  []
	TYPE: vector_vector_DMatch  NAME:  matches  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: int  NAME:  k  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: bool  NAME:  compactResult  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  DescriptorMatcher_radiusMatch RETURN TYPE:  void modlist =  ['/C']
	TYPE: Mat  NAME:  queryDescriptors  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  trainDescriptors  DEFAULT VALUE:    MODS:  []
	TYPE: vector_vector_DMatch  NAME:  matches  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: float  NAME:  maxDistance  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  mask  DEFAULT VALUE:  Mat()  MODS:  []
	TYPE: bool  NAME:  compactResult  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  DescriptorMatcher_radiusMatch RETURN TYPE:  void modlist =  ['/C']
	TYPE: UMat  NAME:  queryDescriptors  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  trainDescriptors  DEFAULT VALUE:    MODS:  []
	TYPE: vector_vector_DMatch  NAME:  matches  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: float  NAME:  maxDistance  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  mask  DEFAULT VALUE:  UMat()  MODS:  []
	TYPE: bool  NAME:  compactResult  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  DescriptorMatcher_match RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  queryDescriptors  DEFAULT VALUE:    MODS:  []
	TYPE: vector_DMatch  NAME:  matches  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_Mat  NAME:  masks  DEFAULT VALUE:  vector_Mat()  MODS:  []

TYPE: function NAME:  DescriptorMatcher_match RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  queryDescriptors  DEFAULT VALUE:    MODS:  []
	TYPE: vector_DMatch  NAME:  matches  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_UMat  NAME:  masks  DEFAULT VALUE:  vector_UMat()  MODS:  []

TYPE: function NAME:  DescriptorMatcher_knnMatch RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  queryDescriptors  DEFAULT VALUE:    MODS:  []
	TYPE: vector_vector_DMatch  NAME:  matches  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: int  NAME:  k  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  masks  DEFAULT VALUE:  vector_Mat()  MODS:  []
	TYPE: bool  NAME:  compactResult  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  DescriptorMatcher_knnMatch RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  queryDescriptors  DEFAULT VALUE:    MODS:  []
	TYPE: vector_vector_DMatch  NAME:  matches  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: int  NAME:  k  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  masks  DEFAULT VALUE:  vector_UMat()  MODS:  []
	TYPE: bool  NAME:  compactResult  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  DescriptorMatcher_radiusMatch RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  queryDescriptors  DEFAULT VALUE:    MODS:  []
	TYPE: vector_vector_DMatch  NAME:  matches  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: float  NAME:  maxDistance  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  masks  DEFAULT VALUE:  vector_Mat()  MODS:  []
	TYPE: bool  NAME:  compactResult  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  DescriptorMatcher_radiusMatch RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  queryDescriptors  DEFAULT VALUE:    MODS:  []
	TYPE: vector_vector_DMatch  NAME:  matches  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: float  NAME:  maxDistance  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  masks  DEFAULT VALUE:  vector_UMat()  MODS:  []
	TYPE: bool  NAME:  compactResult  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  DescriptorMatcher_write RETURN TYPE:  void modlist =  ['/C']
	TYPE: String  NAME:  fileName  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  DescriptorMatcher_read RETURN TYPE:  void modlist =  []
	TYPE: String  NAME:  fileName  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  DescriptorMatcher_read RETURN TYPE:  void modlist =  ['/V']
	TYPE: FileNode  NAME:  arg1  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  DescriptorMatcher_clone RETURN TYPE:  Ptr_DescriptorMatcher modlist =  ['/C', '/V', '/PV']
	TYPE: bool  NAME:  emptyTrainData  DEFAULT VALUE:  false  MODS:  []
Modifited Return:  Ptr<DescriptorMatcher>

TYPE: function NAME:  DescriptorMatcher_create RETURN TYPE:  Ptr_DescriptorMatcher modlist =  ['/S']
	TYPE: String  NAME:  descriptorMatcherType  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
Modifited Return:  Ptr<DescriptorMatcher>

TYPE: function NAME:  DescriptorMatcher_create RETURN TYPE:  Ptr_DescriptorMatcher modlist =  ['/S']
	TYPE: DescriptorMatcher_MatcherType  NAME:  matcherType  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
Modifited Return:  Ptr<DescriptorMatcher>

TYPE: function NAME:  DescriptorMatcher_write RETURN TYPE:  void modlist =  ['/C']
	TYPE: Ptr_FileStorage  NAME:  fs  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  name  DEFAULT VALUE:  String()  MODS:  ['/C', '/Ref']

TYPE:  class  NAME:  BFMatcher modlist =  []
: cv::DescriptorMatcher

TYPE: function NAME:  BFMatcher_BFMatcher RETURN TYPE:   modlist =  []
	TYPE: int  NAME:  normType  DEFAULT VALUE:  NORM_L2  MODS:  []
	TYPE: bool  NAME:  crossCheck  DEFAULT VALUE:  false  MODS:  []
Modifited Return:  None

TYPE: function NAME:  BFMatcher_create RETURN TYPE:  Ptr_BFMatcher modlist =  ['/S']
	TYPE: int  NAME:  normType  DEFAULT VALUE:  NORM_L2  MODS:  []
	TYPE: bool  NAME:  crossCheck  DEFAULT VALUE:  false  MODS:  []
Modifited Return:  Ptr<BFMatcher>

TYPE:  class  NAME:  FlannBasedMatcher modlist =  []
: cv::DescriptorMatcher

TYPE: function NAME:  FlannBasedMatcher_FlannBasedMatcher RETURN TYPE:   modlist =  []
	TYPE: Ptr_flann_IndexParams  NAME:  indexParams  DEFAULT VALUE:  makePtr<flann::KDTreeIndexParams>()  MODS:  ['/C', '/Ref']
	TYPE: Ptr_flann_SearchParams  NAME:  searchParams  DEFAULT VALUE:  makePtr<flann::SearchParams>()  MODS:  ['/C', '/Ref']
Modifited Return:  None

TYPE: function NAME:  FlannBasedMatcher_create RETURN TYPE:  Ptr_FlannBasedMatcher modlist =  ['/S']
Modifited Return:  Ptr<FlannBasedMatcher>

TYPE:  enum  NAME:  struct
	NAME: DrawMatchesFlags_DEFAULT  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: DrawMatchesFlags_DRAW_OVER_OUTIMG  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: DrawMatchesFlags_NOT_DRAW_SINGLE_POINTS  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: DrawMatchesFlags_DRAW_RICH_KEYPOINTS  POS:  4  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  drawKeypoints RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: vector_KeyPoint  NAME:  keypoints  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  outImage  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:  Scalar::all(-1)  MODS:  ['/C', '/Ref']
	TYPE: DrawMatchesFlags  NAME:  flags  DEFAULT VALUE:  DrawMatchesFlags::DEFAULT  MODS:  []

TYPE: function NAME:  drawKeypoints RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: vector_KeyPoint  NAME:  keypoints  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  outImage  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:  Scalar::all(-1)  MODS:  ['/C', '/Ref']
	TYPE: DrawMatchesFlags  NAME:  flags  DEFAULT VALUE:  DrawMatchesFlags::DEFAULT  MODS:  []

TYPE: function NAME:  drawMatches RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  img1  DEFAULT VALUE:    MODS:  []
	TYPE: vector_KeyPoint  NAME:  keypoints1  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  img2  DEFAULT VALUE:    MODS:  []
	TYPE: vector_KeyPoint  NAME:  keypoints2  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: vector_DMatch  NAME:  matches1to2  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  outImg  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Scalar  NAME:  matchColor  DEFAULT VALUE:  Scalar::all(-1)  MODS:  ['/C', '/Ref']
	TYPE: Scalar  NAME:  singlePointColor  DEFAULT VALUE:  Scalar::all(-1)  MODS:  ['/C', '/Ref']
	TYPE: vector_char  NAME:  matchesMask  DEFAULT VALUE:  std::vector<char>()  MODS:  ['/C', '/Ref']
	TYPE: DrawMatchesFlags  NAME:  flags  DEFAULT VALUE:  DrawMatchesFlags::DEFAULT  MODS:  []

TYPE: function NAME:  drawMatches RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  img1  DEFAULT VALUE:    MODS:  []
	TYPE: vector_KeyPoint  NAME:  keypoints1  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  img2  DEFAULT VALUE:    MODS:  []
	TYPE: vector_KeyPoint  NAME:  keypoints2  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: vector_DMatch  NAME:  matches1to2  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  outImg  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Scalar  NAME:  matchColor  DEFAULT VALUE:  Scalar::all(-1)  MODS:  ['/C', '/Ref']
	TYPE: Scalar  NAME:  singlePointColor  DEFAULT VALUE:  Scalar::all(-1)  MODS:  ['/C', '/Ref']
	TYPE: vector_char  NAME:  matchesMask  DEFAULT VALUE:  std::vector<char>()  MODS:  ['/C', '/Ref']
	TYPE: DrawMatchesFlags  NAME:  flags  DEFAULT VALUE:  DrawMatchesFlags::DEFAULT  MODS:  []

TYPE: function NAME:  drawMatches RETURN TYPE:  void modlist =  ['=drawMatchesKnn']
	TYPE: Mat  NAME:  img1  DEFAULT VALUE:    MODS:  []
	TYPE: vector_KeyPoint  NAME:  keypoints1  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  img2  DEFAULT VALUE:    MODS:  []
	TYPE: vector_KeyPoint  NAME:  keypoints2  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: vector_vector_DMatch  NAME:  matches1to2  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  outImg  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Scalar  NAME:  matchColor  DEFAULT VALUE:  Scalar::all(-1)  MODS:  ['/C', '/Ref']
	TYPE: Scalar  NAME:  singlePointColor  DEFAULT VALUE:  Scalar::all(-1)  MODS:  ['/C', '/Ref']
	TYPE: vector_vector_char  NAME:  matchesMask  DEFAULT VALUE:  std::vector<std::vector<char> >()  MODS:  ['/C', '/Ref']
	TYPE: DrawMatchesFlags  NAME:  flags  DEFAULT VALUE:  DrawMatchesFlags::DEFAULT  MODS:  []

TYPE: function NAME:  drawMatches RETURN TYPE:  void modlist =  ['=drawMatchesKnn']
	TYPE: UMat  NAME:  img1  DEFAULT VALUE:    MODS:  []
	TYPE: vector_KeyPoint  NAME:  keypoints1  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  img2  DEFAULT VALUE:    MODS:  []
	TYPE: vector_KeyPoint  NAME:  keypoints2  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: vector_vector_DMatch  NAME:  matches1to2  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  outImg  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Scalar  NAME:  matchColor  DEFAULT VALUE:  Scalar::all(-1)  MODS:  ['/C', '/Ref']
	TYPE: Scalar  NAME:  singlePointColor  DEFAULT VALUE:  Scalar::all(-1)  MODS:  ['/C', '/Ref']
	TYPE: vector_vector_char  NAME:  matchesMask  DEFAULT VALUE:  std::vector<std::vector<char> >()  MODS:  ['/C', '/Ref']
	TYPE: DrawMatchesFlags  NAME:  flags  DEFAULT VALUE:  DrawMatchesFlags::DEFAULT  MODS:  []

TYPE:  class  NAME:  BOWTrainer modlist =  []

TYPE: function NAME:  BOWTrainer_add RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  descriptors  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  BOWTrainer_add RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  descriptors  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  BOWTrainer_getDescriptors RETURN TYPE:  vector_Mat modlist =  ['/C']
Modifited Return:  std::vector<Mat>

TYPE: function NAME:  BOWTrainer_descriptorsCount RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  BOWTrainer_clear RETURN TYPE:  void modlist =  ['/V']

TYPE: function NAME:  BOWTrainer_cluster RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BOWTrainer_cluster RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']
	TYPE: Mat  NAME:  descriptors  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  BOWTrainer_cluster RETURN TYPE:  Mat modlist =  ['/C', '/V', '/PV']
	TYPE: Mat  NAME:  descriptors  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE:  class  NAME:  BOWKMeansTrainer modlist =  []
: cv::BOWTrainer

TYPE: function NAME:  BOWKMeansTrainer_BOWKMeansTrainer RETURN TYPE:   modlist =  []
	TYPE: int  NAME:  clusterCount  DEFAULT VALUE:    MODS:  []
	TYPE: TermCriteria  NAME:  termcrit  DEFAULT VALUE:  TermCriteria()  MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  attempts  DEFAULT VALUE:  3  MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  KMEANS_PP_CENTERS  MODS:  []
Modifited Return:  None

TYPE: function NAME:  BOWKMeansTrainer_cluster RETURN TYPE:  Mat modlist =  ['/C', '/V']

TYPE: function NAME:  BOWKMeansTrainer_cluster RETURN TYPE:  Mat modlist =  ['/C', '/V']
	TYPE: Mat  NAME:  descriptors  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  BOWKMeansTrainer_cluster RETURN TYPE:  Mat modlist =  ['/C', '/V']
	TYPE: Mat  NAME:  descriptors  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE:  class  NAME:  BOWImgDescriptorExtractor modlist =  []

TYPE: function NAME:  BOWImgDescriptorExtractor_BOWImgDescriptorExtractor RETURN TYPE:   modlist =  []
	TYPE: Ptr_DescriptorExtractor  NAME:  dextractor  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Ptr_DescriptorMatcher  NAME:  dmatcher  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
Modifited Return:  None

TYPE: function NAME:  BOWImgDescriptorExtractor_setVocabulary RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  vocabulary  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  BOWImgDescriptorExtractor_setVocabulary RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  vocabulary  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  BOWImgDescriptorExtractor_getVocabulary RETURN TYPE:  Mat modlist =  ['/C']

TYPE: function NAME:  BOWImgDescriptorExtractor_compute2 RETURN TYPE:  void modlist =  ['=compute']
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: vector_KeyPoint  NAME:  keypoints  DEFAULT VALUE:    MODS:  ['/Ref']
	TYPE: Mat  NAME:  imgDescriptor  DEFAULT VALUE:    MODS:  ['/O', '/Ref']

TYPE: function NAME:  BOWImgDescriptorExtractor_compute2 RETURN TYPE:  void modlist =  ['=compute']
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: vector_KeyPoint  NAME:  keypoints  DEFAULT VALUE:    MODS:  ['/Ref']
	TYPE: Mat  NAME:  imgDescriptor  DEFAULT VALUE:    MODS:  ['/O', '/Ref']

TYPE: function NAME:  BOWImgDescriptorExtractor_descriptorSize RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  BOWImgDescriptorExtractor_descriptorType RETURN TYPE:  int modlist =  ['/C']

TYPE:  enum  NAME:  <unnamed>
	NAME: OPTFLOW_USE_INITIAL_FLOW  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: OPTFLOW_LK_GET_MIN_EIGENVALS  POS:  8  DEFAULT VALUE:  []  MODS:  []
	NAME: OPTFLOW_FARNEBACK_GAUSSIAN  POS:  256  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  CamShift RETURN TYPE:  RotatedRect modlist =  []
	TYPE: Mat  NAME:  probImage  DEFAULT VALUE:    MODS:  []
	TYPE: Rect  NAME:  window  DEFAULT VALUE:    MODS:  ['/IO', '/Ref']
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  CamShift RETURN TYPE:  RotatedRect modlist =  []
	TYPE: UMat  NAME:  probImage  DEFAULT VALUE:    MODS:  []
	TYPE: Rect  NAME:  window  DEFAULT VALUE:    MODS:  ['/IO', '/Ref']
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  meanShift RETURN TYPE:  int modlist =  []
	TYPE: Mat  NAME:  probImage  DEFAULT VALUE:    MODS:  []
	TYPE: Rect  NAME:  window  DEFAULT VALUE:    MODS:  ['/IO', '/Ref']
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  meanShift RETURN TYPE:  int modlist =  []
	TYPE: UMat  NAME:  probImage  DEFAULT VALUE:    MODS:  []
	TYPE: Rect  NAME:  window  DEFAULT VALUE:    MODS:  ['/IO', '/Ref']
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  buildOpticalFlowPyramid RETURN TYPE:  int modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Mat  NAME:  pyramid  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Size  NAME:  winSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  maxLevel  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  withDerivatives  DEFAULT VALUE:  true  MODS:  []
	TYPE: int  NAME:  pyrBorder  DEFAULT VALUE:  BORDER_REFLECT_101  MODS:  []
	TYPE: int  NAME:  derivBorder  DEFAULT VALUE:  BORDER_CONSTANT  MODS:  []
	TYPE: bool  NAME:  tryReuseInputImage  DEFAULT VALUE:  true  MODS:  []

TYPE: function NAME:  buildOpticalFlowPyramid RETURN TYPE:  int modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: vector_UMat  NAME:  pyramid  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Size  NAME:  winSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  maxLevel  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  withDerivatives  DEFAULT VALUE:  true  MODS:  []
	TYPE: int  NAME:  pyrBorder  DEFAULT VALUE:  BORDER_REFLECT_101  MODS:  []
	TYPE: int  NAME:  derivBorder  DEFAULT VALUE:  BORDER_CONSTANT  MODS:  []
	TYPE: bool  NAME:  tryReuseInputImage  DEFAULT VALUE:  true  MODS:  []

TYPE: function NAME:  calcOpticalFlowPyrLK RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  prevImg  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  nextImg  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  prevPts  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  nextPts  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  status  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  err  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Size  NAME:  winSize  DEFAULT VALUE:  Size(21,21)  MODS:  []
	TYPE: int  NAME:  maxLevel  DEFAULT VALUE:  3  MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria(TermCriteria::COUNT+TermCriteria::EPS, 30, 0.01)  MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  minEigThreshold  DEFAULT VALUE:  1e-4  MODS:  []

TYPE: function NAME:  calcOpticalFlowPyrLK RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  prevImg  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  nextImg  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  prevPts  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  nextPts  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  status  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  err  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Size  NAME:  winSize  DEFAULT VALUE:  Size(21,21)  MODS:  []
	TYPE: int  NAME:  maxLevel  DEFAULT VALUE:  3  MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:  TermCriteria(TermCriteria::COUNT+TermCriteria::EPS, 30, 0.01)  MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  minEigThreshold  DEFAULT VALUE:  1e-4  MODS:  []

TYPE: function NAME:  calcOpticalFlowFarneback RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  prev  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  next  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  flow  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: double  NAME:  pyr_scale  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  levels  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  winsize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  iterations  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  poly_n  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  poly_sigma  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  calcOpticalFlowFarneback RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  prev  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  next  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  flow  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: double  NAME:  pyr_scale  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  levels  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  winsize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  iterations  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  poly_n  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  poly_sigma  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: MOTION_TRANSLATION  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: MOTION_EUCLIDEAN  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: MOTION_AFFINE  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: MOTION_HOMOGRAPHY  POS:  3  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  computeECC RETURN TYPE:  double modlist =  []
	TYPE: Mat  NAME:  templateImage  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  inputImage  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  inputMask  DEFAULT VALUE:  Mat()  MODS:  []

TYPE: function NAME:  computeECC RETURN TYPE:  double modlist =  []
	TYPE: UMat  NAME:  templateImage  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  inputImage  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  inputMask  DEFAULT VALUE:  UMat()  MODS:  []

TYPE: function NAME:  findTransformECC RETURN TYPE:  double modlist =  []
	TYPE: Mat  NAME:  templateImage  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  inputImage  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  warpMatrix  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: int  NAME:  motionType  DEFAULT VALUE:    MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  inputMask  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  gaussFiltSize  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  findTransformECC RETURN TYPE:  double modlist =  []
	TYPE: UMat  NAME:  templateImage  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  inputImage  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  warpMatrix  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: int  NAME:  motionType  DEFAULT VALUE:    MODS:  []
	TYPE: TermCriteria  NAME:  criteria  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  inputMask  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  gaussFiltSize  DEFAULT VALUE:    MODS:  []

TYPE:  class  NAME:  KalmanFilter modlist =  []
	NAME: Mat  POS:  statePre  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: Mat  POS:  statePost  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: Mat  POS:  transitionMatrix  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: Mat  POS:  controlMatrix  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: Mat  POS:  measurementMatrix  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: Mat  POS:  processNoiseCov  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: Mat  POS:  measurementNoiseCov  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: Mat  POS:  errorCovPre  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: Mat  POS:  gain  DEFAULT VALUE:    MODS:  ['/RW']
	NAME: Mat  POS:  errorCovPost  DEFAULT VALUE:    MODS:  ['/RW']

TYPE: function NAME:  KalmanFilter_KalmanFilter RETURN TYPE:   modlist =  []
Modifited Return:  None

TYPE: function NAME:  KalmanFilter_KalmanFilter RETURN TYPE:   modlist =  []
	TYPE: int  NAME:  dynamParams  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  measureParams  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  controlParams  DEFAULT VALUE:  0  MODS:  []
	TYPE: int  NAME:  type  DEFAULT VALUE:  CV_32F  MODS:  []
Modifited Return:  None

TYPE: function NAME:  KalmanFilter_predict RETURN TYPE:  Mat modlist =  []
	TYPE: Mat  NAME:  control  DEFAULT VALUE:  Mat()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  KalmanFilter_predict RETURN TYPE:  Mat modlist =  []
	TYPE: Mat  NAME:  control  DEFAULT VALUE:  Mat()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  KalmanFilter_correct RETURN TYPE:  Mat modlist =  []
	TYPE: Mat  NAME:  measurement  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  KalmanFilter_correct RETURN TYPE:  Mat modlist =  []
	TYPE: Mat  NAME:  measurement  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  readOpticalFlow RETURN TYPE:  Mat modlist =  []
	TYPE: String  NAME:  path  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  writeOpticalFlow RETURN TYPE:  bool modlist =  []
	TYPE: String  NAME:  path  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  flow  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  writeOpticalFlow RETURN TYPE:  bool modlist =  []
	TYPE: String  NAME:  path  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  flow  DEFAULT VALUE:    MODS:  []

TYPE:  class  NAME:  DenseOpticalFlow modlist =  []
: cv::Algorithm

TYPE: function NAME:  DenseOpticalFlow_calc RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  I0  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  I1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  flow  DEFAULT VALUE:    MODS:  ['/IO']

TYPE: function NAME:  DenseOpticalFlow_calc RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  I0  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  I1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  flow  DEFAULT VALUE:    MODS:  ['/IO']

TYPE: function NAME:  DenseOpticalFlow_collectGarbage RETURN TYPE:  void modlist =  ['/V', '/PV']

TYPE:  class  NAME:  SparseOpticalFlow modlist =  []
: cv::Algorithm

TYPE: function NAME:  SparseOpticalFlow_calc RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  prevImg  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  nextImg  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  prevPts  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  nextPts  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  status  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: Mat  NAME:  err  DEFAULT VALUE:  cv::Mat()  MODS:  ['/O']

TYPE: function NAME:  SparseOpticalFlow_calc RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  prevImg  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  nextImg  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  prevPts  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  nextPts  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  status  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: UMat  NAME:  err  DEFAULT VALUE:  cv::UMat()  MODS:  ['/O']

TYPE:  class  NAME:  FarnebackOpticalFlow modlist =  []
: cv::DenseOpticalFlow

TYPE: function NAME:  FarnebackOpticalFlow_getNumLevels RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  FarnebackOpticalFlow_setNumLevels RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  numLevels  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  FarnebackOpticalFlow_getPyrScale RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  FarnebackOpticalFlow_setPyrScale RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  pyrScale  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  FarnebackOpticalFlow_getFastPyramids RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  FarnebackOpticalFlow_setFastPyramids RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: bool  NAME:  fastPyramids  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  FarnebackOpticalFlow_getWinSize RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  FarnebackOpticalFlow_setWinSize RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  winSize  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  FarnebackOpticalFlow_getNumIters RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  FarnebackOpticalFlow_setNumIters RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  numIters  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  FarnebackOpticalFlow_getPolyN RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  FarnebackOpticalFlow_setPolyN RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  polyN  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  FarnebackOpticalFlow_getPolySigma RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  FarnebackOpticalFlow_setPolySigma RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  polySigma  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  FarnebackOpticalFlow_getFlags RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  FarnebackOpticalFlow_setFlags RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  FarnebackOpticalFlow_create RETURN TYPE:  Ptr_FarnebackOpticalFlow modlist =  ['/S']
	TYPE: int  NAME:  numLevels  DEFAULT VALUE:  5  MODS:  []
	TYPE: double  NAME:  pyrScale  DEFAULT VALUE:  0.5  MODS:  []
	TYPE: bool  NAME:  fastPyramids  DEFAULT VALUE:  false  MODS:  []
	TYPE: int  NAME:  winSize  DEFAULT VALUE:  13  MODS:  []
	TYPE: int  NAME:  numIters  DEFAULT VALUE:  10  MODS:  []
	TYPE: int  NAME:  polyN  DEFAULT VALUE:  5  MODS:  []
	TYPE: double  NAME:  polySigma  DEFAULT VALUE:  1.1  MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
Modifited Return:  Ptr<FarnebackOpticalFlow>

TYPE:  class  NAME:  VariationalRefinement modlist =  []
: cv::DenseOpticalFlow

TYPE: function NAME:  VariationalRefinement_calcUV RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  I0  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  I1  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  flow_u  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  flow_v  DEFAULT VALUE:    MODS:  ['/IO']

TYPE: function NAME:  VariationalRefinement_calcUV RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  I0  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  I1  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  flow_u  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  flow_v  DEFAULT VALUE:    MODS:  ['/IO']

TYPE: function NAME:  VariationalRefinement_getFixedPointIterations RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  VariationalRefinement_setFixedPointIterations RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  VariationalRefinement_getSorIterations RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  VariationalRefinement_setSorIterations RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  VariationalRefinement_getOmega RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  VariationalRefinement_setOmega RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: float  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  VariationalRefinement_getAlpha RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  VariationalRefinement_setAlpha RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: float  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  VariationalRefinement_getDelta RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  VariationalRefinement_setDelta RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: float  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  VariationalRefinement_getGamma RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  VariationalRefinement_setGamma RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: float  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  VariationalRefinement_create RETURN TYPE:  Ptr_VariationalRefinement modlist =  ['/S']
Modifited Return:  Ptr<VariationalRefinement>

TYPE:  class  NAME:  DISOpticalFlow modlist =  []
: cv::DenseOpticalFlow

TYPE:  enum  NAME:  DISOpticalFlow_<unnamed>
	NAME: DISOpticalFlow_PRESET_ULTRAFAST  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: DISOpticalFlow_PRESET_FAST  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: DISOpticalFlow_PRESET_MEDIUM  POS:  2  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  DISOpticalFlow_getFinestScale RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  DISOpticalFlow_setFinestScale RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  DISOpticalFlow_getPatchSize RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  DISOpticalFlow_setPatchSize RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  DISOpticalFlow_getPatchStride RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  DISOpticalFlow_setPatchStride RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  DISOpticalFlow_getGradientDescentIterations RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  DISOpticalFlow_setGradientDescentIterations RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  DISOpticalFlow_getVariationalRefinementIterations RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  DISOpticalFlow_setVariationalRefinementIterations RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  DISOpticalFlow_getVariationalRefinementAlpha RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  DISOpticalFlow_setVariationalRefinementAlpha RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: float  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  DISOpticalFlow_getVariationalRefinementDelta RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  DISOpticalFlow_setVariationalRefinementDelta RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: float  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  DISOpticalFlow_getVariationalRefinementGamma RETURN TYPE:  float modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  DISOpticalFlow_setVariationalRefinementGamma RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: float  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  DISOpticalFlow_getUseMeanNormalization RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  DISOpticalFlow_setUseMeanNormalization RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: bool  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  DISOpticalFlow_getUseSpatialPropagation RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  DISOpticalFlow_setUseSpatialPropagation RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: bool  NAME:  val  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  DISOpticalFlow_create RETURN TYPE:  Ptr_DISOpticalFlow modlist =  ['/S']
	TYPE: int  NAME:  preset  DEFAULT VALUE:  DISOpticalFlow::PRESET_FAST  MODS:  []
Modifited Return:  Ptr<DISOpticalFlow>

TYPE:  class  NAME:  SparsePyrLKOpticalFlow modlist =  []
: cv::SparseOpticalFlow

TYPE: function NAME:  SparsePyrLKOpticalFlow_getWinSize RETURN TYPE:  Size modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  SparsePyrLKOpticalFlow_setWinSize RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Size  NAME:  winSize  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  SparsePyrLKOpticalFlow_getMaxLevel RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  SparsePyrLKOpticalFlow_setMaxLevel RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  maxLevel  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  SparsePyrLKOpticalFlow_getTermCriteria RETURN TYPE:  TermCriteria modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  SparsePyrLKOpticalFlow_setTermCriteria RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: TermCriteria  NAME:  crit  DEFAULT VALUE:    MODS:  ['/Ref']

TYPE: function NAME:  SparsePyrLKOpticalFlow_getFlags RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  SparsePyrLKOpticalFlow_setFlags RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  SparsePyrLKOpticalFlow_getMinEigThreshold RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  SparsePyrLKOpticalFlow_setMinEigThreshold RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  minEigThreshold  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  SparsePyrLKOpticalFlow_create RETURN TYPE:  Ptr_SparsePyrLKOpticalFlow modlist =  ['/S']
	TYPE: Size  NAME:  winSize  DEFAULT VALUE:  Size(21, 21)  MODS:  []
	TYPE: int  NAME:  maxLevel  DEFAULT VALUE:  3  MODS:  []
	TYPE: TermCriteria  NAME:  crit  DEFAULT VALUE:  TermCriteria(TermCriteria::COUNT+TermCriteria::EPS, 30, 0.01)  MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: double  NAME:  minEigThreshold  DEFAULT VALUE:  1e-4  MODS:  []
Modifited Return:  Ptr<SparsePyrLKOpticalFlow>

TYPE:  class  NAME:  BackgroundSubtractor modlist =  []
: cv::Algorithm

TYPE: function NAME:  BackgroundSubtractor_apply RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  fgmask  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  learningRate  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  BackgroundSubtractor_apply RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  fgmask  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  learningRate  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  BackgroundSubtractor_getBackgroundImage RETURN TYPE:  void modlist =  ['/C', '/V', '/PV']
	TYPE: Mat  NAME:  backgroundImage  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  BackgroundSubtractor_getBackgroundImage RETURN TYPE:  void modlist =  ['/C', '/V', '/PV']
	TYPE: UMat  NAME:  backgroundImage  DEFAULT VALUE:    MODS:  ['/O']

TYPE:  class  NAME:  BackgroundSubtractorMOG2 modlist =  []
: cv::BackgroundSubtractor

TYPE: function NAME:  BackgroundSubtractorMOG2_getHistory RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorMOG2_setHistory RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  history  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BackgroundSubtractorMOG2_getNMixtures RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorMOG2_setNMixtures RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  nmixtures  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BackgroundSubtractorMOG2_getBackgroundRatio RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorMOG2_setBackgroundRatio RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  ratio  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BackgroundSubtractorMOG2_getVarThreshold RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorMOG2_setVarThreshold RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  varThreshold  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BackgroundSubtractorMOG2_getVarThresholdGen RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorMOG2_setVarThresholdGen RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  varThresholdGen  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BackgroundSubtractorMOG2_getVarInit RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorMOG2_setVarInit RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  varInit  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BackgroundSubtractorMOG2_getVarMin RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorMOG2_setVarMin RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  varMin  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BackgroundSubtractorMOG2_getVarMax RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorMOG2_setVarMax RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  varMax  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BackgroundSubtractorMOG2_getComplexityReductionThreshold RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorMOG2_setComplexityReductionThreshold RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  ct  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BackgroundSubtractorMOG2_getDetectShadows RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorMOG2_setDetectShadows RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: bool  NAME:  detectShadows  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BackgroundSubtractorMOG2_getShadowValue RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorMOG2_setShadowValue RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  value  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BackgroundSubtractorMOG2_getShadowThreshold RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorMOG2_setShadowThreshold RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  threshold  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BackgroundSubtractorMOG2_apply RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  fgmask  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  learningRate  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  BackgroundSubtractorMOG2_apply RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  fgmask  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: double  NAME:  learningRate  DEFAULT VALUE:  -1  MODS:  []

TYPE: function NAME:  createBackgroundSubtractorMOG2 RETURN TYPE:  Ptr_BackgroundSubtractorMOG2 modlist =  []
	TYPE: int  NAME:  history  DEFAULT VALUE:  500  MODS:  []
	TYPE: double  NAME:  varThreshold  DEFAULT VALUE:  16  MODS:  []
	TYPE: bool  NAME:  detectShadows  DEFAULT VALUE:  true  MODS:  []
Modifited Return:  Ptr<BackgroundSubtractorMOG2>

TYPE:  class  NAME:  BackgroundSubtractorKNN modlist =  []
: cv::BackgroundSubtractor

TYPE: function NAME:  BackgroundSubtractorKNN_getHistory RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorKNN_setHistory RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  history  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BackgroundSubtractorKNN_getNSamples RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorKNN_setNSamples RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  _nN  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BackgroundSubtractorKNN_getDist2Threshold RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorKNN_setDist2Threshold RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  _dist2Threshold  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BackgroundSubtractorKNN_getkNNSamples RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorKNN_setkNNSamples RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  _nkNN  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BackgroundSubtractorKNN_getDetectShadows RETURN TYPE:  bool modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorKNN_setDetectShadows RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: bool  NAME:  detectShadows  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BackgroundSubtractorKNN_getShadowValue RETURN TYPE:  int modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorKNN_setShadowValue RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: int  NAME:  value  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  BackgroundSubtractorKNN_getShadowThreshold RETURN TYPE:  double modlist =  ['/C', '/V', '/PV']

TYPE: function NAME:  BackgroundSubtractorKNN_setShadowThreshold RETURN TYPE:  void modlist =  ['/V', '/PV']
	TYPE: double  NAME:  threshold  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  createBackgroundSubtractorKNN RETURN TYPE:  Ptr_BackgroundSubtractorKNN modlist =  []
	TYPE: int  NAME:  history  DEFAULT VALUE:  500  MODS:  []
	TYPE: double  NAME:  dist2Threshold  DEFAULT VALUE:  400.0  MODS:  []
	TYPE: bool  NAME:  detectShadows  DEFAULT VALUE:  true  MODS:  []
Modifited Return:  Ptr<BackgroundSubtractorKNN>

TYPE: function NAME:  groupRectangles RETURN TYPE:  void modlist =  []
	TYPE: vector_Rect  NAME:  rectList  DEFAULT VALUE:    MODS:  ['/IO', '/Ref']
	TYPE: vector_int  NAME:  weights  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: int  NAME:  groupThreshold  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  eps  DEFAULT VALUE:  0.2  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CASCADE_DO_CANNY_PRUNING  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: CASCADE_SCALE_IMAGE  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: CASCADE_FIND_BIGGEST_OBJECT  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: CASCADE_DO_ROUGH_SEARCH  POS:  8  DEFAULT VALUE:  []  MODS:  []

TYPE:  class  NAME:  BaseCascadeClassifier modlist =  []
: cv::Algorithm

TYPE:  class  NAME:  CascadeClassifier modlist =  []

TYPE: function NAME:  CascadeClassifier_CascadeClassifier RETURN TYPE:   modlist =  []
Modifited Return:  None

TYPE: function NAME:  CascadeClassifier_CascadeClassifier RETURN TYPE:   modlist =  []
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
Modifited Return:  None

TYPE: function NAME:  CascadeClassifier_empty RETURN TYPE:  bool modlist =  ['/C']

TYPE: function NAME:  CascadeClassifier_load RETURN TYPE:  bool modlist =  []
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  CascadeClassifier_read RETURN TYPE:  bool modlist =  []
	TYPE: FileNode  NAME:  node  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  CascadeClassifier_detectMultiScale RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Rect  NAME:  objects  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: double  NAME:  scaleFactor  DEFAULT VALUE:  1.1  MODS:  []
	TYPE: int  NAME:  minNeighbors  DEFAULT VALUE:  3  MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: Size  NAME:  minSize  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: Size  NAME:  maxSize  DEFAULT VALUE:  Size()  MODS:  []

TYPE: function NAME:  CascadeClassifier_detectMultiScale RETURN TYPE:  void modlist =  []
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Rect  NAME:  objects  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: double  NAME:  scaleFactor  DEFAULT VALUE:  1.1  MODS:  []
	TYPE: int  NAME:  minNeighbors  DEFAULT VALUE:  3  MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: Size  NAME:  minSize  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: Size  NAME:  maxSize  DEFAULT VALUE:  Size()  MODS:  []

TYPE: function NAME:  CascadeClassifier_detectMultiScale RETURN TYPE:  void modlist =  ['=detectMultiScale2']
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Rect  NAME:  objects  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_int  NAME:  numDetections  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: double  NAME:  scaleFactor  DEFAULT VALUE:  1.1  MODS:  []
	TYPE: int  NAME:  minNeighbors  DEFAULT VALUE:  3  MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: Size  NAME:  minSize  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: Size  NAME:  maxSize  DEFAULT VALUE:  Size()  MODS:  []

TYPE: function NAME:  CascadeClassifier_detectMultiScale RETURN TYPE:  void modlist =  ['=detectMultiScale2']
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Rect  NAME:  objects  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_int  NAME:  numDetections  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: double  NAME:  scaleFactor  DEFAULT VALUE:  1.1  MODS:  []
	TYPE: int  NAME:  minNeighbors  DEFAULT VALUE:  3  MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: Size  NAME:  minSize  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: Size  NAME:  maxSize  DEFAULT VALUE:  Size()  MODS:  []

TYPE: function NAME:  CascadeClassifier_detectMultiScale RETURN TYPE:  void modlist =  ['=detectMultiScale3']
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Rect  NAME:  objects  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_int  NAME:  rejectLevels  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_double  NAME:  levelWeights  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: double  NAME:  scaleFactor  DEFAULT VALUE:  1.1  MODS:  []
	TYPE: int  NAME:  minNeighbors  DEFAULT VALUE:  3  MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: Size  NAME:  minSize  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: Size  NAME:  maxSize  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: bool  NAME:  outputRejectLevels  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  CascadeClassifier_detectMultiScale RETURN TYPE:  void modlist =  ['=detectMultiScale3']
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Rect  NAME:  objects  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_int  NAME:  rejectLevels  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_double  NAME:  levelWeights  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: double  NAME:  scaleFactor  DEFAULT VALUE:  1.1  MODS:  []
	TYPE: int  NAME:  minNeighbors  DEFAULT VALUE:  3  MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:  0  MODS:  []
	TYPE: Size  NAME:  minSize  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: Size  NAME:  maxSize  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: bool  NAME:  outputRejectLevels  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  CascadeClassifier_isOldFormatCascade RETURN TYPE:  bool modlist =  ['/C']

TYPE: function NAME:  CascadeClassifier_getOriginalWindowSize RETURN TYPE:  Size modlist =  ['/C']

TYPE: function NAME:  CascadeClassifier_getFeatureType RETURN TYPE:  int modlist =  ['/C']

TYPE: function NAME:  CascadeClassifier_convert RETURN TYPE:  bool modlist =  ['/S']
	TYPE: String  NAME:  oldcascade  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  newcascade  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

['struct cv.HOGDescriptor', '', [], [['Size', 'winSize', '', []], ['Size', 'blockSize', '', []], ['Size', 'blockStride', '', []], ['Size', 'cellSize', '', []], ['int', 'nbins', '', []], ['int', 'derivAperture', '', []], ['double', 'winSigma', '', []], ['HOGDescriptor_HistogramNormType', 'histogramNormType', '', []], ['double', 'L2HysThreshold', '', []], ['bool', 'gammaCorrection', '', []], ['vector_float', 'svmDetector', '', []], ['int', 'nlevels', '', []], ['bool', 'signedGradient', '', []]], None, '@brief Implementation of HOG (Histogram of Oriented Gradients) descriptor and object detector.\n\nthe HOG descriptor algorithm introduced by Navneet Dalal and Bill Triggs @cite Dalal2005 .\n\nuseful links:\n\nhttps://hal.inria.fr/inria-00548512/document/\n\nhttps://en.wikipedia.org/wiki/Histogram_of_oriented_gradients\n\nhttps://software.intel.com/en-us/ipp-dev-reference-histogram-of-oriented-gradients-hog-descriptor\n\nhttp://www.learnopencv.com/histogram-of-oriented-gradients\n\nhttp://www.learnopencv.com/handwritten-digits-classification-an-opencv-c-python-tutorial']

TYPE:  enum  NAME:  HOGDescriptor_HistogramNormType
	NAME: HOGDescriptor_L2Hys  POS:  0  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  HOGDescriptor_<unnamed>
	NAME: HOGDescriptor_DEFAULT_NLEVELS  POS:  64  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  HOGDescriptor_DescriptorStorageFormat
	NAME: HOGDescriptor_DESCR_FORMAT_COL_BY_COL  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: HOGDescriptor_DESCR_FORMAT_ROW_BY_ROW  POS:  1  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  HOGDescriptor_HOGDescriptor RETURN TYPE:   modlist =  []
Modifited Return:  None

TYPE: function NAME:  HOGDescriptor_HOGDescriptor RETURN TYPE:   modlist =  []
	TYPE: Size  NAME:  _winSize  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  _blockSize  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  _blockStride  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  _cellSize  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  _nbins  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  _derivAperture  DEFAULT VALUE:  1  MODS:  []
	TYPE: double  NAME:  _winSigma  DEFAULT VALUE:  -1  MODS:  []
	TYPE: HOGDescriptor_HistogramNormType  NAME:  _histogramNormType  DEFAULT VALUE:  HOGDescriptor::L2Hys  MODS:  []
	TYPE: double  NAME:  _L2HysThreshold  DEFAULT VALUE:  0.2  MODS:  []
	TYPE: bool  NAME:  _gammaCorrection  DEFAULT VALUE:  false  MODS:  []
	TYPE: int  NAME:  _nlevels  DEFAULT VALUE:  HOGDescriptor::DEFAULT_NLEVELS  MODS:  []
	TYPE: bool  NAME:  _signedGradient  DEFAULT VALUE:  false  MODS:  []
Modifited Return:  None

TYPE: function NAME:  HOGDescriptor_HOGDescriptor RETURN TYPE:   modlist =  []
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
Modifited Return:  None

TYPE: function NAME:  HOGDescriptor_getDescriptorSize RETURN TYPE:  size_t modlist =  ['/C']

TYPE: function NAME:  HOGDescriptor_checkDetectorSize RETURN TYPE:  bool modlist =  ['/C']

TYPE: function NAME:  HOGDescriptor_getWinSigma RETURN TYPE:  double modlist =  ['/C']

TYPE: function NAME:  HOGDescriptor_setSVMDetector RETURN TYPE:  void modlist =  ['/V']
	TYPE: Mat  NAME:  svmdetector  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  HOGDescriptor_setSVMDetector RETURN TYPE:  void modlist =  ['/V']
	TYPE: UMat  NAME:  svmdetector  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  HOGDescriptor_load RETURN TYPE:  bool modlist =  ['/V']
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  objname  DEFAULT VALUE:  String()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  HOGDescriptor_save RETURN TYPE:  void modlist =  ['/C', '/V']
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  objname  DEFAULT VALUE:  String()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  HOGDescriptor_compute RETURN TYPE:  void modlist =  ['/C', '/V']
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: vector_float  NAME:  descriptors  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: Size  NAME:  winStride  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: Size  NAME:  padding  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: vector_Point  NAME:  locations  DEFAULT VALUE:  std::vector<Point>()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  HOGDescriptor_compute RETURN TYPE:  void modlist =  ['/C', '/V']
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: vector_float  NAME:  descriptors  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: Size  NAME:  winStride  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: Size  NAME:  padding  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: vector_Point  NAME:  locations  DEFAULT VALUE:  std::vector<Point>()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  HOGDescriptor_detect RETURN TYPE:  void modlist =  ['/C', '/V']
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Point  NAME:  foundLocations  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_double  NAME:  weights  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: double  NAME:  hitThreshold  DEFAULT VALUE:  0  MODS:  []
	TYPE: Size  NAME:  winStride  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: Size  NAME:  padding  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: vector_Point  NAME:  searchLocations  DEFAULT VALUE:  std::vector<Point>()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  HOGDescriptor_detect RETURN TYPE:  void modlist =  ['/C', '/V']
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Point  NAME:  foundLocations  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_double  NAME:  weights  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: double  NAME:  hitThreshold  DEFAULT VALUE:  0  MODS:  []
	TYPE: Size  NAME:  winStride  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: Size  NAME:  padding  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: vector_Point  NAME:  searchLocations  DEFAULT VALUE:  std::vector<Point>()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  HOGDescriptor_detectMultiScale RETURN TYPE:  void modlist =  ['/C', '/V']
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Rect  NAME:  foundLocations  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_double  NAME:  foundWeights  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: double  NAME:  hitThreshold  DEFAULT VALUE:  0  MODS:  []
	TYPE: Size  NAME:  winStride  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: Size  NAME:  padding  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: double  NAME:  scale  DEFAULT VALUE:  1.05  MODS:  []
	TYPE: double  NAME:  finalThreshold  DEFAULT VALUE:  2.0  MODS:  []
	TYPE: bool  NAME:  useMeanshiftGrouping  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  HOGDescriptor_detectMultiScale RETURN TYPE:  void modlist =  ['/C', '/V']
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Rect  NAME:  foundLocations  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_double  NAME:  foundWeights  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: double  NAME:  hitThreshold  DEFAULT VALUE:  0  MODS:  []
	TYPE: Size  NAME:  winStride  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: Size  NAME:  padding  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: double  NAME:  scale  DEFAULT VALUE:  1.05  MODS:  []
	TYPE: double  NAME:  finalThreshold  DEFAULT VALUE:  2.0  MODS:  []
	TYPE: bool  NAME:  useMeanshiftGrouping  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  HOGDescriptor_computeGradient RETURN TYPE:  void modlist =  ['/C', '/V']
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  grad  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Mat  NAME:  angleOfs  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Size  NAME:  paddingTL  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: Size  NAME:  paddingBR  DEFAULT VALUE:  Size()  MODS:  []

TYPE: function NAME:  HOGDescriptor_computeGradient RETURN TYPE:  void modlist =  ['/C', '/V']
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  grad  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: UMat  NAME:  angleOfs  DEFAULT VALUE:    MODS:  ['/IO']
	TYPE: Size  NAME:  paddingTL  DEFAULT VALUE:  Size()  MODS:  []
	TYPE: Size  NAME:  paddingBR  DEFAULT VALUE:  Size()  MODS:  []

TYPE: function NAME:  HOGDescriptor_getDefaultPeopleDetector RETURN TYPE:  vector_float modlist =  ['/S']
Modifited Return:  std::vector<float>

TYPE: function NAME:  HOGDescriptor_getDaimlerPeopleDetector RETURN TYPE:  vector_float modlist =  ['/S']
Modifited Return:  std::vector<float>

TYPE:  class  NAME:  QRCodeDetector modlist =  []

TYPE: function NAME:  QRCodeDetector_QRCodeDetector RETURN TYPE:   modlist =  []
Modifited Return:  None

TYPE: function NAME:  QRCodeDetector_setEpsX RETURN TYPE:  void modlist =  []
	TYPE: double  NAME:  epsX  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  QRCodeDetector_setEpsY RETURN TYPE:  void modlist =  []
	TYPE: double  NAME:  epsY  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  QRCodeDetector_detect RETURN TYPE:  bool modlist =  ['/C']
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  QRCodeDetector_detect RETURN TYPE:  bool modlist =  ['/C']
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  QRCodeDetector_decode RETURN TYPE:  string modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  straight_qrcode  DEFAULT VALUE:  Mat()  MODS:  ['/O']
Modifited Return:  std::string

TYPE: function NAME:  QRCodeDetector_decode RETURN TYPE:  string modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  straight_qrcode  DEFAULT VALUE:  UMat()  MODS:  ['/O']
Modifited Return:  std::string

TYPE: function NAME:  QRCodeDetector_detectAndDecode RETURN TYPE:  string modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: Mat  NAME:  straight_qrcode  DEFAULT VALUE:  Mat()  MODS:  ['/O']
Modifited Return:  std::string

TYPE: function NAME:  QRCodeDetector_detectAndDecode RETURN TYPE:  string modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: UMat  NAME:  straight_qrcode  DEFAULT VALUE:  UMat()  MODS:  ['/O']
Modifited Return:  std::string

TYPE: function NAME:  QRCodeDetector_detectMulti RETURN TYPE:  bool modlist =  ['/C']
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  QRCodeDetector_detectMulti RETURN TYPE:  bool modlist =  ['/C']
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  QRCodeDetector_decodeMulti RETURN TYPE:  bool modlist =  ['/C']
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: Mat  NAME:  points  DEFAULT VALUE:    MODS:  []
	TYPE: vector_string  NAME:  decoded_info  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_Mat  NAME:  straight_qrcode  DEFAULT VALUE:  vector_Mat()  MODS:  ['/O']

TYPE: function NAME:  QRCodeDetector_decodeMulti RETURN TYPE:  bool modlist =  ['/C']
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: UMat  NAME:  points  DEFAULT VALUE:    MODS:  []
	TYPE: vector_string  NAME:  decoded_info  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_UMat  NAME:  straight_qrcode  DEFAULT VALUE:  vector_UMat()  MODS:  ['/O']

TYPE: function NAME:  QRCodeDetector_detectAndDecodeMulti RETURN TYPE:  bool modlist =  ['/C']
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: vector_string  NAME:  decoded_info  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: Mat  NAME:  points  DEFAULT VALUE:  Mat()  MODS:  ['/O']
	TYPE: vector_Mat  NAME:  straight_qrcode  DEFAULT VALUE:  vector_Mat()  MODS:  ['/O']

TYPE: function NAME:  QRCodeDetector_detectAndDecodeMulti RETURN TYPE:  bool modlist =  ['/C']
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: vector_string  NAME:  decoded_info  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: UMat  NAME:  points  DEFAULT VALUE:  UMat()  MODS:  ['/O']
	TYPE: vector_UMat  NAME:  straight_qrcode  DEFAULT VALUE:  vector_UMat()  MODS:  ['/O']

TYPE:  enum  NAME:  ImreadModes
	NAME: IMREAD_UNCHANGED  POS:  -1  DEFAULT VALUE:  []  MODS:  []
	NAME: IMREAD_GRAYSCALE  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: IMREAD_COLOR  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: IMREAD_ANYDEPTH  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: IMREAD_ANYCOLOR  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: IMREAD_LOAD_GDAL  POS:  8  DEFAULT VALUE:  []  MODS:  []
	NAME: IMREAD_REDUCED_GRAYSCALE_2  POS:  16  DEFAULT VALUE:  []  MODS:  []
	NAME: IMREAD_REDUCED_COLOR_2  POS:  17  DEFAULT VALUE:  []  MODS:  []
	NAME: IMREAD_REDUCED_GRAYSCALE_4  POS:  32  DEFAULT VALUE:  []  MODS:  []
	NAME: IMREAD_REDUCED_COLOR_4  POS:  33  DEFAULT VALUE:  []  MODS:  []
	NAME: IMREAD_REDUCED_GRAYSCALE_8  POS:  64  DEFAULT VALUE:  []  MODS:  []
	NAME: IMREAD_REDUCED_COLOR_8  POS:  65  DEFAULT VALUE:  []  MODS:  []
	NAME: IMREAD_IGNORE_ORIENTATION  POS:  128  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ImwriteFlags
	NAME: IMWRITE_JPEG_QUALITY  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_JPEG_PROGRESSIVE  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_JPEG_OPTIMIZE  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_JPEG_RST_INTERVAL  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_JPEG_LUMA_QUALITY  POS:  5  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_JPEG_CHROMA_QUALITY  POS:  6  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_PNG_COMPRESSION  POS:  16  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_PNG_STRATEGY  POS:  17  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_PNG_BILEVEL  POS:  18  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_PXM_BINARY  POS:  32  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_EXR_TYPE  POS:  (3 << 4) + 0  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_WEBP_QUALITY  POS:  64  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_PAM_TUPLETYPE  POS:  128  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_TIFF_RESUNIT  POS:  256  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_TIFF_XDPI  POS:  257  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_TIFF_YDPI  POS:  258  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_TIFF_COMPRESSION  POS:  259  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_JPEG2000_COMPRESSION_X1000  POS:  272  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ImwriteEXRTypeFlags
	NAME: IMWRITE_EXR_TYPE_HALF  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_EXR_TYPE_FLOAT  POS:  2  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ImwritePNGFlags
	NAME: IMWRITE_PNG_STRATEGY_DEFAULT  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_PNG_STRATEGY_FILTERED  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_PNG_STRATEGY_RLE  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_PNG_STRATEGY_FIXED  POS:  4  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  ImwritePAMFlags
	NAME: IMWRITE_PAM_FORMAT_NULL  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_PAM_FORMAT_BLACKANDWHITE  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_PAM_FORMAT_GRAYSCALE  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_PAM_FORMAT_GRAYSCALE_ALPHA  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_PAM_FORMAT_RGB  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: IMWRITE_PAM_FORMAT_RGB_ALPHA  POS:  5  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  imread RETURN TYPE:  Mat modlist =  []
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  IMREAD_COLOR  MODS:  []

TYPE: function NAME:  imreadmulti RETURN TYPE:  bool modlist =  []
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: vector_Mat  NAME:  mats  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  IMREAD_ANYCOLOR  MODS:  []

TYPE: function NAME:  imreadmulti RETURN TYPE:  bool modlist =  []
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: vector_Mat  NAME:  mats  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  IMREAD_ANYCOLOR  MODS:  []

TYPE: function NAME:  imwrite RETURN TYPE:  bool modlist =  []
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: vector_int  NAME:  params  DEFAULT VALUE:  std::vector<int>()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  imwrite RETURN TYPE:  bool modlist =  []
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: vector_int  NAME:  params  DEFAULT VALUE:  std::vector<int>()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  imdecode RETURN TYPE:  Mat modlist =  []
	TYPE: Mat  NAME:  buf  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  imdecode RETURN TYPE:  Mat modlist =  []
	TYPE: UMat  NAME:  buf  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  flags  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  imencode RETURN TYPE:  bool modlist =  []
	TYPE: String  NAME:  ext  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: vector_uchar  NAME:  buf  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_int  NAME:  params  DEFAULT VALUE:  std::vector<int>()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  imencode RETURN TYPE:  bool modlist =  []
	TYPE: String  NAME:  ext  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: vector_uchar  NAME:  buf  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: vector_int  NAME:  params  DEFAULT VALUE:  std::vector<int>()  MODS:  ['/C', '/Ref']

TYPE: function NAME:  haveImageReader RETURN TYPE:  bool modlist =  []
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  haveImageWriter RETURN TYPE:  bool modlist =  []
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE:  enum  NAME:  VideoCaptureAPIs
	NAME: CAP_ANY  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_VFW  POS:  200  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_V4L  POS:  200  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_V4L2  POS:  CAP_V4L  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_FIREWIRE  POS:  300  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_FIREWARE  POS:  CAP_FIREWIRE  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_IEEE1394  POS:  CAP_FIREWIRE  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_DC1394  POS:  CAP_FIREWIRE  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_CMU1394  POS:  CAP_FIREWIRE  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_QT  POS:  500  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_UNICAP  POS:  600  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_DSHOW  POS:  700  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PVAPI  POS:  800  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI  POS:  900  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_ASUS  POS:  910  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_ANDROID  POS:  1000  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_XIAPI  POS:  1100  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_AVFOUNDATION  POS:  1200  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_GIGANETIX  POS:  1300  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_MSMF  POS:  1400  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_WINRT  POS:  1410  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_INTELPERC  POS:  1500  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_REALSENSE  POS:  1500  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI2  POS:  1600  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI2_ASUS  POS:  1610  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_GPHOTO2  POS:  1700  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_GSTREAMER  POS:  1800  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_FFMPEG  POS:  1900  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_IMAGES  POS:  2000  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_ARAVIS  POS:  2100  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENCV_MJPEG  POS:  2200  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_INTEL_MFX  POS:  2300  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_XINE  POS:  2400  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  VideoCaptureProperties
	NAME: CAP_PROP_POS_MSEC  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_POS_FRAMES  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_POS_AVI_RATIO  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_FRAME_WIDTH  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_FRAME_HEIGHT  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_FPS  POS:  5  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_FOURCC  POS:  6  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_FRAME_COUNT  POS:  7  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_FORMAT  POS:  8  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_MODE  POS:  9  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_BRIGHTNESS  POS:  10  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_CONTRAST  POS:  11  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_SATURATION  POS:  12  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_HUE  POS:  13  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_GAIN  POS:  14  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_EXPOSURE  POS:  15  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_CONVERT_RGB  POS:  16  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_WHITE_BALANCE_BLUE_U  POS:  17  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_RECTIFICATION  POS:  18  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_MONOCHROME  POS:  19  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_SHARPNESS  POS:  20  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_AUTO_EXPOSURE  POS:  21  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_GAMMA  POS:  22  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_TEMPERATURE  POS:  23  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_TRIGGER  POS:  24  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_TRIGGER_DELAY  POS:  25  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_WHITE_BALANCE_RED_V  POS:  26  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_ZOOM  POS:  27  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_FOCUS  POS:  28  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_GUID  POS:  29  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_ISO_SPEED  POS:  30  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_BACKLIGHT  POS:  32  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_PAN  POS:  33  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_TILT  POS:  34  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_ROLL  POS:  35  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_IRIS  POS:  36  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_SETTINGS  POS:  37  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_BUFFERSIZE  POS:  38  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_AUTOFOCUS  POS:  39  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_SAR_NUM  POS:  40  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_SAR_DEN  POS:  41  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_BACKEND  POS:  42  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_CHANNEL  POS:  43  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_AUTO_WB  POS:  44  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_WB_TEMPERATURE  POS:  45  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_CODEC_PIXEL_FORMAT  POS:  46  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_BITRATE  POS:  47  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  VideoWriterProperties
	NAME: VIDEOWRITER_PROP_QUALITY  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: VIDEOWRITER_PROP_FRAMEBYTES  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: VIDEOWRITER_PROP_NSTRIPES  POS:  3  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_PROP_DC1394_OFF  POS:  -4  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_DC1394_MODE_MANUAL  POS:  -3  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_DC1394_MODE_AUTO  POS:  -2  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO  POS:  -1  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_DC1394_MAX  POS:  31  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_OPENNI_DEPTH_GENERATOR  POS:  1 << 31  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_IMAGE_GENERATOR  POS:  1 << 30  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_IR_GENERATOR  POS:  1 << 29  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_GENERATORS_MASK  POS:  CAP_OPENNI_DEPTH_GENERATOR + CAP_OPENNI_IMAGE_GENERATOR + CAP_OPENNI_IR_GENERATOR  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_PROP_OPENNI_OUTPUT_MODE  POS:  100  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_OPENNI_FRAME_MAX_DEPTH  POS:  101  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_OPENNI_BASELINE  POS:  102  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_OPENNI_FOCAL_LENGTH  POS:  103  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_OPENNI_REGISTRATION  POS:  104  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_OPENNI_REGISTRATION_ON  POS:  CAP_PROP_OPENNI_REGISTRATION  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_OPENNI_APPROX_FRAME_SYNC  POS:  105  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_OPENNI_MAX_BUFFER_SIZE  POS:  106  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_OPENNI_CIRCLE_BUFFER  POS:  107  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_OPENNI_MAX_TIME_DURATION  POS:  108  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_OPENNI_GENERATOR_PRESENT  POS:  109  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_OPENNI2_SYNC  POS:  110  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_OPENNI2_MIRROR  POS:  111  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_OPENNI_IMAGE_GENERATOR_PRESENT  POS:  CAP_OPENNI_IMAGE_GENERATOR + CAP_PROP_OPENNI_GENERATOR_PRESENT  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE  POS:  CAP_OPENNI_IMAGE_GENERATOR + CAP_PROP_OPENNI_OUTPUT_MODE  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_DEPTH_GENERATOR_PRESENT  POS:  CAP_OPENNI_DEPTH_GENERATOR + CAP_PROP_OPENNI_GENERATOR_PRESENT  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_DEPTH_GENERATOR_BASELINE  POS:  CAP_OPENNI_DEPTH_GENERATOR + CAP_PROP_OPENNI_BASELINE  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH  POS:  CAP_OPENNI_DEPTH_GENERATOR + CAP_PROP_OPENNI_FOCAL_LENGTH  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION  POS:  CAP_OPENNI_DEPTH_GENERATOR + CAP_PROP_OPENNI_REGISTRATION  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON  POS:  CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_IR_GENERATOR_PRESENT  POS:  CAP_OPENNI_IR_GENERATOR + CAP_PROP_OPENNI_GENERATOR_PRESENT  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_OPENNI_DEPTH_MAP  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_POINT_CLOUD_MAP  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_DISPARITY_MAP  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_DISPARITY_MAP_32F  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_VALID_DEPTH_MASK  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_BGR_IMAGE  POS:  5  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_GRAY_IMAGE  POS:  6  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_IR_IMAGE  POS:  7  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_OPENNI_VGA_30HZ  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_SXGA_15HZ  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_SXGA_30HZ  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_QVGA_30HZ  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_OPENNI_QVGA_60HZ  POS:  4  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_PROP_GSTREAMER_QUEUE_LENGTH  POS:  200  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_PROP_PVAPI_MULTICASTIP  POS:  300  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE  POS:  301  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_PVAPI_DECIMATIONHORIZONTAL  POS:  302  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_PVAPI_DECIMATIONVERTICAL  POS:  303  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_PVAPI_BINNINGX  POS:  304  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_PVAPI_BINNINGY  POS:  305  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_PVAPI_PIXELFORMAT  POS:  306  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_PVAPI_FSTRIGMODE_FREERUN  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PVAPI_FSTRIGMODE_SYNCIN1  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PVAPI_FSTRIGMODE_SYNCIN2  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PVAPI_FSTRIGMODE_FIXEDRATE  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PVAPI_FSTRIGMODE_SOFTWARE  POS:  4  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_PVAPI_DECIMATION_OFF  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PVAPI_DECIMATION_2OUTOF4  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PVAPI_DECIMATION_2OUTOF8  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PVAPI_DECIMATION_2OUTOF16  POS:  8  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_PVAPI_PIXELFORMAT_MONO8  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PVAPI_PIXELFORMAT_MONO16  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PVAPI_PIXELFORMAT_BAYER8  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PVAPI_PIXELFORMAT_BAYER16  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PVAPI_PIXELFORMAT_RGB24  POS:  5  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PVAPI_PIXELFORMAT_BGR24  POS:  6  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PVAPI_PIXELFORMAT_RGBA32  POS:  7  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PVAPI_PIXELFORMAT_BGRA32  POS:  8  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_PROP_XI_DOWNSAMPLING  POS:  400  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_DATA_FORMAT  POS:  401  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_OFFSET_X  POS:  402  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_OFFSET_Y  POS:  403  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_TRG_SOURCE  POS:  404  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_TRG_SOFTWARE  POS:  405  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_GPI_SELECTOR  POS:  406  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_GPI_MODE  POS:  407  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_GPI_LEVEL  POS:  408  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_GPO_SELECTOR  POS:  409  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_GPO_MODE  POS:  410  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_LED_SELECTOR  POS:  411  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_LED_MODE  POS:  412  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_MANUAL_WB  POS:  413  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_AUTO_WB  POS:  414  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_AEAG  POS:  415  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_EXP_PRIORITY  POS:  416  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_AE_MAX_LIMIT  POS:  417  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_AG_MAX_LIMIT  POS:  418  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_AEAG_LEVEL  POS:  419  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_TIMEOUT  POS:  420  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_EXPOSURE  POS:  421  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_EXPOSURE_BURST_COUNT  POS:  422  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_GAIN_SELECTOR  POS:  423  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_GAIN  POS:  424  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_DOWNSAMPLING_TYPE  POS:  426  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_BINNING_SELECTOR  POS:  427  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_BINNING_VERTICAL  POS:  428  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_BINNING_HORIZONTAL  POS:  429  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_BINNING_PATTERN  POS:  430  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_DECIMATION_SELECTOR  POS:  431  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_DECIMATION_VERTICAL  POS:  432  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_DECIMATION_HORIZONTAL  POS:  433  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_DECIMATION_PATTERN  POS:  434  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_TEST_PATTERN_GENERATOR_SELECTOR  POS:  587  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_TEST_PATTERN  POS:  588  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_IMAGE_DATA_FORMAT  POS:  435  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_SHUTTER_TYPE  POS:  436  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_SENSOR_TAPS  POS:  437  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_AEAG_ROI_OFFSET_X  POS:  439  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_AEAG_ROI_OFFSET_Y  POS:  440  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_AEAG_ROI_WIDTH  POS:  441  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_AEAG_ROI_HEIGHT  POS:  442  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_BPC  POS:  445  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_WB_KR  POS:  448  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_WB_KG  POS:  449  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_WB_KB  POS:  450  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_WIDTH  POS:  451  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_HEIGHT  POS:  452  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_REGION_SELECTOR  POS:  589  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_REGION_MODE  POS:  595  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_LIMIT_BANDWIDTH  POS:  459  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH  POS:  460  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH  POS:  461  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH  POS:  462  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_OUTPUT_DATA_PACKING  POS:  463  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE  POS:  464  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_IS_COOLED  POS:  465  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_COOLING  POS:  466  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_TARGET_TEMP  POS:  467  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_CHIP_TEMP  POS:  468  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_HOUS_TEMP  POS:  469  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_HOUS_BACK_SIDE_TEMP  POS:  590  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_SENSOR_BOARD_TEMP  POS:  596  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_CMS  POS:  470  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_APPLY_CMS  POS:  471  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_IMAGE_IS_COLOR  POS:  474  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_COLOR_FILTER_ARRAY  POS:  475  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_GAMMAY  POS:  476  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_GAMMAC  POS:  477  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_SHARPNESS  POS:  478  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_CC_MATRIX_00  POS:  479  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_CC_MATRIX_01  POS:  480  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_CC_MATRIX_02  POS:  481  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_CC_MATRIX_03  POS:  482  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_CC_MATRIX_10  POS:  483  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_CC_MATRIX_11  POS:  484  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_CC_MATRIX_12  POS:  485  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_CC_MATRIX_13  POS:  486  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_CC_MATRIX_20  POS:  487  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_CC_MATRIX_21  POS:  488  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_CC_MATRIX_22  POS:  489  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_CC_MATRIX_23  POS:  490  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_CC_MATRIX_30  POS:  491  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_CC_MATRIX_31  POS:  492  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_CC_MATRIX_32  POS:  493  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_CC_MATRIX_33  POS:  494  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_DEFAULT_CC_MATRIX  POS:  495  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_TRG_SELECTOR  POS:  498  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_ACQ_FRAME_BURST_COUNT  POS:  499  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_DEBOUNCE_EN  POS:  507  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_DEBOUNCE_T0  POS:  508  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_DEBOUNCE_T1  POS:  509  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_DEBOUNCE_POL  POS:  510  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_LENS_MODE  POS:  511  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_LENS_APERTURE_VALUE  POS:  512  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE  POS:  513  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_LENS_FOCUS_MOVE  POS:  514  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_LENS_FOCUS_DISTANCE  POS:  515  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_LENS_FOCAL_LENGTH  POS:  516  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_LENS_FEATURE_SELECTOR  POS:  517  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_LENS_FEATURE  POS:  518  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_DEVICE_MODEL_ID  POS:  521  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_DEVICE_SN  POS:  522  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA  POS:  529  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_IMAGE_PAYLOAD_SIZE  POS:  530  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT  POS:  531  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ  POS:  532  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX  POS:  533  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT  POS:  534  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_FRAMERATE  POS:  535  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_COUNTER_SELECTOR  POS:  536  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_COUNTER_VALUE  POS:  537  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_ACQ_TIMING_MODE  POS:  538  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_AVAILABLE_BANDWIDTH  POS:  539  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_BUFFER_POLICY  POS:  540  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_LUT_EN  POS:  541  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_LUT_INDEX  POS:  542  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_LUT_VALUE  POS:  543  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_TRG_DELAY  POS:  544  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_TS_RST_MODE  POS:  545  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_TS_RST_SOURCE  POS:  546  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_IS_DEVICE_EXIST  POS:  547  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_ACQ_BUFFER_SIZE  POS:  548  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT  POS:  549  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE  POS:  550  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_BUFFERS_QUEUE_SIZE  POS:  551  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT  POS:  552  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_RECENT_FRAME  POS:  553  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_DEVICE_RESET  POS:  554  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_COLUMN_FPN_CORRECTION  POS:  555  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_ROW_FPN_CORRECTION  POS:  591  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_SENSOR_MODE  POS:  558  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_HDR  POS:  559  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_HDR_KNEEPOINT_COUNT  POS:  560  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_HDR_T1  POS:  561  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_HDR_T2  POS:  562  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_KNEEPOINT1  POS:  563  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_KNEEPOINT2  POS:  564  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_IMAGE_BLACK_LEVEL  POS:  565  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_HW_REVISION  POS:  571  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_DEBUG_LEVEL  POS:  572  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION  POS:  573  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_FFS_FILE_ID  POS:  594  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_FFS_FILE_SIZE  POS:  580  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_FREE_FFS_SIZE  POS:  581  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_USED_FFS_SIZE  POS:  582  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_FFS_ACCESS_KEY  POS:  583  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_SENSOR_FEATURE_SELECTOR  POS:  585  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_XI_SENSOR_FEATURE_VALUE  POS:  586  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_PROP_ARAVIS_AUTOTRIGGER  POS:  600  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_PROP_IOS_DEVICE_FOCUS  POS:  9001  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_IOS_DEVICE_EXPOSURE  POS:  9002  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_IOS_DEVICE_FLASH  POS:  9003  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_IOS_DEVICE_WHITEBALANCE  POS:  9004  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_IOS_DEVICE_TORCH  POS:  9005  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_PROP_GIGA_FRAME_OFFSET_X  POS:  10001  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_GIGA_FRAME_OFFSET_Y  POS:  10002  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_GIGA_FRAME_WIDTH_MAX  POS:  10003  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_GIGA_FRAME_HEIGH_MAX  POS:  10004  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_GIGA_FRAME_SENS_WIDTH  POS:  10005  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_GIGA_FRAME_SENS_HEIGH  POS:  10006  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_PROP_INTELPERC_PROFILE_COUNT  POS:  11001  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_INTELPERC_PROFILE_IDX  POS:  11002  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE  POS:  11003  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE  POS:  11004  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD  POS:  11005  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ  POS:  11006  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT  POS:  11007  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_INTELPERC_DEPTH_GENERATOR  POS:  1 << 29  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_INTELPERC_IMAGE_GENERATOR  POS:  1 << 28  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_INTELPERC_IR_GENERATOR  POS:  1 << 27  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_INTELPERC_GENERATORS_MASK  POS:  CAP_INTELPERC_DEPTH_GENERATOR + CAP_INTELPERC_IMAGE_GENERATOR + CAP_INTELPERC_IR_GENERATOR  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_INTELPERC_DEPTH_MAP  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_INTELPERC_UVDEPTH_MAP  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_INTELPERC_IR_MAP  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_INTELPERC_IMAGE  POS:  3  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_PROP_GPHOTO2_PREVIEW  POS:  17001  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_GPHOTO2_WIDGET_ENUMERATE  POS:  17002  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_GPHOTO2_RELOAD_CONFIG  POS:  17003  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE  POS:  17004  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_GPHOTO2_COLLECT_MSGS  POS:  17005  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_GPHOTO2_FLUSH_MSGS  POS:  17006  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_SPEED  POS:  17007  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_APERTURE  POS:  17008  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_EXPOSUREPROGRAM  POS:  17009  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_VIEWFINDER  POS:  17010  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  <unnamed>
	NAME: CAP_PROP_IMAGES_BASE  POS:  18000  DEFAULT VALUE:  []  MODS:  []
	NAME: CAP_PROP_IMAGES_LAST  POS:  19000  DEFAULT VALUE:  []  MODS:  []

TYPE:  class  NAME:  VideoCapture modlist =  []

TYPE: function NAME:  VideoCapture_VideoCapture RETURN TYPE:   modlist =  []
Modifited Return:  None

TYPE: function NAME:  VideoCapture_VideoCapture RETURN TYPE:  explicit modlist =  []
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  apiPreference  DEFAULT VALUE:  CAP_ANY  MODS:  []

TYPE: function NAME:  VideoCapture_VideoCapture RETURN TYPE:  explicit modlist =  []
	TYPE: int  NAME:  index  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  apiPreference  DEFAULT VALUE:  CAP_ANY  MODS:  []

TYPE: function NAME:  VideoCapture_open RETURN TYPE:  bool modlist =  ['/V']
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  apiPreference  DEFAULT VALUE:  CAP_ANY  MODS:  []

TYPE: function NAME:  VideoCapture_open RETURN TYPE:  bool modlist =  ['/V']
	TYPE: int  NAME:  index  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  apiPreference  DEFAULT VALUE:  CAP_ANY  MODS:  []

TYPE: function NAME:  VideoCapture_isOpened RETURN TYPE:  bool modlist =  ['/C', '/V']

TYPE: function NAME:  VideoCapture_release RETURN TYPE:  void modlist =  ['/V']

TYPE: function NAME:  VideoCapture_grab RETURN TYPE:  bool modlist =  ['/V']

TYPE: function NAME:  VideoCapture_retrieve RETURN TYPE:  bool modlist =  ['/V']
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flag  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  VideoCapture_retrieve RETURN TYPE:  bool modlist =  ['/V']
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  ['/O']
	TYPE: int  NAME:  flag  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  VideoCapture_read RETURN TYPE:  bool modlist =  ['/V']
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  VideoCapture_read RETURN TYPE:  bool modlist =  ['/V']
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  ['/O']

TYPE: function NAME:  VideoCapture_set RETURN TYPE:  bool modlist =  ['/V']
	TYPE: int  NAME:  propId  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  value  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  VideoCapture_get RETURN TYPE:  double modlist =  ['/C', '/V']
	TYPE: int  NAME:  propId  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  VideoCapture_getBackendName RETURN TYPE:  String modlist =  ['/C']

TYPE: function NAME:  VideoCapture_setExceptionMode RETURN TYPE:  void modlist =  []
	TYPE: bool  NAME:  enable  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  VideoCapture_getExceptionMode RETURN TYPE:  bool modlist =  []

TYPE:  class  NAME:  VideoWriter modlist =  []

TYPE: function NAME:  VideoWriter_VideoWriter RETURN TYPE:   modlist =  []
Modifited Return:  None

TYPE: function NAME:  VideoWriter_VideoWriter RETURN TYPE:   modlist =  []
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  fourcc  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  fps  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  frameSize  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  isColor  DEFAULT VALUE:  true  MODS:  []
Modifited Return:  None

TYPE: function NAME:  VideoWriter_VideoWriter RETURN TYPE:   modlist =  []
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  apiPreference  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  fourcc  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  fps  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  frameSize  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  isColor  DEFAULT VALUE:  true  MODS:  []
Modifited Return:  None

TYPE: function NAME:  VideoWriter_open RETURN TYPE:  bool modlist =  ['/V']
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  fourcc  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  fps  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  frameSize  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  isColor  DEFAULT VALUE:  true  MODS:  []

TYPE: function NAME:  VideoWriter_open RETURN TYPE:  bool modlist =  []
	TYPE: String  NAME:  filename  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  apiPreference  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  fourcc  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  fps  DEFAULT VALUE:    MODS:  []
	TYPE: Size  NAME:  frameSize  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  isColor  DEFAULT VALUE:  true  MODS:  []

TYPE: function NAME:  VideoWriter_isOpened RETURN TYPE:  bool modlist =  ['/C', '/V']

TYPE: function NAME:  VideoWriter_release RETURN TYPE:  void modlist =  ['/V']

TYPE: function NAME:  VideoWriter_write RETURN TYPE:  void modlist =  ['/V']
	TYPE: Mat  NAME:  image  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  VideoWriter_write RETURN TYPE:  void modlist =  ['/V']
	TYPE: UMat  NAME:  image  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  VideoWriter_set RETURN TYPE:  bool modlist =  ['/V']
	TYPE: int  NAME:  propId  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  value  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  VideoWriter_get RETURN TYPE:  double modlist =  ['/C', '/V']
	TYPE: int  NAME:  propId  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  VideoWriter_fourcc RETURN TYPE:  int modlist =  ['/S']
	TYPE: char  NAME:  c1  DEFAULT VALUE:    MODS:  []
	TYPE: char  NAME:  c2  DEFAULT VALUE:    MODS:  []
	TYPE: char  NAME:  c3  DEFAULT VALUE:    MODS:  []
	TYPE: char  NAME:  c4  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  VideoWriter_getBackendName RETURN TYPE:  String modlist =  ['/C']

TYPE:  enum  NAME:  WindowFlags
	NAME: WINDOW_NORMAL  POS:  0x00000000  DEFAULT VALUE:  []  MODS:  []
	NAME: WINDOW_AUTOSIZE  POS:  0x00000001  DEFAULT VALUE:  []  MODS:  []
	NAME: WINDOW_OPENGL  POS:  0x00001000  DEFAULT VALUE:  []  MODS:  []
	NAME: WINDOW_FULLSCREEN  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: WINDOW_FREERATIO  POS:  0x00000100  DEFAULT VALUE:  []  MODS:  []
	NAME: WINDOW_KEEPRATIO  POS:  0x00000000  DEFAULT VALUE:  []  MODS:  []
	NAME: WINDOW_GUI_EXPANDED  POS:  0x00000000  DEFAULT VALUE:  []  MODS:  []
	NAME: WINDOW_GUI_NORMAL  POS:  0x00000010  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  WindowPropertyFlags
	NAME: WND_PROP_FULLSCREEN  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: WND_PROP_AUTOSIZE  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: WND_PROP_ASPECT_RATIO  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: WND_PROP_OPENGL  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: WND_PROP_VISIBLE  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: WND_PROP_TOPMOST  POS:  5  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  MouseEventTypes
	NAME: EVENT_MOUSEMOVE  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: EVENT_LBUTTONDOWN  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: EVENT_RBUTTONDOWN  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: EVENT_MBUTTONDOWN  POS:  3  DEFAULT VALUE:  []  MODS:  []
	NAME: EVENT_LBUTTONUP  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: EVENT_RBUTTONUP  POS:  5  DEFAULT VALUE:  []  MODS:  []
	NAME: EVENT_MBUTTONUP  POS:  6  DEFAULT VALUE:  []  MODS:  []
	NAME: EVENT_LBUTTONDBLCLK  POS:  7  DEFAULT VALUE:  []  MODS:  []
	NAME: EVENT_RBUTTONDBLCLK  POS:  8  DEFAULT VALUE:  []  MODS:  []
	NAME: EVENT_MBUTTONDBLCLK  POS:  9  DEFAULT VALUE:  []  MODS:  []
	NAME: EVENT_MOUSEWHEEL  POS:  10  DEFAULT VALUE:  []  MODS:  []
	NAME: EVENT_MOUSEHWHEEL  POS:  11  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  MouseEventFlags
	NAME: EVENT_FLAG_LBUTTON  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: EVENT_FLAG_RBUTTON  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: EVENT_FLAG_MBUTTON  POS:  4  DEFAULT VALUE:  []  MODS:  []
	NAME: EVENT_FLAG_CTRLKEY  POS:  8  DEFAULT VALUE:  []  MODS:  []
	NAME: EVENT_FLAG_SHIFTKEY  POS:  16  DEFAULT VALUE:  []  MODS:  []
	NAME: EVENT_FLAG_ALTKEY  POS:  32  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  QtFontWeights
	NAME: QT_FONT_LIGHT  POS:  25  DEFAULT VALUE:  []  MODS:  []
	NAME: QT_FONT_NORMAL  POS:  50  DEFAULT VALUE:  []  MODS:  []
	NAME: QT_FONT_DEMIBOLD  POS:  63  DEFAULT VALUE:  []  MODS:  []
	NAME: QT_FONT_BOLD  POS:  75  DEFAULT VALUE:  []  MODS:  []
	NAME: QT_FONT_BLACK  POS:  87  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  QtFontStyles
	NAME: QT_STYLE_NORMAL  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: QT_STYLE_ITALIC  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: QT_STYLE_OBLIQUE  POS:  2  DEFAULT VALUE:  []  MODS:  []

TYPE:  enum  NAME:  QtButtonTypes
	NAME: QT_PUSH_BUTTON  POS:  0  DEFAULT VALUE:  []  MODS:  []
	NAME: QT_CHECKBOX  POS:  1  DEFAULT VALUE:  []  MODS:  []
	NAME: QT_RADIOBOX  POS:  2  DEFAULT VALUE:  []  MODS:  []
	NAME: QT_NEW_BUTTONBAR  POS:  1024  DEFAULT VALUE:  []  MODS:  []

TYPE: function NAME:  namedWindow RETURN TYPE:  void modlist =  []
	TYPE: String  NAME:  winname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  flags  DEFAULT VALUE:  WINDOW_AUTOSIZE  MODS:  []

TYPE: function NAME:  destroyWindow RETURN TYPE:  void modlist =  []
	TYPE: String  NAME:  winname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  destroyAllWindows RETURN TYPE:  void modlist =  []

TYPE: function NAME:  startWindowThread RETURN TYPE:  int modlist =  []

TYPE: function NAME:  waitKeyEx RETURN TYPE:  int modlist =  []
	TYPE: int  NAME:  delay  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  waitKey RETURN TYPE:  int modlist =  []
	TYPE: int  NAME:  delay  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  imshow RETURN TYPE:  void modlist =  []
	TYPE: String  NAME:  winname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  mat  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  imshow RETURN TYPE:  void modlist =  []
	TYPE: String  NAME:  winname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  mat  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  resizeWindow RETURN TYPE:  void modlist =  []
	TYPE: String  NAME:  winname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  width  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  height  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  resizeWindow RETURN TYPE:  void modlist =  []
	TYPE: String  NAME:  winname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Size  NAME:  size  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  moveWindow RETURN TYPE:  void modlist =  []
	TYPE: String  NAME:  winname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  x  DEFAULT VALUE:    MODS:  []
	TYPE: int  NAME:  y  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  setWindowProperty RETURN TYPE:  void modlist =  []
	TYPE: String  NAME:  winname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  prop_id  DEFAULT VALUE:    MODS:  []
	TYPE: double  NAME:  prop_value  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  setWindowTitle RETURN TYPE:  void modlist =  []
	TYPE: String  NAME:  winname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  title  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  getWindowProperty RETURN TYPE:  double modlist =  []
	TYPE: String  NAME:  winname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  prop_id  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  getWindowImageRect RETURN TYPE:  Rect modlist =  []
	TYPE: String  NAME:  winname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  selectROI RETURN TYPE:  Rect modlist =  []
	TYPE: String  NAME:  windowName  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  showCrosshair  DEFAULT VALUE:  true  MODS:  []
	TYPE: bool  NAME:  fromCenter  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  selectROI RETURN TYPE:  Rect modlist =  []
	TYPE: String  NAME:  windowName  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  showCrosshair  DEFAULT VALUE:  true  MODS:  []
	TYPE: bool  NAME:  fromCenter  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  selectROI RETURN TYPE:  Rect modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  showCrosshair  DEFAULT VALUE:  true  MODS:  []
	TYPE: bool  NAME:  fromCenter  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  selectROI RETURN TYPE:  Rect modlist =  []
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: bool  NAME:  showCrosshair  DEFAULT VALUE:  true  MODS:  []
	TYPE: bool  NAME:  fromCenter  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  selectROIs RETURN TYPE:  void modlist =  []
	TYPE: String  NAME:  windowName  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Rect  NAME:  boundingBoxes  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: bool  NAME:  showCrosshair  DEFAULT VALUE:  true  MODS:  []
	TYPE: bool  NAME:  fromCenter  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  selectROIs RETURN TYPE:  void modlist =  []
	TYPE: String  NAME:  windowName  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: UMat  NAME:  img  DEFAULT VALUE:    MODS:  []
	TYPE: vector_Rect  NAME:  boundingBoxes  DEFAULT VALUE:    MODS:  ['/O', '/Ref']
	TYPE: bool  NAME:  showCrosshair  DEFAULT VALUE:  true  MODS:  []
	TYPE: bool  NAME:  fromCenter  DEFAULT VALUE:  false  MODS:  []

TYPE: function NAME:  getTrackbarPos RETURN TYPE:  int modlist =  []
	TYPE: String  NAME:  trackbarname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  winname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']

TYPE: function NAME:  setTrackbarPos RETURN TYPE:  void modlist =  []
	TYPE: String  NAME:  trackbarname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  winname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  pos  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  setTrackbarMax RETURN TYPE:  void modlist =  []
	TYPE: String  NAME:  trackbarname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  winname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  maxval  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  setTrackbarMin RETURN TYPE:  void modlist =  []
	TYPE: String  NAME:  trackbarname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  winname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  minval  DEFAULT VALUE:    MODS:  []

TYPE: function NAME:  addText RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  text  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Point  NAME:  org  DEFAULT VALUE:    MODS:  []
	TYPE: String  NAME:  nameFont  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  pointSize  DEFAULT VALUE:  -1  MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:  Scalar::all(0)  MODS:  []
	TYPE: int  NAME:  weight  DEFAULT VALUE:  QT_FONT_NORMAL  MODS:  []
	TYPE: int  NAME:  style  DEFAULT VALUE:  QT_STYLE_NORMAL  MODS:  []
	TYPE: int  NAME:  spacing  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  addText RETURN TYPE:  void modlist =  []
	TYPE: Mat  NAME:  img  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  text  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: Point  NAME:  org  DEFAULT VALUE:    MODS:  []
	TYPE: String  NAME:  nameFont  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  pointSize  DEFAULT VALUE:  -1  MODS:  []
	TYPE: Scalar  NAME:  color  DEFAULT VALUE:  Scalar::all(0)  MODS:  []
	TYPE: int  NAME:  weight  DEFAULT VALUE:  QT_FONT_NORMAL  MODS:  []
	TYPE: int  NAME:  style  DEFAULT VALUE:  QT_STYLE_NORMAL  MODS:  []
	TYPE: int  NAME:  spacing  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  displayOverlay RETURN TYPE:  void modlist =  []
	TYPE: String  NAME:  winname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  text  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  delayms  DEFAULT VALUE:  0  MODS:  []

TYPE: function NAME:  displayStatusBar RETURN TYPE:  void modlist =  []
	TYPE: String  NAME:  winname  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: String  NAME:  text  DEFAULT VALUE:    MODS:  ['/C', '/Ref']
	TYPE: int  NAME:  delayms  DEFAULT VALUE:  0  MODS:  []

['=integral3', '=connectedComponentsWithStatsWithAlgorithm', '=detectMultiScale3', '=stereoCalibrateExtended', '/S', '/Ref', '=connectedComponentsWithAlgorithm', '=calibrateCameraExtended', '/O', '=distanceTransformWithLabels', '=integral2', '=sumElems', '/Map', '=calibrateCameraROExtended', '/PV', '=drawMatchesKnn', '=compute', '=PCACompute2', '/V', '=findChessboardCornersSBWithMeta', '/IO', '/RW', '=detectMultiScale2', '=undistortPointsIter', '/Simple', '=EMD', '/C']
1661
namespaces: cv cv.fisheye cv.flann cv.internal cv.ml cv.ocl cv.traits
